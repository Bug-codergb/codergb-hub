{"version":3,"file":"js/f1ab027ea6032f833b35.bundle.js","mappings":"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","sources":["webpack://codergb-hub-client/./src/network/video/index.tsx","webpack://codergb-hub-client/./src/views/thumb/style.tsx","webpack://codergb-hub-client/./src/views/thumb/index.tsx"],"sourcesContent":["import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\nexport async function uploadVideo<T = IResponseType<any>>(formData: FormData): Promise<T> {\n  return await gbRequest.post<T>({\n    url: '/video/upload',\n    data: formData,\n    headers: {\n      'Content-type': 'multipart/form-data'\n    }\n  });\n}\n// 视频合并\nexport async function mergeVideo<T = IResponseType<any>>(\n  path: string,\n  hash: string,\n  name: string,\n  type: string,\n  total: number\n): Promise<T> {\n  return await gbRequest.post<T>({\n    url: '/video/merge',\n    data: {\n      dest: path,\n      hash,\n      originalname: name,\n      type,\n      total\n    }\n  });\n}\n// 创建video\nexport async function createVideo<T = IResponseType<any>>(\n  videoId: string,\n  title: string,\n  desc: string,\n  imgId: string,\n  playlistId: string,\n  tagIds: string[],\n  cateId: string,\n  dt: number\n) {\n  return await gbRequest.post<T>({\n    url: '/video/create',\n    data: {\n      videoId,\n      title,\n      desc,\n      imgId,\n      playlistId,\n      tagIds,\n      cateId,\n      dt\n    }\n  });\n}\n// 获取所有视频\nexport async function getAllVideo<T = IResponseType<any>>(\n  offset: number,\n  limit: number,\n  keyword: string\n) {\n  return await gbRequest.post<T>({\n    url: '/video/all',\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      keyword\n    }\n  });\n}\n// 获取视频URL\nexport async function getVideoURL<T = IResponseType<any>>(id: string) {\n  return await gbRequest.get<T>({\n    url: `/video/url/${id}`\n  });\n}\nexport async function getVideoDetail<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post<T>({\n    url: `/video/detail/${id}`\n  });\n}\n// 获取用户视频\nexport async function getUserVideo<T = IResponseType<any>>(\n  id: string,\n  keyword: string,\n  offset: number,\n  limit: number\n) {\n  return await gbRequest.post<T>({\n    url: `/user/video/${id}`,\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      keyword\n    }\n  });\n}\n// 获取订阅用户视频\nexport async function getSubUserVideo<T = IResponseType<any>>(\n  userId: string,\n  offset: number,\n  limit: number,\n  isMonth: number\n) {\n  return await gbRequest.post<T>({\n    url: `/video/sub/user/${userId}`,\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      isMonth\n    }\n  });\n}\n// 获取用户点赞视频\nexport async function getThumbUserVideo<T = IResponseType<any>>(\n  userId: string,\n  offset: number,\n  limit: number\n) {\n  return await gbRequest.post<T>({\n    url: '/video/thumb/user/' + userId,\n    params: {\n      offset,\n      limit\n    }\n  });\n}\n// 获取相关视频\nexport async function getSimilarVideo<T = IResponseType<any>>(\n  id: string,\n  offset: number,\n  limit: number\n) {\n  return await gbRequest.post<T>({\n    url: '/video/similar/' + id,\n    params: {\n      offset,\n      limit\n    }\n  });\n}\nexport async function getCollectionVideo<T = IResponseType<any>>(\n  id: string,\n  offset: number,\n  limit: number\n) {\n  return await gbRequest.post<T>({\n    url: '/video/collection/' + id,\n    params: {\n      offset,\n      limit\n    }\n  });\n}\nexport async function recordVideo<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post<T>({\n    url: '/record/' + id\n  });\n}\nexport async function getUserRecordVideo<T = IResponseType<any>>(id: string) {\n  return await gbRequest.get<T>({\n    url: '/record/user/' + id\n  });\n}\nexport async function getUserRecordThumb<T = IResponseType<any>>(id: string) {\n  return await gbRequest.get<T>({\n    url: '/record/thumb/' + id\n  });\n}\nexport async function addPlayCount<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post<T>({\n    url: 'video/playCount/' + id\n  });\n}\n","import styled from 'styled-components';\nexport const ThumbWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n","import React, { memo, type FC, ReactElement, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { type Map } from 'immutable';\nimport { ThumbWrapper } from './style';\nimport { type IThumb } from '../../types/thumb/IThumb';\nimport { getThumbUserVideo } from '../../network/video';\nimport { useSelector } from 'react-redux';\nimport { type ILogin } from '../../types/login/ILogin';\nimport { type IResponseType } from '../../types/responseType';\nimport { type IPage } from '../../types/IPage';\nimport { LeftContent, RightContent } from '../user-playlist/style';\nimport moment from 'moment';\nimport { type IVideo } from '../../types/video/IVideo';\nconst Thumb: FC = () => {\n  const [count, setCount] = useState<number>(0);\n  const [videoThumb, setVideoThumb] = useState<IThumb[]>([]);\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    getThumbUserVideo<IResponseType<IPage<IThumb[]>>>(login.userMsg.userId, 0, 10).then((data) => {\n      if (data.status === 200) {\n        setCount(data.data.count);\n        setVideoThumb(data.data.list);\n      }\n    });\n  }, []);\n\n  const videoRouterHandle = (item: IVideo) => {\n    navigate('/videoDetail', {\n      replace: true,\n      state: {\n        id: item.id\n      }\n    });\n  };\n  return (\n    <ThumbWrapper>\n      {videoThumb && (\n        <LeftContent\n          bgc={\n            videoThumb && videoThumb.length !== 0 && videoThumb[0].video\n              ? videoThumb[0].video.picUrl\n              : login.userMsg.avatarUrl\n          }\n        >\n          <div className=\"img-container\">\n            {videoThumb && (\n              <img\n                src={\n                  videoThumb && videoThumb.length !== 0\n                    ? videoThumb[0].video.picUrl\n                    : login.userMsg.avatarUrl\n                }\n              />\n            )}\n          </div>\n          <p className=\"later-label\">顶过的视频</p>\n          <p className=\"user-name\">{login.userMsg.userName}</p>\n          <div className=\"vio-info\">\n            <div className=\"vio-count\">{count}个视频</div>\n            <div className=\"update-time\">\n              {videoThumb && videoThumb[0]\n                ? moment(videoThumb && videoThumb[0] ? videoThumb[0].updateTime : '').format(\n                    'yyyy-MM-DD HH:MM'\n                  )\n                : '暂无'}\n              更新\n            </div>\n          </div>\n          <div className=\"mask\"></div>\n        </LeftContent>\n      )}\n      <RightContent>\n        <ul className=\"vio-list\">\n          {videoThumb &&\n            videoThumb.length !== 0 &&\n            videoThumb.map((item) => {\n              return (\n                <li key={item.id}>\n                  <div\n                    className=\"cover-container\"\n                    onClick={(e) => {\n                      videoRouterHandle(item.video);\n                    }}\n                  >\n                    <img src={item.video.picUrl} />\n                  </div>\n                  <div className=\"later-right-info\">\n                    <p\n                      className=\"vio-name text-nowrap-mul-line\"\n                      onClick={(e) => {\n                        videoRouterHandle(item.video);\n                      }}\n                    >\n                      {item.video.name}\n                    </p>\n                    <div className=\"desc\">\n                      <div className=\"user-name\">{item.user.userName}.</div>\n                      <div className=\"play-count\">{item.video.playCount}次观看.</div>\n                      <div className=\"create-time\">{moment(item.createTime).fromNow()}加入</div>\n                    </div>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      </RightContent>\n    </ThumbWrapper>\n  );\n};\nexport default memo(Thumb);\n"],"names":["gbRequest","uploadVideo","formData","post","url","data","headers","mergeVideo","path","hash","name","type","total","dest","originalname","createVideo","videoId","title","desc","imgId","playlistId","tagIds","cateId","dt","getAllVideo","offset","limit","keyword","params","getVideoURL","id","get","getVideoDetail","getUserVideo","getSubUserVideo","userId","isMonth","getThumbUserVideo","getSimilarVideo","getCollectionVideo","recordVideo","getUserRecordVideo","getUserRecordThumb","addPlayCount","styled","ThumbWrapper","div","React","memo","useState","useEffect","useNavigate","useSelector","LeftContent","RightContent","moment","Thumb","count","setCount","videoThumb","setVideoThumb","login","state","getIn","navigate","userMsg","then","status","list","videoRouterHandle","item","replace","createElement","bgc","length","video","picUrl","avatarUrl","className","src","userName","updateTime","format","map","key","onClick","e","user","playCount","createTime","fromNow"],"sourceRoot":""}