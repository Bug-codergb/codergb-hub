{"version":3,"file":"js/91c92fafff44eb153c74.bundle.js","mappings":";;;;;;;;;;;AAAiC;AAE1B,eAAeC,UAAUA,CAAyBC,MAAc,EAAEC,KAAa,EAAE;EACtF,OAAO,MAAMH,uDAAS,CAACI,GAAG,CAAI;IAC5BC,GAAG,EAAE,WAAW;IAChBC,MAAM,EAAE;MACNJ,MAAM;MACNC;IACF;EACF,CAAC,CAAC;AACJ;AACO,eAAeI,cAAcA,CAAA,EAA2B;EAC7D,OAAO,MAAMP,SAAS,CAACI,GAAG,CAAI;IAC5BC,GAAG,EAAE;EACP,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;;;;;;;;;;ACfuC;AACM;AACtC,MAAMK,UAAU,GAAGF,6CAAM,CAACG,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,8BAA8BF,oBAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgCA,oBAAK;AACrC;AACA;AACA;AACA;AACA,CAAC;;ACvBoF;AACjC;AAGf;AAErC,MAAMO,QAAY,GAAGA,CAAA,KAAoB;EACvC,MAAM,CAACP,IAAI,EAAEQ,OAAO,CAAC,GAAGF,kBAAQ,CAAU,EAAE,CAAC;EAC7C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,kBAAQ,CAAS,CAAC,CAAC;EAC7CD,mBAAS,CAAC,MAAM;IACdb,8BAAU,CAAgC,CAAC,EAAE,EAAE,CAAC,CAACmB,IAAI,CAAEC,GAAG,IAAK;MAC7D,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBL,OAAO,CAACI,GAAG,CAACE,IAAI,CAACC,IAAI,CAAC;QACtBL,QAAQ,CAACE,GAAG,CAACE,IAAI,CAACL,KAAK,CAAC;MAC1B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGX,kBAAQ,CAAS,CAAC,CAAC;EAC3D,MAAMY,OAAO,GAAGA,CAACC,IAAW,EAAEC,KAAa,KAAK;IAC9CH,eAAe,CAACG,KAAK,CAAC;EACxB,CAAC;EACD,oBACEjB,mBAAA,CAACF,UAAU,qBACTE,mBAAA;IAAImB,SAAS,EAAC;EAAW,GACtBtB,IAAI,IACHA,IAAI,CAACuB,MAAM,KAAK,CAAC,IACjBvB,IAAI,CAACwB,GAAG,CAAC,CAACL,IAAI,EAAEC,KAAK,KAAK;IACxB,oBACEjB,mBAAA;MACEmB,SAAS,EAAG,QAAON,YAAY,KAAKI,KAAK,GAAG,QAAQ,GAAG,EAAG,EAAE;MAC5DK,OAAO,EAAEA,CAAA,KAAM;QACbP,OAAO,CAACC,IAAI,EAAEC,KAAK,CAAC;MACtB,CAAE;MACFM,GAAG,EAAEP,IAAI,CAACQ;IAAG,GAEZR,IAAI,CAACS,IACJ,CAAC;EAET,CAAC,CACD,CACM,CAAC;AAEjB,CAAC;AACD,2DAAexB,cAAI,CAACG,QAAQ,CAAC","sources":["webpack://codergb-hub-client/./src/network/category/index.tsx","webpack://codergb-hub-client/./src/views/all/style.tsx","webpack://codergb-hub-client/./src/views/all/index.tsx"],"sourcesContent":["import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\nexport async function getAllCate<T = IResponseType<any>>(offset: number, limit: number) {\n  return await gbRequest.get<T>({\n    url: '/cate/all',\n    params: {\n      offset,\n      limit\n    }\n  });\n}\nexport async function getCateExplore<T = IResponseType<any>>() {\n  return await gbRequest.get<T>({\n    url: '/cate/explore'\n  });\n}\n","import styled from 'styled-components';\nimport cate from '../../assets/img/cate.png';\nexport const AllWrapper = styled.div`\n  .cate-list {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    li.item {\n      background-image: url(${cate}),\n        linear-gradient(312deg, rgb(192, 208, 255) 3%, rgb(112, 147, 204) 100%);\n      background-position: center;\n      background-size: cover;\n      color: #fff;\n      padding: 5px 15px;\n      margin: 0 10px 0 0;\n      border-radius: 4px;\n      cursor: pointer;\n      &.active {\n        background-image: url(${cate}),\n          linear-gradient(303deg, rgb(255, 155, 126) -10%, rgb(255, 21, 21) 92%);\n      }\n    }\n  }\n`;\n","import React, { memo, type FC, type ReactElement, useEffect, useState } from 'react';\nimport { getAllCate } from '../../network/category';\nimport { type ICate } from '../../types/category/ICate';\nimport { type IResponseType } from '../../types/responseType';\nimport { AllWrapper } from './style';\nimport { type IPage } from '../../types/IPage';\nconst AllVideo: FC = (): ReactElement => {\n  const [cate, setCate] = useState<ICate[]>([]);\n  const [count, setCount] = useState<number>(0);\n  useEffect(() => {\n    getAllCate<IResponseType<IPage<ICate[]>>>(0, 10).then((res) => {\n      if (res.status === 200) {\n        setCate(res.data.list);\n        setCount(res.data.count);\n      }\n    });\n  }, []);\n\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const liClick = (item: ICate, index: number) => {\n    setCurrentIndex(index);\n  };\n  return (\n    <AllWrapper>\n      <ul className=\"cate-list\">\n        {cate &&\n          cate.length !== 0 &&\n          cate.map((item, index) => {\n            return (\n              <li\n                className={`item ${currentIndex === index ? 'active' : ''}`}\n                onClick={() => {\n                  liClick(item, index);\n                }}\n                key={item.id}\n              >\n                {item.name}\n              </li>\n            );\n          })}\n      </ul>\n    </AllWrapper>\n  );\n};\nexport default memo(AllVideo);\n"],"names":["gbRequest","getAllCate","offset","limit","get","url","params","getCateExplore","styled","cate","AllWrapper","div","React","memo","useEffect","useState","AllVideo","setCate","count","setCount","then","res","status","data","list","currentIndex","setCurrentIndex","liClick","item","index","createElement","className","length","map","onClick","key","id","name"],"sourceRoot":""}