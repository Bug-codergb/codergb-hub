{"version":3,"file":"static/js/3122.323701ed.chunk.js","mappings":"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","sources":["webpack://codergb-hub-client/./src/components/common/subBtn/style.tsx","webpack://codergb-hub-client/./src/components/common/subBtn/index.tsx","webpack://codergb-hub-client/./src/components/content/add/style.tsx","webpack://codergb-hub-client/./src/components/content/playlist/style.tsx","webpack://codergb-hub-client/./src/components/content/playlist/index.tsx","webpack://codergb-hub-client/./src/components/content/add/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/style.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/home/style.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/home/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/community/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/desc/style.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/desc/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/uploadedVideo/style.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/uploadedVideo/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/playlist/style.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/playlist/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/subscriber/style.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/subscriber/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/short/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/mulPlay/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/singlePlay/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/wonderChannel/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/hotVideo/style.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/childCpn/hotVideo/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/userDetail/config/index.tsx","webpack://codergb-hub-client/./src/components/videoItem/style.tsx","webpack://codergb-hub-client/./src/components/videoItem/index.tsx","webpack://codergb-hub-client/./src/constant/addList.ts","webpack://codergb-hub-client/./src/constant/block.ts","webpack://codergb-hub-client/./src/hook/useSub/index.tsx","webpack://codergb-hub-client/./src/network/block/index.tsx","webpack://codergb-hub-client/./src/network/history/index.tsx","webpack://codergb-hub-client/./src/network/later/index.tsx","webpack://codergb-hub-client/./src/network/subscriber/index.tsx","webpack://codergb-hub-client/./src/utils/time.tsx"],"sourcesContent":["import styled from 'styled-components';\nexport const SubBtnWrapper = styled.div`\n  background-color: #f2f2f2;\n  color: #0f0f0f;\n  cursor: pointer;\n  font-size: ${20 / 40}rem;\n\n  border-radius: ${24 / 40}rem;\n  margin: 0 0 0 ${40 / 40}rem;\n  text-align: center;\n  .inner {\n    width: 100%;\n    height: 100%;\n    padding: ${10 / 40}rem ${20 / 40}rem;\n  }\n  &:hover {\n    background-color: #e5e5e5;\n  }\n`;\n","import React, { memo, type FC, type ReactElement } from 'react';\nimport { notification } from 'antd';\nimport { SubBtnWrapper } from './style';\nimport { useSub } from '../../../hook/useSub';\nimport { useLoginMsg } from '../../../hook/useLoginMsg';\nimport { type Dispatch } from 'redux';\nimport { useDispatch } from 'react-redux';\nimport { sub, cancelSub } from '../../../network/subscriber';\nimport { changeUserDetailAction } from '../../../views/login/store/actionCreators';\ninterface IProps {\n  userId: string;\n}\nconst SubBtn: FC<IProps> = (props): ReactElement => {\n  const { userId } = props;\n  const isSub = useSub(userId);\n  const loginMsg = useLoginMsg();\n  const dispatch = useDispatch<Dispatch<any>>();\n  const subHandler = async () => {\n    if (!isSub) {\n      const result = await sub(userId);\n      if (result.status === 200) {\n        notification.info({\n          message: `订阅成功`,\n          description: `在“订阅内容中”查看您添加的视频`,\n          placement: 'bottomLeft'\n        });\n      }\n    } else {\n      const result = await cancelSub(userId);\n      if (result.status === 200) {\n      }\n    }\n    if (loginMsg && loginMsg.userMsg) {\n      dispatch(changeUserDetailAction(loginMsg.userMsg.userId));\n    }\n  };\n  return (\n    <SubBtnWrapper>\n      <div\n        className=\"inner\"\n        onClick={async () => {\n          await subHandler();\n        }}\n      >\n        {isSub ? '已订阅' : '订阅'}\n      </div>\n    </SubBtnWrapper>\n  );\n};\nexport default memo(SubBtn);\n","import styled from 'styled-components';\nexport const AddWrapper = styled.div`\n  background-color: #fff;\n  box-shadow: 0 0 ${15 / 40}rem rgba(0, 0, 0, 0.18);\n  .add-list {\n    padding: ${26 / 40}rem 0;\n    & > li {\n      padding: ${12 / 40}rem ${20 / 40}rem;\n      cursor: pointer;\n      .name {\n        font-size: ${18 / 40}rem;\n      }\n      &:hover {\n        background-color: #e5e5e5;\n      }\n    }\n  }\n  .ant-select {\n    width: 100%;\n  }\n  .create-playlist {\n    padding: 0 0 ${20 / 40}rem 0;\n    p {\n      display: flex;\n      justify-content: flex-start;\n      font-size: ${18 / 40}rem;\n      color: #606060;\n      margin: ${14 / 40}rem 0;\n    }\n    .private {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n    .create-label {\n      font-size: ${18 / 40}rem;\n      color: #065fd4;\n      margin: ${20 / 40}rem 0 0 0;\n      cursor: pointer;\n      width: 100%;\n    }\n  }\n`;\n","import styled from 'styled-components';\nexport const PlaylistWrapper = styled.div`\n  .add-play-list {\n    & > li {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${8 / 40}rem 0;\n      .left-container {\n        display: flex;\n        align-items: center;\n        .play-list-name {\n          margin: 0 0 0 ${30 / 40}rem;\n        }\n      }\n    }\n  }\n`;\n","import React, { memo, type FC, useState, useEffect } from 'react';\nimport type { CheckboxChangeEvent } from 'antd/es/checkbox';\nimport { PlaylistWrapper } from './style';\nimport { Checkbox } from 'antd';\nimport { EyeInvisibleOutlined, EyeOutlined } from '@ant-design/icons';\nimport { type IPlaylist } from '../../../types/playlist/IPlaylist';\nimport { useSelector } from 'react-redux';\nimport { type Map } from 'immutable';\nimport { type ILogin } from '../../../types/login/ILogin';\nimport { getUserPlaylist } from '../../../network/playlist';\nimport { type IResponseType } from '../../../types/responseType';\nimport { type IPage } from '../../../types/IPage';\ninterface IProps {\n  select: (checked: boolean, item: IPlaylist) => void;\n}\nconst Playlist: FC<IProps> = (props) => {\n  const { select } = props;\n  const [playlist, setPlaylist] = useState<IPlaylist[]>([]);\n  const [count, setCount] = useState<number>(0);\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  useEffect(() => {\n    getUserPlaylist<IResponseType<IPage<IPlaylist[]>>>(login.userMsg.userId, 0, 10).then((data) => {\n      if (data.status === 200) {\n        setPlaylist(data.data.list);\n        setCount(data.data.count);\n      }\n    });\n  }, [login]);\n\n  const selectChangeHandle = (e: CheckboxChangeEvent, item: IPlaylist) => {\n    select(e.target.checked, item);\n  };\n  return (\n    <PlaylistWrapper>\n      <ul className=\"add-play-list\">\n        {playlist &&\n          playlist.length !== 0 &&\n          playlist.map((item, index) => {\n            return (\n              <li key={item.id}>\n                <div className=\"left-container\">\n                  <div className=\"check\">\n                    <Checkbox\n                      onChange={(e) => {\n                        selectChangeHandle(e, item);\n                      }}\n                    />\n                  </div>\n                  <div className=\"play-list-name\">{item.name}</div>\n                </div>\n                <div className=\"right-container\">\n                  {item.isPublic === 1 && <EyeOutlined />}\n                  {item.isPublic !== 1 && <EyeInvisibleOutlined />}\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </PlaylistWrapper>\n  );\n};\nexport default memo(Playlist);\n","import React, {\n  memo,\n  type FC,\n  type ReactElement,\n  useState,\n  type FormEvent,\n  useImperativeHandle,\n  forwardRef,\n  type Ref,\n  type MouseEvent\n} from 'react';\nimport { Modal, Input, Select, notification, Menu } from 'antd';\nimport { EyeInvisibleOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\nimport type { NotificationPlacement } from 'antd/es/notification';\nimport { AddWrapper } from './style';\nimport { ADD_PLAYLIST, ADD_WATCH_LATER, addList, type IAddType } from '../../../constant/addList';\nimport Playlist from '../playlist';\nimport { addVideoPlaylist, createPlaylist } from '../../../network/playlist';\nimport { type IPlaylist } from '../../../types/playlist/IPlaylist';\nimport { addLater } from '../../../network/later';\n\nconst { Option } = Select;\ninterface IAdd {\n  liClick: (item: IAddType) => void;\n}\ninterface IProps {\n  id: string;\n  ref: Ref<IAdd> | null;\n}\nconst Add: FC<IProps> = forwardRef((props, propsRef): ReactElement => {\n  const { id } = props;\n  const [isShowAddPlay, setIsShowPlay] = useState<boolean>(false);\n  const [isCreate, setIsCreate] = useState<boolean>(false);\n  const [keyIndex, setKeyIndex] = useState<number>(1);\n\n  const [name, setName] = useState<string>('');\n  const [isPublic, setIsPublic] = useState<number>(0);\n\n  const openNotification = (placement: NotificationPlacement) => {\n    notification.info({\n      message: `已成功添加至稍后观看`,\n      description: '在\"稍后观看\"查看您添加的视频',\n      placement\n    });\n  };\n\n  const liClick = (item: IAddType) => {\n    if (item.name === ADD_PLAYLIST) {\n      setIsShowPlay(true);\n    }\n    if (item.name === ADD_WATCH_LATER) {\n      addLater(id)\n        .then((data) => {\n          console.log(data);\n          if (data.status === 200) {\n            openNotification('bottomLeft');\n          }\n        })\n        .catch((err) => {});\n    }\n  };\n\n  useImperativeHandle<IAdd, IAdd>(propsRef, () => {\n    return {\n      liClick\n    };\n  });\n  const cancelHandle = () => {\n    setIsShowPlay(false);\n  };\n  const nameInpHandle = (e: FormEvent<HTMLInputElement>) => {\n    setName(e.currentTarget.value);\n  };\n  const selectPublicHandle = (value: number) => {\n    setIsPublic(value);\n  };\n  // 创建播放列表\n  const createHandle = () => {\n    if (name) {\n      createPlaylist(name, name, isPublic).then((data) => {\n        if (data.status === 200) {\n          setIsCreate(false);\n          setKeyIndex(keyIndex + 1);\n        }\n      });\n    }\n  };\n  const checkHandle = (checked: boolean, item: IPlaylist) => {\n    if (checked) {\n      addVideoPlaylist(id, item.id).then((data) => {\n        if (data.status === 200) {\n          notification.info({\n            message: `已成功添加至${item.name}`,\n            description: `在\"${item.name}\"查看您添加的视频`,\n            placement: 'bottomLeft'\n          });\n        }\n      });\n    }\n  };\n\n  const createPlaylistHandler = (e: MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n    setIsCreate(true);\n  };\n  return (\n    <AddWrapper>\n      <div\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n      >\n        <Modal\n          key={id}\n          title=\"保存到...\"\n          width={'30%'}\n          destroyOnClose={true}\n          maskClosable={false}\n          open={isShowAddPlay}\n          onCancel={(e) => {\n            cancelHandle();\n          }}\n          footer={\n            !isCreate\n              ? [\n                  <div className=\"add-new-playlist\">\n                    <PlusOutlined />\n                    <div\n                      className=\"add-label\"\n                      onClick={(e) => {\n                        createPlaylistHandler(e);\n                      }}\n                    >\n                      新建播放列表\n                    </div>\n                  </div>\n                ]\n              : [\n                  <div className=\"create-playlist\">\n                    <p>名称</p>\n                    <Input\n                      placeholder=\"请输入播放列表名称\"\n                      showCount\n                      maxLength={20}\n                      onInput={(e) => {\n                        nameInpHandle(e);\n                      }}\n                    />\n                    <p>隐私设置</p>\n                    <Select\n                      onChange={selectPublicHandle}\n                      value={isPublic}\n                      placeholder={'请选择播放列表属性'}\n                    >\n                      <Option value={0}>\n                        <div className=\"private\">\n                          <div className=\"name\">私享</div>\n                          <div className=\"icon\">\n                            <EyeInvisibleOutlined />\n                          </div>\n                        </div>\n                      </Option>\n                      <Option value={1}>\n                        <div className=\"private\">\n                          <div className=\"name\">公开</div>\n                          <div className=\"icon\">\n                            <EyeOutlined />\n                          </div>\n                        </div>\n                      </Option>\n                    </Select>\n                    <div\n                      className=\"create-label\"\n                      onClick={(e) => {\n                        createHandle();\n                      }}\n                    >\n                      创建\n                    </div>\n                  </div>\n                ]\n          }\n        >\n          {isShowAddPlay && (\n            <Playlist\n              key={keyIndex}\n              select={(checked, item) => {\n                checkHandle(checked, item);\n              }}\n            />\n          )}\n        </Modal>\n      </div>\n    </AddWrapper>\n  );\n});\nexport default memo(Add);\n","import styled from 'styled-components';\n\nexport const UserDetailWrapper = styled.div`\n  width: 100%;\n  height: 86vh;\n  background-color: #fff;\n  overflow-y: scroll;\n  img {\n    width: 100%;\n  }\n  .banner {\n    min-height: ${200 / 40}rem;\n  }\n  .user-info {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .left {\n      display: flex;\n      align-items: flex-start;\n      margin: ${30 / 40}rem 0 ${20 / 40}rem 0;\n\n      .img-container {\n        width: ${120 / 40}rem;\n\n        img {\n          width: 100%;\n          border-radius: 50%;\n        }\n      }\n\n      .right-info {\n        margin: 0 0 0 ${24 / 40}rem;\n\n        .user-name {\n          font-size: ${28 / 40}rem;\n        }\n      }\n    }\n    .control-btn {\n      display: flex;\n      align-items: center;\n      .sub-btn {\n        margin: 0 0 0 ${10 / 40}rem;\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\nexport const HomeWrapper = styled.div`\n  .video-tip {\n    font-weight: bold;\n    margin: 0 0 ${14 / 40}rem 0;\n    font-size: ${20 / 40}rem;\n  }\n  .trailer {\n    display: flex;\n    align-items: flex-start;\n    border-bottom: 1px solid #e5e5e5;\n    padding: 0 0 ${20 / 40}rem 0;\n    margin: 0 0 ${16 / 40}rem 0;\n    .left-container {\n      width: ${390 / 40}rem;\n      position: relative;\n      img {\n        border-radius: ${8 / 40}rem;\n        width: 100%;\n      }\n      video {\n        width: 100%;\n        height: ${220 / 40}rem;\n        border-radius: 4px;\n        object-fit: contain;\n        background-color: #333;\n      }\n    }\n    .right-container {\n      width: 70%;\n      margin: 0 0 0 ${20 / 40}rem;\n      .video-name {\n        font-size: ${24 / 40}rem;\n      }\n      .play-count-time {\n        display: flex;\n        align-items: center;\n        margin: ${15 / 40}rem 0;\n        p {\n          font-size: ${16 / 40}rem;\n          color: #606060;\n        }\n        .count {\n          margin: 0 ${8 / 40}rem 0 0;\n        }\n        .desc {\n          font-size: ${18 / 40}rem;\n          color: #606060;\n        }\n      }\n    }\n  }\n`;\n","import React, {\n  memo,\n  type FC,\n  Fragment,\n  useRef,\n  useState,\n  useEffect,\n  type SyntheticEvent\n} from 'react';\nimport { Empty } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport moment from 'moment';\nimport Hls from 'hls.js';\nimport { addHistory } from '../../../../../../network/history';\nimport { type IChannel } from '../../../../../../types/channel/IChannel';\nimport { HomeWrapper } from './style';\nimport { type IVideo } from '../../../../../../types/video/IVideo';\nimport { getVideoURL } from '../../../../../../network/video';\nimport { type IResponseType } from '../../../../../../types/responseType';\ninterface IProps {\n  userId: string;\n  channel?: IChannel;\n}\nconst Home: FC<IProps> = (props) => {\n  const { channel } = props;\n  const navigate = useNavigate();\n\n  const [vioURL, setVioURL] = useState<string>('');\n  const videoRef = useRef<HTMLVideoElement>(null);\n  useEffect(() => {\n    console.log(channel);\n    if (channel?.trailer) {\n      getVideoURL<IResponseType<{ vioUrl: string }>>(channel.trailer.id).then((res) => {\n        if (res.status === 200) {\n          let url = res.data.vioUrl;\n          if (process.env.NODE_ENV === 'development') {\n            url = url.replace(\n              `${process.env.SERVER_PORT}`,\n              `${process.env.WEBPACK_SERVER_PORT}/gb`\n            );\n          }\n          setVioURL(url);\n        }\n      });\n    }\n  }, [channel]);\n  useEffect(() => {\n    if (videoRef.current && channel) {\n      if (Hls.isSupported()) {\n        const hls = new Hls();\n        hls.loadSource(vioURL);\n        hls.attachMedia(videoRef.current);\n        if (channel) addHistory(channel.trailer!.id);\n      } else if (videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\n        videoRef.current.src = vioURL;\n      }\n    }\n  }, [videoRef.current, vioURL, channel]);\n\n  const canPlay = () => {\n    if (videoRef.current) {\n      videoRef.current.volume = 0.5;\n    }\n  };\n  const videoRouter = (trailer?: IVideo) => {\n    if (trailer) {\n      navigate('/videoDetail', {\n        replace: true,\n        state: {\n          id: trailer.id\n        }\n      });\n    }\n  };\n  const videoPlayHandle = (e: SyntheticEvent<HTMLVideoElement>) => {};\n  return (\n    <HomeWrapper>\n      <div className=\"video-tip\">频道预告片</div>\n      <div className=\"trailer\">\n        <div className=\"left-container\">\n          {channel?.trailer && vioURL && (\n            <video\n              ref={videoRef}\n              controls={true}\n              muted={false}\n              loop={true}\n              onTimeUpdate={(e) => {\n                videoPlayHandle(e);\n              }}\n              onCanPlay={canPlay}\n              autoPlay={true}\n            />\n          )}\n          {!channel?.trailer && (\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'ta还没有添加频道预告片'} />\n          )}\n        </div>\n        {channel?.trailer && (\n          <Fragment>\n            <div className=\"right-container\">\n              <p\n                className=\"video-name\"\n                onClick={() => {\n                  videoRouter(channel.trailer);\n                }}\n              >\n                {channel.trailer?.name}\n              </p>\n              <p className=\"play-count-time\">\n                <p className=\"count\">{channel.trailer?.playCount}次观看</p>\n                <p>{moment(channel.trailer?.createTime).fromNow()}</p>\n              </p>\n              <p className=\"desc\">{channel.trailer?.description}</p>\n            </div>\n          </Fragment>\n        )}\n      </div>\n      <div className=\"video-tip\">频道精选视频</div>\n      <div className=\"trailer\">\n        <div className=\"left-container\">\n          {channel?.featured && (\n            <img\n              src={channel.featured?.picUrl}\n              onClick={() => {\n                videoRouter(channel.featured);\n              }}\n            />\n          )}\n\n          {!channel?.featured && (\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={'ta还没有添加频道精选视频'} />\n          )}\n        </div>\n        {channel?.featured && (\n          <Fragment>\n            <div className=\"right-container\">\n              <p\n                className=\"video-name\"\n                onClick={() => {\n                  videoRouter(channel.featured);\n                }}\n              >\n                {channel.featured?.name}\n              </p>\n              <p className=\"play-count-time\">\n                <p className=\"count\">{channel.featured?.playCount}次观看</p>\n                <p>{moment(channel.featured?.createTime).fromNow()}</p>\n              </p>\n              <p className=\"desc\">{channel.featured?.description}</p>\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </HomeWrapper>\n  );\n};\nexport default memo(Home);\n","import React, { memo, type FC } from 'react';\nimport CommunityPro from '../../../../../../views/explore/childCpn/common/childCpn/community';\nimport { type IChannel } from '../../../../../../types/channel/IChannel';\ninterface IProps {\n  userId: string;\n  channel?: IChannel;\n}\nconst Community: FC<IProps> = (props) => {\n  const { userId, channel } = props;\n  console.log(channel);\n  return (\n    <div>{channel && <CommunityPro userId={userId} cId={channel.id} isShowPub={false} />}</div>\n  );\n};\nexport default memo(Community);\n","import styled from 'styled-components';\nexport const DescWrapper = styled.div``;\n","import React, { memo, FC } from 'react';\nimport { DescWrapper } from './style';\ninterface IProps {\n  userId: string;\n}\nconst Desc: FC<IProps> = () => {\n  return <DescWrapper>jianjie</DescWrapper>;\n};\nexport default memo(Desc);\n","import styled from 'styled-components';\nexport const UploadedVideoWrapper = styled.div`\n  .video-list {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n`;\n","import React, { memo, type FC, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { UploadedVideoWrapper } from './style';\nimport { type IVideo } from '../../../../../../types/video/IVideo';\nimport { getUserVideo } from '../../../../../../network/video';\nimport { type IResponseType } from '../../../../../../types/responseType';\nimport { type IPage } from '../../../../../../types/IPage';\nimport VideoItem from '../../../../../videoItem';\nimport HolderCpn from '../../../../../holder';\ninterface IProps {\n  userId: string;\n}\nconst UploadedVideo: FC<IProps> = (props) => {\n  const { userId } = props;\n  const navigate = useNavigate();\n  const [video, setVideo] = useState<IVideo[]>([]);\n  const [total, setTotal] = useState<number>(0);\n  const getUserVideoReq = (userId: string, keyword: '', offset: number, limit: number) => {\n    getUserVideo<IResponseType<IPage<IVideo[]>>>(userId, keyword, offset, limit).then((data) => {\n      if (data.status === 200) {\n        setVideo(data.data.list);\n        setTotal(data.data.count);\n      }\n    });\n  };\n  useEffect(() => {\n    getUserVideoReq(userId, '', 0, 10);\n  }, [userId]);\n  const videoRouter = (item: IVideo) => {\n    navigate('/videoDetail', {\n      replace: true,\n      state: {\n        id: item.id\n      }\n    });\n  };\n  return (\n    <UploadedVideoWrapper>\n      <ul className=\"video-list\">\n        {video &&\n          video.length !== 0 &&\n          video.map((item) => {\n            return (\n              <li key={item.id}>\n                <VideoItem\n                  img={\n                    <img\n                      src={item.picUrl}\n                      onClick={() => {\n                        videoRouter(item);\n                      }}\n                    />\n                  }\n                  dt={item.dt}\n                  isShowUser={false}\n                  playCount={item.playCount}\n                  createTime={item.createTime}\n                  id={item.id}\n                  state={item.name}\n                  isShowVideo={false}\n                  scale={0.92}\n                  itemWidth={300}\n                  vioHeight={140}\n                  dtPos={{ left: 98, top: 54 }}\n                  user={item.user}\n                />\n              </li>\n            );\n          })}\n        {HolderCpn(video.length, 5, 300)}\n      </ul>\n    </UploadedVideoWrapper>\n  );\n};\nexport default memo(UploadedVideo);\n","import styled from 'styled-components';\nexport const PlaylistWrapper = styled.div`\n  .play-list {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    & > li {\n      width: ${300 / 40}rem;\n      height: ${153 / 40}rem;\n      margin: 0 0 ${140 / 40}rem 0;\n      position: relative;\n      .sub {\n        display: flex;\n        align-items: center;\n        .label {\n          margin: 0 0 0 5px;\n        }\n      }\n      .container {\n        display: flex;\n        align-items: flex-start;\n        width: 100%;\n        justify-content: space-between;\n        .g-more {\n          margin: ${15 / 40}rem 0 ${5 / 40}rem 0;\n          cursor: pointer;\n          svg {\n            font-size: ${30 / 40}rem;\n          }\n        }\n      }\n    }\n    .cover {\n      width: 100%;\n      height: 100%;\n      background-color: #333;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: 4px;\n      overflow: hidden;\n      img {\n        height: 100%;\n        width: auto;\n        border-radius: 4px;\n      }\n    }\n    .state {\n      .name {\n        font-size: ${18 / 40}rem;\n        margin: ${15 / 40}rem 0 ${5 / 40}rem 0;\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 2;\n        overflow: hidden;\n        width: 88%;\n        word-break: break-all;\n      }\n      .create-time,\n      .count {\n        font-size: ${16 / 40}rem;\n        color: #606060;\n      }\n    }\n  }\n`;\n","import React, { memo, type FC, useState, useEffect } from 'react';\nimport { MoreOutlined, StarOutlined } from '@ant-design/icons';\nimport { Dropdown, Menu, notification } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { type IPlaylist } from '../../../../../../types/playlist/IPlaylist';\nimport { getUserPlaylist, subUserPlaylist } from '../../../../../../network/playlist';\nimport { type IResponseType } from '../../../../../../types/responseType';\nimport { type IPage } from '../../../../../../types/IPage';\nimport HolderCpn from '../../../../../holder';\nimport moment from 'moment';\nimport { PlaylistWrapper } from './style';\ninterface IProps {\n  userId: string;\n}\nconst CreatePlaylist: FC<IProps> = (props) => {\n  const { userId } = props;\n  const [playlist, setPlaylist] = useState<IPlaylist[]>([]);\n  const [total, setTotal] = useState<number>(0);\n  const getUserPlaylistReq = (userId: string, offset: number, limit: number) => {\n    getUserPlaylist<IResponseType<IPage<IPlaylist[]>>>(userId, offset, limit).then((data) => {\n      if (data.status === 200) {\n        setPlaylist(data.data.list);\n        setTotal(data.data.count);\n      }\n    });\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    getUserPlaylistReq(userId, 0, 10);\n  }, [userId]);\n  const playlistRouter = (item: IPlaylist) => {\n    navigate(`/home/playlist/${item.id}`, {\n      replace: false\n    });\n  };\n  const openChangeHandle = (e: any, item: IPlaylist) => {\n    console.log(e.key);\n    if (e.key === 'sub') {\n      console.log(item);\n      subUserPlaylist(item.id).then((res) => {\n        if (res.status === 200) {\n          notification.info({\n            message: `${res.message}`,\n            description: `个人中心‘收藏的播放列表’中查看`,\n            placement: 'bottomLeft'\n          });\n        }\n      });\n    }\n  };\n  return (\n    <PlaylistWrapper>\n      <ul className=\"play-list\">\n        {playlist &&\n          playlist.length !== 0 &&\n          playlist.map((item) => {\n            return (\n              <li key={item.id}>\n                <div\n                  className={'cover'}\n                  onClick={(e) => {\n                    playlistRouter(item);\n                  }}\n                >\n                  <img src={item.picUrl} />\n                </div>\n                <div className=\"state\">\n                  <div className=\"container\">\n                    <p className=\"name\">{item.name}</p>\n                    <Dropdown\n                      overlay={\n                        <Menu\n                          onClick={(e) => {\n                            openChangeHandle(e, item);\n                          }}\n                        >\n                          <Menu.Item key=\"sub\">\n                            <div className=\"g-sub-playlist\">\n                              <StarOutlined />\n                              <span className=\"label\">收藏</span>\n                            </div>\n                          </Menu.Item>\n                        </Menu>\n                      }\n                      trigger={['click']}\n                    >\n                      <MoreOutlined className=\"g-more\" />\n                    </Dropdown>\n                  </div>\n                  <p className=\"create-time\">\n                    {moment(item.createTime).format('yyyy-MM-DD HH:mm')}\n                  </p>\n                  <p className=\"count\">{item.video}个视频</p>\n                </div>\n              </li>\n            );\n          })}\n        {HolderCpn(playlist.length, 5, 300)}\n      </ul>\n    </PlaylistWrapper>\n  );\n};\nexport default memo(CreatePlaylist);\n","import styled from 'styled-components';\nexport const SubWrapper = styled.div`\n  padding: ${20 / 40}rem 0;\n  .sub-list {\n    & > li {\n      display: flex;\n      align-items: flex-start;\n      margin: 0 0 ${26 / 40}rem 0;\n      .left-container {\n        width: ${140 / 40}rem;\n        height: ${140 / 40}rem;\n        img {\n          width: 100%;\n          border-radius: 50%;\n        }\n      }\n      .center-container {\n        flex: 8;\n        margin: 0 0 0 ${20 / 40}rem;\n        .channel-name {\n          font-size: ${28 / 40}rem;\n        }\n        .count {\n          & > span {\n            font-size: ${18 / 40}rem;\n            color: #606060;\n            &:nth-child(1) {\n              margin: 0 ${5 / 40}rem 0 0;\n            }\n          }\n        }\n      }\n      .right-container {\n        flex: 1;\n        padding: 0 ${40 / 40}rem 0;\n      }\n    }\n  }\n`;\n","import React, { memo, FC, useState, useEffect } from 'react';\nimport { ISubscriber } from '../../../../../../types/subscriber/ISubscriber';\nimport { getUserSub } from '../../../../../../network/subscriber';\nimport { IResponseType } from '../../../../../../types/responseType';\nimport { IPage } from '../../../../../../types/IPage';\nimport { SubWrapper } from './style';\nimport SubBtn from '../../../../../common/subBtn';\ninterface IProps {\n  userId: string;\n}\nconst Subscriber: FC<IProps> = (props) => {\n  const { userId } = props;\n  const [sub, setSub] = useState<ISubscriber[]>([]);\n  const [total, setTotal] = useState<number>(0);\n  const getUserSubReq = (userId: string, offset: number, limit: number) => {\n    getUserSub<IResponseType<IPage<ISubscriber[]>>>(userId, offset, limit).then((data) => {\n      if (data.status === 200) {\n        setSub(data.data.list);\n        setTotal(data.data.count);\n      }\n    });\n  };\n  useEffect(() => {\n    getUserSubReq(userId, 0, 10);\n  }, [userId]);\n  return (\n    <SubWrapper>\n      <ul className=\"sub-list\">\n        {sub &&\n          sub.length !== 0 &&\n          sub.map((item) => {\n            return (\n              <li key={item.id}>\n                <div className=\"left-container\">\n                  <img src={item.up.avatarUrl} />\n                </div>\n                <div className=\"center-container\">\n                  <div className=\"channel-name\">{item.up.userName}</div>\n                  <div className=\"count\">\n                    <span>{item.fans}位订阅者</span>\n                    <span>{item.video}个视频</span>\n                  </div>\n                  <div className=\"desc text-nowrap-mul-line\">{item.channel.description}</div>\n                </div>\n                <div className=\"right-container\">\n                  <SubBtn userId={item.up.userId} />\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </SubWrapper>\n  );\n};\nexport default memo(Subscriber);\n","import React, { memo, type FC } from 'react';\ninterface IProps {\n  userId: string;\n}\nconst Short: FC<IProps> = (props) => {\n  const { userId } = props;\n  return <div>dddd</div>;\n};\nexport default memo(Short);\n","import React, { memo, type FC } from 'react';\ninterface IProps {\n  userId: string;\n}\nconst MulPlay: FC<IProps> = (props) => {\n  const { userId } = props;\n  return <div>dddd</div>;\n};\nexport default memo(MulPlay);\n","import React, { memo, type FC } from 'react';\ninterface IProps {\n  userId: string;\n}\nconst SinglePlaylist: FC<IProps> = (props) => {\n  const { userId } = props;\n  return <div>dddd</div>;\n};\nexport default memo(SinglePlaylist);\n","import React, { memo, type FC } from 'react';\ninterface IProps {\n  userId: string;\n}\nconst WonderChannel: FC<IProps> = (props) => {\n  const { userId } = props;\n  return <div>dddd</div>;\n};\nexport default memo(WonderChannel);\n","import styled from 'styled-components';\nexport const HotVideoWrapper = styled.div`\n  .video-list {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n`;\n","import React, { memo, type FC, useState, useEffect } from 'react';\nimport { HotVideoWrapper } from './style';\nimport { useNavigate } from 'react-router-dom';\nimport { type IVideo } from '../../../../../../types/video/IVideo';\nimport { getUserHotVideo, getUserVideo } from '../../../../../../network/video';\nimport { type IResponseType } from '../../../../../../types/responseType';\nimport { type IPage } from '../../../../../../types/IPage';\nimport VideoItem from '../../../../../videoItem';\nimport HolderCpn from '../../../../../holder';\ninterface IProps {\n  userId: string;\n}\nconst HotVideo: FC<IProps> = (props) => {\n  const { userId } = props;\n  const navigate = useNavigate();\n  const [video, setVideo] = useState<IVideo[]>([]);\n  const [total, setTotal] = useState<number>(0);\n  const getUserVideoReq = (userId: string, keyword: '', offset: number, limit: number) => {\n    getUserHotVideo<IResponseType<IPage<IVideo[]>>>(userId, keyword, offset, limit).then((data) => {\n      if (data.status === 200) {\n        setVideo(data.data.list);\n        setTotal(data.data.count);\n      }\n    });\n  };\n  useEffect(() => {\n    getUserVideoReq(userId, '', 0, 10);\n  }, [userId]);\n  const videoRouter = (item: IVideo) => {\n    navigate('/videoDetail', {\n      replace: true,\n      state: {\n        id: item.id\n      }\n    });\n  };\n  return (\n    <HotVideoWrapper>\n      <ul className=\"video-list\">\n        {video &&\n          video.length !== 0 &&\n          video.map((item) => {\n            return (\n              <li key={item.id}>\n                <VideoItem\n                  img={\n                    <img\n                      src={item.picUrl}\n                      onClick={() => {\n                        videoRouter(item);\n                      }}\n                    />\n                  }\n                  dt={item.dt}\n                  isShowUser={false}\n                  playCount={item.playCount}\n                  createTime={item.createTime}\n                  id={item.id}\n                  state={item.name}\n                  isShowVideo={false}\n                  scale={0.92}\n                  itemWidth={300}\n                  vioHeight={140}\n                  dtPos={{ left: 98, top: 54 }}\n                  user={item.user}\n                />\n              </li>\n            );\n          })}\n        {HolderCpn(video.length, 5, 300)}\n      </ul>\n    </HotVideoWrapper>\n  );\n};\nexport default memo(HotVideo);\n","import { memo, type FC, type ReactElement, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Tabs, notification } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { UserDetailWrapper } from './style';\nimport { type IChannel } from '../../../../types/channel/IChannel';\nimport { getUserChannel } from '../../../../network/channel';\nimport { sub, cancelSub } from '../../../../network/subscriber';\nimport { type IResponseType } from '../../../../types/responseType';\n\nimport { tabs } from './config';\nimport { getUserBlock } from '../../../../network/block';\nimport { type IBlock } from '../../../../types/block/IBlock';\nimport {\n  CREATED_PLAYLIST,\n  HOT_VIDEO,\n  MUL_PLAYLIST,\n  SHORT,\n  SINGLE_PLAYLIST,\n  SUB_CHANNEL,\n  UPLOADED_VIDEO,\n  WONDER_CHANNEL\n} from '../../../../constant/block';\nimport UploadedVideo from './childCpn/uploadedVideo';\nimport { useLoginMsg } from '../../../../hook/useLoginMsg';\nimport CreatePlaylist from './childCpn/playlist';\nimport Subscriber from './childCpn/subscriber';\nimport { useSub } from '../../../../hook/useSub';\nimport { type Dispatch } from 'redux';\nimport { changeUserDetailAction } from '../../../../views/login/store/actionCreators';\nimport Short from './childCpn/short';\nimport MulPlay from './childCpn/mulPlay';\nimport SinglePlay from './childCpn/singlePlay';\nimport WonderChannel from './childCpn/wonderChannel';\nimport HotVideo from './childCpn/hotVideo';\n\nconst UserDetail: FC = (): ReactElement => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { userId } = location.state;\n  const dispatch = useDispatch<Dispatch<any>>();\n\n  const isSub = useSub(userId);\n\n  const [keyIndex, setKeyIndex] = useState<number>(0);\n  const [userChannel, setUserChannel] = useState<IChannel>();\n  const [block, setBlock] = useState<IBlock[]>([]);\n  const [userTabs, setUserTabs] = useState<any[]>([]);\n\n  const loginMsg = useLoginMsg();\n  useEffect(() => {\n    getUserChannel<IResponseType<IChannel>>(userId).then((data) => {\n      if (data.status === 200) {\n        setUserChannel(data.data);\n        setUserTabs(tabs(userId, data.data));\n        setKeyIndex(1);\n      }\n    });\n  }, [userId]);\n  useEffect(() => {\n    if (keyIndex !== 0) {\n      getUserBlock<IResponseType<IBlock[]>>(userId).then((data) => {\n        console.log(data);\n        if (data.status === 200) {\n          setBlock(data.data);\n          if (data.data.length !== 0) {\n            const tabList = [...userTabs];\n            for (const item of data.data) {\n              if (item.name === UPLOADED_VIDEO) {\n                tabList.push({\n                  key: item.id,\n                  label: item.name,\n                  children: <UploadedVideo userId={userId} />\n                });\n              }\n              if (item.name === HOT_VIDEO) {\n                tabList.push({\n                  key: item.id,\n                  label: item.name,\n                  children: <HotVideo userId={userId} />\n                });\n              }\n              if (item.name === CREATED_PLAYLIST) {\n                tabList.push({\n                  key: item.id,\n                  label: item.name,\n                  children: <CreatePlaylist userId={userId} />\n                });\n              }\n              if (item.name === SUB_CHANNEL) {\n                tabList.push({\n                  key: item.id,\n                  label: item.name,\n                  children: <Subscriber userId={userId} />\n                });\n              }\n              if (item.name === WONDER_CHANNEL) {\n                tabList.push({\n                  key: item.id,\n                  label: item.name,\n                  children: <WonderChannel userId={userId} />\n                });\n              }\n              if (item.name === SHORT) {\n                tabList.push({\n                  key: item.id,\n                  label: item.name,\n                  children: <Short userId={userId} />\n                });\n              }\n              if (item.name === MUL_PLAYLIST) {\n                tabList.push({\n                  key: item.id,\n                  label: item.name,\n                  children: <MulPlay userId={userId} />\n                });\n              }\n              if (item.name === SINGLE_PLAYLIST) {\n                tabList.push({\n                  key: item.id,\n                  label: item.name,\n                  children: <SinglePlay userId={userId} />\n                });\n              }\n            }\n            setUserTabs(tabList);\n          }\n        }\n      });\n    }\n  }, [keyIndex]);\n  const chatRouter = () => {\n    if (userId && userChannel?.user) {\n      navigate('/chatDetail', {\n        state: {\n          userId,\n          userName: userChannel.user.userName\n        }\n      });\n    }\n  };\n  const subHandler = async () => {\n    if (!isSub) {\n      const result = await sub(userId);\n      if (result.status === 200) {\n        notification.info({\n          message: `订阅成功`,\n          description: `在“订阅内容中”查看您添加的视频`,\n          placement: 'bottomLeft'\n        });\n      }\n    } else {\n      const result = await cancelSub(userId);\n      if (result.status === 200) {\n      }\n    }\n    if (loginMsg && loginMsg.userMsg) {\n      dispatch(changeUserDetailAction(loginMsg.userMsg.userId));\n    }\n  };\n  return (\n    <UserDetailWrapper>\n      <div className={'banner'}>\n        <img src={userChannel?.picUrl} />\n      </div>\n      <div className=\"user-info\">\n        <div className=\"left\">\n          <div className=\"img-container\">\n            <img src={userChannel?.user?.avatarUrl} />\n          </div>\n          <div className=\"right-info\">\n            <div className=\"user-name\">{userChannel?.user?.userName}</div>\n          </div>\n        </div>\n        <div className=\"control-btn\">\n          {loginMsg.userMsg.userId !== userId && (\n            <div\n              className=\"sub-btn\"\n              onClick={async () => {\n                await subHandler();\n              }}\n            >\n              {isSub ? '已订阅' : '订阅'}\n            </div>\n          )}\n          {loginMsg.userMsg.userId !== userId && (\n            <div\n              className=\"sub-btn message\"\n              onClick={(e) => {\n                chatRouter();\n              }}\n            >\n              私信\n            </div>\n          )}\n        </div>\n      </div>\n      {userTabs && userTabs.length !== 0 && <Tabs defaultActiveKey=\"1\" items={userTabs} />}\n    </UserDetailWrapper>\n  );\n};\nexport default memo(UserDetail);\n","import React from 'react';\nimport Home from '../childCpn/home';\nimport Community from '../childCpn/community';\nimport Desc from '../childCpn/desc';\nimport { type IChannel } from '../../../../../types/channel/IChannel';\n\nconst tabs = (userId: string, channel?: IChannel) => {\n  return [\n    {\n      label: '首页',\n      key: '1001',\n      children: <Home userId={userId} channel={channel} />\n    },\n    {\n      label: '社区',\n      key: '1006',\n      children: <Community userId={userId} channel={channel} />\n    },\n    {\n      label: '简介',\n      key: '1008',\n      children: <Desc userId={userId} />\n    }\n  ];\n};\nexport { tabs };\n","import styled from 'styled-components';\nexport const VideoItemWrapper: any = styled.div`\n  background-color: #fff;\n  width: ${(props) => ((props as any).isFlex ? '100%' : (props as any).itemWidth / 40 + 'rem')};\n  height: ${(props) =>\n    (props as any).isFlex\n      ? 'auto'\n      : ((props as any).itemWidth * (props as any).scale) / 40 + 'rem'};\n  display: ${(props) => ((props as any).isFlex ? 'flex' : 'block')};\n  align-items: flex-start;\n  position: relative;\n  & > img {\n    width: ${(props) => ((props as any).isFlex ? (props as any).itemWidth / 40 + 'rem' : '100%')};\n    border-radius: ${8 / 40}rem ${8 / 40}rem\n      ${(props) => ((props as any).isFlex ? `${8 / 40}rem` : '0')}\n      ${(props) => ((props as any).isFlex ? `${8 / 40}rem` : '0')};\n  }\n  .dt-pos {\n    position: absolute;\n    left: ${(props: any) => (props.dtPos ? props.dtPos.left + '%' : '100%')};\n    top: ${(props: any) => (props.dtPos ? props.dtPos.top + '%' : '100%')};\n    transform: translate(-100%, -100%);\n    background-color: rgba(0, 0, 0, 0.6);\n    color: #fff;\n    font-weight: bolder;\n    font-size: ${18 / 40}rem;\n    padding: 1px 6px;\n    border-radius: 5px;\n    white-space: nowrap;\n  }\n  .video-container {\n    border-radius: ${8 / 40}rem ${8 / 40}rem 0 0;\n    overflow: hidden;\n    width: 100%;\n    height: ${(props) => (props as any).vioHeight / 40 + 'rem'};\n    background-color: black;\n    & > video {\n      width: 100%;\n      height: ${(props) => (props as any).vioHeight / 40 + 'rem'};\n      object-position: 50% 50%;\n      object-fit: contain;\n    }\n  }\n  .msg-info {\n    display: ${(props) => ((props as any).isFlex ? 'block' : 'flex')};\n    align-items: flex-start;\n    margin: ${(props) => ((props as any).isFlex ? 0 : `${20 / 40}rem`)} 0 0 0;\n    padding: 0 ${15 / 40}rem;\n    width: 100%;\n    .left-container {\n      width: ${50 / 40}rem;\n      height: ${50 / 40}rem;\n      border-radius: 50%;\n      background-color: #eeeeee;\n      overflow: hidden;\n      display: ${(props) =>\n        (props as any).isFlex && !(props as any).isShowUser ? `none` : 'block'};\n      img {\n        width: 100%;\n      }\n    }\n    .right-container {\n      width: ${(props) => ((props as any).isShowUser ? '80%' : '100%')};\n      margin: 0 0 0 ${(props) => ((props as any).isShowUser ? `${20 / 40}rem` : '0')};\n      .msg {\n        .state {\n          display: flex;\n          align-items: flex-start;\n          justify-content: space-between;\n          width: 100%;\n          .video-name {\n            font-size: ${(props) =>\n              (props as any).isFlex\n                ? (props as any).itemWidth / 16 / 40 + 'rem'\n                : (props as any).itemWidth / 20 / 40 + 'rem'};\n            color: #0f0f0f;\n            display: -webkit-box;\n            -webkit-box-orient: vertical;\n            -webkit-line-clamp: 2;\n            overflow: hidden;\n            width: 100%;\n            word-break: break-all;\n          }\n          .more {\n            width: 10%;\n            .more-icon {\n              cursor: pointer;\n              svg {\n                font-size: ${34 / 40}rem;\n              }\n            }\n          }\n        }\n        .pos-user-container {\n          display: flex;\n          align-items: center;\n          padding: ${10 / 40}rem 0;\n          .pos-user-container-avatar {\n            width: ${50 / 40}rem;\n            height: ${50 / 40}rem;\n            border-radius: 50%;\n            background-color: #eeeeee;\n            overflow: hidden;\n            margin: 0 ${10 / 40}rem 0 0;\n            img {\n              width: 100%;\n            }\n          }\n        }\n        .user-name {\n          font-size: ${16 / 40}rem;\n          color: #606060;\n          margin: ${5 / 40}rem 0 0 0;\n        }\n        .play-count {\n          & > span {\n            color: #606060;\n            font-size: ${16 / 40}rem;\n            &:nth-child(1) {\n              margin: 0 ${5 / 40}rem 0 0;\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import { memo, type FC, type ReactElement, type MouseEvent, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { VideoItemWrapper } from './style';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { type IUserMsg } from '../../types/user/IUserMsg';\nimport { Dropdown, Menu } from 'antd';\nimport Add from '../content/add';\nimport { getDurationByTimestamp } from '../../utils/time';\nimport { type IAddType, addList } from '../../constant/addList';\ninterface IAdd {\n  liClick: (item: IAddType) => void;\n}\ninterface IProps {\n  user: IUserMsg;\n  img: ReactElement;\n  dt: string;\n  playCount: string;\n  state: string;\n  createTime: string;\n  itemWidth: number;\n  scale: number;\n  video?: ReactElement;\n  isShowVideo?: boolean;\n  isShowImg?: boolean;\n  id: string;\n  isShowMore?: boolean;\n  vioHeight: number;\n  isFlex?: boolean;\n  dtPos: { left: number; top: number };\n  isShowUser?: boolean;\n  isPosUser?: boolean;\n}\nconst VideoItem: FC<IProps> = (props): ReactElement => {\n  const {\n    user,\n    isShowUser = true,\n    isPosUser = false,\n    img,\n    vioHeight,\n    dt,\n    playCount,\n    dtPos,\n    isFlex,\n    state,\n    id,\n    isShowMore,\n    createTime,\n    itemWidth,\n    scale,\n    video,\n    isShowVideo,\n    isShowImg\n  } = props;\n  const [isShowDrop, setIsShowDrop] = useState<boolean>(false);\n  const navigate = useNavigate();\n  const moreOperatorHandle = (e: MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n    setIsShowDrop(true);\n  };\n\n  const addRef = useRef<IAdd | null>(null);\n  const openChangeHandle = (a: any) => {\n    if (addRef && addRef.current) {\n      addRef.current.liClick({\n        icon: '',\n        name: a.key\n      });\n    }\n  };\n  const userRouter = (e: MouseEvent<HTMLDivElement>) => {\n    if (user) {\n      e.stopPropagation();\n      navigate('/home/userDetail', {\n        state: {\n          userId: user.userId\n        },\n        replace: false\n      });\n    }\n  };\n  return (\n    <VideoItemWrapper\n      isShowUser={isShowUser}\n      itemWidth={itemWidth}\n      scale={scale}\n      vioHeight={vioHeight}\n      isFlex={isFlex}\n      dtPos={dtPos}\n    >\n      {!isShowVideo && img}\n      {isShowVideo && <div className=\"video-container\">{video}</div>}\n      <div className=\"dt-pos\">{getDurationByTimestamp(dt || '0')}</div>\n      <div className=\"msg-info\">\n        {isShowUser && (\n          <div\n            className=\"left-container\"\n            onClick={(e) => {\n              userRouter(e);\n            }}\n          >\n            <img src={user.avatarUrl} />\n          </div>\n        )}\n        <div className=\"right-container\">\n          <div className=\"msg\">\n            <div className=\"state\">\n              <div className=\"video-name\">{state}</div>\n              {isShowMore && (\n                <div\n                  className=\"more\"\n                  onClick={(e) => {\n                    moreOperatorHandle(e);\n                  }}\n                >\n                  <Dropdown\n                    trigger={['click']}\n                    overlay={\n                      <Menu onClick={openChangeHandle}>\n                        {addList.map((item) => {\n                          return (\n                            <Menu.Item key={item.name}>\n                              <div style={{ display: 'flex' }}>\n                                <div>{item.icon}</div>\n                                <div>{item.name}</div>\n                              </div>\n                            </Menu.Item>\n                          );\n                        })}\n                      </Menu>\n                    }\n                  >\n                    <MoreOutlined className=\"more-icon\" />\n                  </Dropdown>\n                </div>\n              )}\n            </div>\n            <div className={isPosUser ? 'pos-user-container' : ''}>\n              {isPosUser && (\n                <div\n                  className=\"pos-user-container-avatar\"\n                  onClick={(e) => {\n                    userRouter(e);\n                  }}\n                >\n                  <img src={user.avatarUrl} />\n                </div>\n              )}\n              <div className=\"user-name\">{user.userName}</div>\n            </div>\n            <div className=\"play-count\">\n              <span>{playCount}次观看</span>\n              <span>{moment(new Date(createTime).getTime()).locale('zh-CN').fromNow()}</span>\n            </div>\n          </div>\n          <div className=\"more\"></div>\n        </div>\n      </div>\n      <Add id={id} ref={addRef} />\n    </VideoItemWrapper>\n  );\n};\nexport default memo(VideoItem);\n","interface IAddType {\n  icon: string;\n  name: string;\n}\nconst ADD_QUEUE = '添加到队列';\nconst ADD_WATCH_LATER = `保存到\"稍后观看`;\nconst ADD_PLAYLIST = '保存到播放列表';\nconst addList = [\n  {\n    icon: '',\n    name: ADD_QUEUE\n  },\n  {\n    icon: '',\n    name: ADD_WATCH_LATER\n  },\n  {\n    icon: '',\n    name: ADD_PLAYLIST\n  }\n];\nexport { addList, ADD_QUEUE, ADD_WATCH_LATER, ADD_PLAYLIST };\nexport type { IAddType };\n","const UPLOADED_VIDEO = '上传的视频';\nconst HOT_VIDEO = '热门上传视频';\nconst SHORT = '短视频';\nconst LIVE = '正在直播';\nconst YESTERDAY_LIVE = '过往的直播归档的视频';\nconst LIVE_ON_THE_WAY = '即将开始的直播';\nconst SINGLE_PLAYLIST = '单个播放列表';\nconst CREATED_PLAYLIST = '创建的播放列表';\nconst MUL_PLAYLIST = '收藏的播放列表';\nconst SUB_CHANNEL = '订阅的频道';\nconst WONDER_CHANNEL = '精选频道';\nexport {\n  SINGLE_PLAYLIST,\n  UPLOADED_VIDEO,\n  HOT_VIDEO,\n  SHORT,\n  LIVE,\n  YESTERDAY_LIVE,\n  LIVE_ON_THE_WAY,\n  CREATED_PLAYLIST,\n  MUL_PLAYLIST,\n  SUB_CHANNEL,\n  WONDER_CHANNEL\n};\n","import { useSelector } from 'react-redux';\nimport { type Map } from 'immutable';\nimport { type ILogin } from '../../types/login/ILogin';\n\nexport const useSub = (upId?: string): boolean => {\n  let isExists = -1;\n  const loginState = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  if (loginState) {\n    const { userDetail } = loginState;\n    if (userDetail && userDetail.subscriber.length !== 0 && upId) {\n      isExists = userDetail.subscriber.findIndex((item, index) => {\n        return upId === item.userId;\n      });\n    }\n  }\n  return isExists !== -1;\n};\n","import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\nexport async function getAllBlock<T = IResponseType<any>>() {\n  return await gbRequest.get<T>({\n    url: '/block/all'\n  });\n}\nexport async function userAddBlock<T = IResponseType<any>>(blockId: string) {\n  return await gbRequest.post<T>({\n    url: '/block/user/add',\n    data: {\n      blockId\n    }\n  });\n}\nexport async function getUserBlock<T = IResponseType<any>>(userId: string) {\n  return await gbRequest.get<T>({\n    url: `/block/user/${userId}`\n  });\n}\n","import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\n// 添加历史记录\nexport async function addHistory<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post({\n    url: '/history/' + id,\n    data: {}\n  });\n}\nexport async function getUserHistory<T = IResponseType<any>>(\n  userId: string,\n  offset: number,\n  limit: number,\n  keyword: string\n) {\n  return await gbRequest.post<T>({\n    url: '/history/user/' + userId,\n    params: {\n      offset,\n      limit,\n      keyword\n    }\n  });\n}\n// 清除所有历史记录\nexport async function deleteAllHistory<T = IResponseType<any>>() {\n  return await gbRequest.post<T>({\n    url: '/history/delete/all'\n  });\n}\n","import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\n\nexport async function getUserLater<T = IResponseType<any>>(\n  userId: string,\n  offset: number,\n  limit: number\n): Promise<T> {\n  return await gbRequest.get<T>({\n    url: '/later/user/' + userId,\n    params: {\n      offset,\n      limit\n    }\n  });\n}\n// 添加至稍后观看\nexport async function addLater<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post<T>({\n    url: '/later/' + id\n  });\n}\n","import gbRequest from '../index';\nimport { IResponseType } from '../../types/responseType';\nexport function sub<T = IResponseType<any>>(upId: string) {\n  return gbRequest.post<T>({\n    url: '/sub/',\n    data: {\n      upId\n    }\n  });\n}\nexport function cancelSub<T = IResponseType<any>>(upId: string) {\n  return gbRequest.post<T>({\n    url: '/sub/cancel',\n    data: {\n      upId\n    }\n  });\n}\n//获取用户订阅\nexport function getUserSub<T = IResponseType<any>>(userId: string, offset: number, limit: number) {\n  return gbRequest.post<T>({\n    url: '/sub/user/' + userId,\n    data: {\n      offset,\n      limit\n    }\n  });\n}\n//获取订阅数\nexport function getUserSubCount<T = IResponseType<any>>(id: string) {\n  return gbRequest.get<T>({\n    url: '/sub/count/' + id\n  });\n}\n","function getDurationByTimestamp(time: string | number) {\n  if (typeof time === 'string') time = parseInt(time);\n  const timestamp: number = Math.floor(time / 1000) || 0;\n  if (timestamp === 0) {\n    return '00:00';\n  } else {\n    const hour: number = Math.floor(timestamp / 60 / 60);\n    let yTimestamp = timestamp % 3600;\n    let minute = 0;\n    let second = 0;\n    if (yTimestamp !== 0) {\n      minute = Math.floor(yTimestamp / 60);\n      yTimestamp = yTimestamp % 60;\n      if (yTimestamp !== 0) {\n        second = yTimestamp;\n      }\n    }\n    const newHour = hour === 0 ? '' : `${hour.toString().padStart(2, '0')}:`;\n    return `${newHour}${minute.toString().padStart(2, '0')}:${second.toString().padStart(2, '0')}`;\n  }\n}\nexport { getDurationByTimestamp };\n"],"names":["SubBtnWrapper","styled","div","SubBtn","props","userId","isSub","useSub","loginMsg","useLoginMsg","dispatch","useDispatch","React","className","onClick","async","cancelSub","status","sub","notification","info","message","description","placement","userMsg","changeUserDetailAction","subHandler","memo","AddWrapper","PlaylistWrapper","Playlist","select","playlist","setPlaylist","useState","count","setCount","login","useSelector","state","getIn","useEffect","getUserPlaylist","then","data","list","length","map","item","index","key","id","Checkbox","onChange","e","selectChangeHandle","target","checked","name","isPublic","EyeOutlined","EyeInvisibleOutlined","Option","Select","Add","forwardRef","propsRef","isShowAddPlay","setIsShowPlay","isCreate","setIsCreate","keyIndex","setKeyIndex","setName","setIsPublic","liClick","ADD_PLAYLIST","ADD_WATCH_LATER","addLater","console","log","catch","err","useImperativeHandle","stopPropagation","Modal","title","width","destroyOnClose","maskClosable","open","onCancel","footer","Input","placeholder","showCount","maxLength","onInput","currentTarget","value","nameInpHandle","createPlaylist","PlusOutlined","createPlaylistHandler","checkHandle","addVideoPlaylist","UserDetailWrapper","HomeWrapper","Home","channel","navigate","useNavigate","vioURL","setVioURL","videoRef","useRef","trailer","getVideoURL","res","url","vioUrl","process","current","Hls","hls","loadSource","attachMedia","addHistory","canPlayType","src","videoRouter","replace","ref","controls","muted","loop","onTimeUpdate","onCanPlay","canPlay","volume","autoPlay","Empty","image","PRESENTED_IMAGE_SIMPLE","Fragment","playCount","moment","createTime","fromNow","featured","picUrl","Community","CommunityPro","cId","isShowPub","DescWrapper","Desc","UploadedVideoWrapper","UploadedVideo","video","setVideo","total","setTotal","getUserVideoReq","keyword","offset","limit","getUserVideo","VideoItem","img","dt","isShowUser","isShowVideo","scale","itemWidth","vioHeight","dtPos","left","top","user","HolderCpn","CreatePlaylist","getUserPlaylistReq","playlistRouter","Dropdown","overlay","Menu","openChangeHandle","subUserPlaylist","Item","StarOutlined","trigger","MoreOutlined","format","SubWrapper","Subscriber","setSub","getUserSubReq","getUserSub","up","avatarUrl","userName","fans","Short","MulPlay","SinglePlaylist","WonderChannel","HotVideoWrapper","HotVideo","getUserHotVideo","UserDetail","location","useLocation","userChannel","setUserChannel","block","setBlock","userTabs","setUserTabs","getUserChannel","tabs","label","children","getUserBlock","tabList","UPLOADED_VIDEO","push","createElement","HOT_VIDEO","CREATED_PLAYLIST","SUB_CHANNEL","WONDER_CHANNEL","SHORT","MUL_PLAYLIST","SINGLE_PLAYLIST","SinglePlay","Tabs","defaultActiveKey","items","VideoItemWrapper","isFlex","isPosUser","isShowMore","isShowImg","isShowDrop","setIsShowDrop","addRef","userRouter","getDurationByTimestamp","moreOperatorHandle","a","icon","addList","style","display","Date","getTime","locale","upId","isExists","loginState","userDetail","subscriber","findIndex","getAllBlock","gbRequest","get","userAddBlock","blockId","post","getUserHistory","params","deleteAllHistory","getUserLater","getUserSubCount","time","parseInt","timestamp","Math","floor","hour","yTimestamp","minute","second","toString","padStart"],"sourceRoot":""}