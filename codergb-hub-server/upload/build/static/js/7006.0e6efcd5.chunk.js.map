{"version":3,"file":"static/js/7006.0e6efcd5.chunk.js","mappings":"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","sources":["webpack://codergb-hub-client/./src/components/common/subBtn/style.tsx","webpack://codergb-hub-client/./src/components/common/subBtn/index.tsx","webpack://codergb-hub-client/./src/hook/useLoginMsg/index.tsx","webpack://codergb-hub-client/./src/hook/useSub/index.tsx","webpack://codergb-hub-client/./src/network/subscriber/index.tsx","webpack://codergb-hub-client/./src/views/subscriptions/childCpn/manage/style.tsx","webpack://codergb-hub-client/./src/views/subscriptions/childCpn/manage/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nexport const SubBtnWrapper = styled.div`\n  background-color: #f2f2f2;\n  color: #0f0f0f;\n  cursor: pointer;\n  font-size: ${20 / 40}rem;\n\n  border-radius: ${24 / 40}rem;\n  margin: 0 0 0 ${40 / 40}rem;\n  text-align: center;\n  .inner {\n    width: 100%;\n    height: 100%;\n    padding: ${10 / 40}rem ${20 / 40}rem;\n  }\n  &:hover {\n    background-color: #e5e5e5;\n  }\n`;\n","import React, { memo, type FC, type ReactElement } from 'react';\nimport { notification } from 'antd';\nimport { SubBtnWrapper } from './style';\nimport { useSub } from '../../../hook/useSub';\nimport { useLoginMsg } from '../../../hook/useLoginMsg';\nimport { type Dispatch } from 'redux';\nimport { useDispatch } from 'react-redux';\nimport { sub, cancelSub } from '../../../network/subscriber';\nimport { changeUserDetailAction } from '../../../views/login/store/actionCreators';\ninterface IProps {\n  userId: string;\n}\nconst SubBtn: FC<IProps> = (props): ReactElement => {\n  const { userId } = props;\n  const isSub = useSub(userId);\n  const loginMsg = useLoginMsg();\n  const dispatch = useDispatch<Dispatch<any>>();\n  const subHandler = async () => {\n    if (!isSub) {\n      const result = await sub(userId);\n      if (result.status === 200) {\n        notification.info({\n          message: `订阅成功`,\n          description: `在“订阅内容中”查看您添加的视频`,\n          placement: 'bottomLeft'\n        });\n      }\n    } else {\n      const result = await cancelSub(userId);\n      if (result.status === 200) {\n      }\n    }\n    if (loginMsg && loginMsg.userMsg) {\n      dispatch(changeUserDetailAction(loginMsg.userMsg.userId));\n    }\n  };\n  return (\n    <SubBtnWrapper>\n      <div\n        className=\"inner\"\n        onClick={async () => {\n          await subHandler();\n        }}\n      >\n        {isSub ? '已订阅' : '订阅'}\n      </div>\n    </SubBtnWrapper>\n  );\n};\nexport default memo(SubBtn);\n","import { type Map } from 'immutable';\nimport { useSelector } from 'react-redux';\nimport { type ILogin } from '../../types/login/ILogin';\n\nexport const useLoginMsg = (): ILogin => {\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  return login;\n};\n","import { useSelector } from 'react-redux';\nimport { type Map } from 'immutable';\nimport { type ILogin } from '../../types/login/ILogin';\n\nexport const useSub = (upId?: string): boolean => {\n  let isExists = -1;\n  const loginState = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  if (loginState) {\n    const { userDetail } = loginState;\n    if (userDetail && userDetail.subscriber.length !== 0 && upId) {\n      isExists = userDetail.subscriber.findIndex((item, index) => {\n        return upId === item.userId;\n      });\n    }\n  }\n  return isExists !== -1;\n};\n","import gbRequest from '../index';\nimport { IResponseType } from '../../types/responseType';\nexport function sub<T = IResponseType<any>>(upId: string) {\n  return gbRequest.post<T>({\n    url: '/sub/',\n    data: {\n      upId\n    }\n  });\n}\nexport function cancelSub<T = IResponseType<any>>(upId: string) {\n  return gbRequest.post<T>({\n    url: '/sub/cancel',\n    data: {\n      upId\n    }\n  });\n}\n//获取用户订阅\nexport function getUserSub<T = IResponseType<any>>(userId: string, offset: number, limit: number) {\n  return gbRequest.post<T>({\n    url: '/sub/user/' + userId,\n    data: {\n      offset,\n      limit\n    }\n  });\n}\n//获取订阅数\nexport function getUserSubCount<T = IResponseType<any>>(id: string) {\n  return gbRequest.get<T>({\n    url: '/sub/count/' + id\n  });\n}\n","import styled from 'styled-components';\nexport const SubManageWrapper = styled.div`\n  .sub-list {\n    & > li {\n      display: flex;\n      align-items: flex-start;\n      margin: 0 0 ${26 / 40}rem 0;\n      .left-container {\n        width: ${160 / 40}rem;\n        height: ${160 / 40}rem;\n        img {\n          width: 100%;\n          border-radius: 50%;\n        }\n      }\n      .center-container {\n        flex: 8;\n        margin: 0 0 0 ${20 / 40}rem;\n        .channel-name {\n          font-size: ${28 / 40}rem;\n        }\n        .count {\n          & > span {\n            font-size: ${18 / 40}rem;\n            color: #606060;\n            &:nth-child(1) {\n              margin: 0 ${5 / 40}rem 0 0;\n            }\n          }\n        }\n      }\n      .right-container {\n        flex: 1;\n        padding: 0 ${40 / 40}rem 0;\n      }\n    }\n  }\n`;\n","import React, { memo, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { type Map } from 'immutable';\nimport { type ISubscriber } from '../../../../types/subscriber/ISubscriber';\nimport { SubManageWrapper } from './style';\nimport { useSelector } from 'react-redux';\nimport { type ILogin } from '../../../../types/login/ILogin';\nimport { getUserSub } from '../../../../network/subscriber';\nimport { type IResponseType } from '../../../../types/responseType';\nimport { type IPage } from '../../../../types/IPage';\nimport { useSub } from '../../../../hook/useSub';\nimport SubBtn from '../../../../components/common/subBtn';\nimport { type IUserMsg } from '../../../../types/user/IUserMsg';\nconst SubManage = () => {\n  const [up, setUp] = useState<ISubscriber[]>([]);\n  const [count, setCount] = useState<number>(0);\n  const navigate = useNavigate();\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  useEffect(() => {\n    getUserSub<IResponseType<IPage<ISubscriber[]>>>(login.userMsg.userId, 0, 10).then((data) => {\n      setUp(data.data.list);\n      setCount(data.data.count);\n    });\n  }, []);\n  const userRouter = (user: IUserMsg) => {\n    if (user) {\n      navigate('/home/userDetail', {\n        state: {\n          userId: user.userId\n        },\n        replace: false\n      });\n    }\n  };\n  return (\n    <SubManageWrapper>\n      <ul className=\"sub-list\">\n        {up &&\n          up.length !== 0 &&\n          up.map((item) => {\n            return (\n              <li key={item.id}>\n                <div\n                  className=\"left-container\"\n                  onClick={() => {\n                    userRouter(item.up);\n                  }}\n                >\n                  <img src={item.up.avatarUrl} />\n                </div>\n                <div className=\"center-container\">\n                  <div\n                    className=\"channel-name\"\n                    onClick={() => {\n                      userRouter(item.up);\n                    }}\n                  >\n                    {item.up.userName}\n                  </div>\n                  <div className=\"count\">\n                    <span>{item.fans}位订阅者</span>\n                    <span>{item.video}个视频</span>\n                  </div>\n                  <div className=\"desc text-nowrap-mul-line\">{item.channel.description}</div>\n                </div>\n                <div className=\"right-container\">\n                  <SubBtn userId={item.up.userId} />\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </SubManageWrapper>\n  );\n};\nexport default memo(SubManage);\n"],"names":["SubBtnWrapper","styled","div","SubBtn","props","userId","isSub","useSub","loginMsg","useLoginMsg","dispatch","useDispatch","React","className","onClick","async","cancelSub","status","sub","notification","info","message","description","placement","userMsg","changeUserDetailAction","subHandler","memo","useSelector","state","getIn","upId","isExists","loginState","userDetail","subscriber","length","findIndex","item","index","gbRequest","post","url","data","getUserSub","offset","limit","getUserSubCount","id","get","SubManageWrapper","SubManage","up","setUp","useState","count","setCount","navigate","useNavigate","login","useEffect","then","list","userRouter","user","replace","map","key","src","avatarUrl","userName","fans","video","channel"],"sourceRoot":""}