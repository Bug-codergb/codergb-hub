{"version":3,"file":"static/js/2132.e402ff92.chunk.js","mappings":"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","sources":["webpack://codergb-hub-client/./node_modules/@ant-design/icons-svg/es/asn/PictureOutlined.js","webpack://codergb-hub-client/./node_modules/@ant-design/icons/es/icons/PictureOutlined.js","webpack://codergb-hub-client/./src/components/common/imgUpload/style.tsx","webpack://codergb-hub-client/./src/components/common/imgUpload/index.tsx","webpack://codergb-hub-client/./src/components/navList/style.tsx","webpack://codergb-hub-client/./src/assets/html/playlist/playlistIcon.tsx","webpack://codergb-hub-client/./src/assets/html/playlist/playlistShadowIcon.tsx","webpack://codergb-hub-client/./src/components/navList/index.tsx","webpack://codergb-hub-client/./src/views/profile/style.tsx","webpack://codergb-hub-client/./src/views/profile/index.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar PictureOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136v-39.9l138.5-164.3 150.1 178L658.1 489 888 761.6V792zm0-129.8L664.2 396.8c-3.2-3.8-9-3.8-12.2 0L424.6 666.4l-144-170.7c-3.2-3.8-9-3.8-12.2 0L136 652.7V232h752v430.2zM304 456a88 88 0 100-176 88 88 0 000 176zm0-116c15.5 0 28 12.5 28 28s-12.5 28-28 28-28-12.5-28-28 12.5-28 28-28z\" } }] }, \"name\": \"picture\", \"theme\": \"outlined\" };\nexport default PictureOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PictureOutlinedSvg from \"@ant-design/icons-svg/es/asn/PictureOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PictureOutlined = function PictureOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PictureOutlinedSvg\n  }));\n};\nPictureOutlined.displayName = 'PictureOutlined';\nexport default /*#__PURE__*/React.forwardRef(PictureOutlined);","import styled from 'styled-components';\nexport const ImgUploadWrapper = styled.div`\n  .global-upload-outer-cpn-style {\n    background-color: #3399ff;\n    .input-container {\n      width: 100%;\n      height: ${400 / 40}rem;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-color: #eeeeee;\n      input {\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        position: absolute;\n        cursor: pointer;\n      }\n      .msg-tip {\n        display: flex;\n        align-items: center;\n        flex-direction: column-reverse;\n        .img-icon {\n          svg {\n            width: ${70 / 40}rem;\n            height: ${70 / 40}rem;\n            color: #cc0101;\n          }\n        }\n        .tip {\n          font-size: ${24 / 40}rem;\n          letter-spacing: 5px;\n          margin: ${30 / 40}rem 0 0 0;\n        }\n      }\n    }\n  }\n`;\n","import React, {\n  memo,\n  type FC,\n  type ReactElement,\n  useState,\n  type ChangeEvent,\n  useEffect,\n  useRef\n} from 'react';\nimport { ImgUploadWrapper } from './style';\nimport { Modal, Progress } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\nimport CustomizeUpload from '../../customizeUpload';\nimport { type IResponseType } from '../../../types/responseType';\ninterface IProps {\n  realWidth: number;\n  isShow: boolean;\n  fileSource?: File | null;\n  isCustom: boolean;\n  handleOk: (file?: File | any) => void;\n  handleCancel: () => void;\n  network: (formDate: FormData, getProgress: (e: any) => void) => Promise<IResponseType<any>>;\n  uploadName: string;\n  aspectRatio: number;\n}\nconst ImgUpload: FC<IProps> = (props): ReactElement => {\n  const {\n    isShow,\n    fileSource,\n    isCustom,\n    handleOk,\n    network,\n    uploadName,\n    realWidth,\n    aspectRatio,\n    handleCancel\n  } = props;\n  const [progress, setProgress] = useState<number>(0);\n  const [isShowCropper, setIsShowCropper] = useState<boolean>(false);\n  const [file, setFile] = useState<File | null>(null);\n  useEffect(() => {\n    if (isCustom) {\n      setIsShowCropper(true);\n    }\n  }, [isCustom]);\n  const uploadRef = useRef<any>();\n  const fileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.files && e.currentTarget.files.length !== 0) {\n      setFile(e.currentTarget.files[0]);\n      setIsShowCropper(true);\n    }\n  };\n  const handleAvatarOk = async () => {\n    const formData = new FormData();\n    if (uploadRef.current) {\n      const f = await uploadRef.current.getCropperFile();\n      formData.append(uploadName, f);\n      const res = await network(formData, (e) => {\n        setProgress((e.loaded / e.total) * 100);\n      });\n      if (res.status === 200) {\n        handleOk(res);\n      }\n    }\n  };\n  const handleAvatarCancel = () => {\n    setProgress(0);\n    setIsShowCropper(false);\n    setFile(null);\n    handleCancel();\n  };\n  return (\n    <Modal\n      title=\"自定义图片\"\n      open={isShow}\n      maskClosable={false}\n      destroyOnClose={true}\n      onOk={handleAvatarOk}\n      width={'65%'}\n      onCancel={handleAvatarCancel}\n    >\n      {isShow && (\n        <ImgUploadWrapper>\n          <div className=\"global-upload-outer-cpn-style\">\n            {!isShowCropper && !isCustom && (\n              <div className=\"input-container\">\n                <input\n                  type=\"file\"\n                  onChange={(e) => {\n                    fileChange(e);\n                  }}\n                />\n                <div className=\"msg-tip\">\n                  <p className=\"tip\">请选择图片</p>\n                  <PictureOutlined className=\"img-icon\" />\n                </div>\n              </div>\n            )}\n            {isShowCropper && (\n              <CustomizeUpload\n                file={isCustom ? fileSource! : file}\n                imgWidth={5}\n                scale={1}\n                aspectRatio={aspectRatio}\n                isCircle={false}\n                realWidth={realWidth}\n                // @ts-expect-error\n                ref={uploadRef}\n              />\n            )}\n          </div>\n          <Progress percent={parseFloat(progress.toFixed(1))} />\n        </ImgUploadWrapper>\n      )}\n    </Modal>\n  );\n};\nexport default memo(ImgUpload);\n","import styled from 'styled-components';\nexport const NavListWrapper = styled.div`\n  .user-avatar {\n    width: 100%;\n    padding: ${24 / 40}rem 0;\n    display: flex;\n    align-items: center;\n    flex-direction: column-reverse;\n    border-bottom: 1px solid #e5e5e5;\n    .img-container {\n      position: relative;\n      width: ${120 / 40}rem;\n      height: ${120 / 40}rem;\n      border-radius: 50%;\n      overflow: hidden;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #eeeeee;\n      img {\n        width: 100%;\n      }\n      .upload-avatar-icon {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n      }\n    }\n    .label {\n      font-family: 'YouTube Sans', 'Roboto', 'Arial', sans-serif;\n      font-weight: 600;\n      font-size: ${20 / 40}rem;\n      white-space: nowrap;\n      margin: ${15 / 40}rem;\n    }\n  }\n  .main-menu,\n  .profile-menu {\n    & > li {\n      display: flex;\n      align-items: center;\n      padding: ${12 / 40}rem ${20 / 40}rem ${12 / 40}rem ${20 / 40}rem;\n      cursor: pointer;\n      &.active {\n        background-color: #e5e5e5;\n        &:hover {\n          background-color: #d9d9d9;\n        }\n      }\n      &:hover {\n        background-color: #f2f2f2;\n      }\n      .nav-icon {\n        width: ${30 / 40}rem;\n      }\n      .nav-name {\n        margin: 0 0 0 ${20 / 40}rem;\n        font-size: ${20 / 40}rem;\n        width: ${170 / 40}rem;\n      }\n    }\n  }\n  .main-menu {\n    padding-bottom: 12px;\n  }\n  .profile-menu {\n    border-top: 1px solid #e5e5e5;\n    padding-top: 12px;\n  }\n  .fold {\n    max-height: 60vh;\n    overflow-y: scroll;\n    &::-webkit-scrollbar {\n      width: 5px;\n      background-color: #cccccc;\n      height: ${40 / 50}rem;\n    }\n    & > li {\n      border-left: 4px solid #ffffff;\n      .nav-name {\n        font-family: 'YouTube Sans', 'Roboto', 'Arial', sans-serif;\n        font-weight: 600;\n        font-size: ${20 / 40}rem;\n        color: #616161;\n      }\n      &.active {\n        border-left-color: #cc0101;\n        .nav-name {\n          color: #cc0101;\n        }\n      }\n    }\n  }\n`;\n","import React, { memo, type FC } from 'react';\nconst PlaylistIcon: FC = () => {\n  return (\n    <div>\n      <svg\n        viewBox=\"0 0 24 24\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        focusable=\"false\"\n        className=\"style-scope yt-icon\"\n        style={{ pointerEvents: 'none', display: 'block', width: '100%', height: '100%' }}\n      >\n        <g className=\"style-scope yt-icon\">\n          <path\n            d=\"M22,7H2v1h20V7z M13,12H2v-1h11V12z M13,16H2v-1h11V16z M15,19v-8l7,4L15,19z\"\n            className=\"style-scope yt-icon\"\n          ></path>\n        </g>\n      </svg>\n    </div>\n  );\n};\nexport default memo(PlaylistIcon);\n","import React, { memo, FC } from 'react';\nconst PlaylistShadowIcon: FC = () => {\n  return (\n    <div>\n      <svg\n        viewBox=\"0 0 24 24\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        focusable=\"false\"\n        className=\"style-scope yt-icon\"\n        style={{ pointerEvents: 'none', display: 'block', width: '100%', height: '100%' }}\n      >\n        <g className=\"style-scope yt-icon\">\n          <path\n            d=\"M15,19v-8l7,4L15,19z M22,7H2v2h20V7z M13,13H2v-2h11V13z M13,17H2v-2h11V17z\"\n            className=\"style-scope yt-icon\"\n          ></path>\n        </g>\n      </svg>\n    </div>\n  );\n};\nexport default memo(PlaylistShadowIcon);\n","import React, {\n  memo,\n  type FC,\n  type ReactElement,\n  useState,\n  type ChangeEvent,\n  useEffect,\n  Suspense\n} from 'react';\nimport { useNavigate } from 'react-router';\nimport { type Map } from 'immutable';\nimport { NavListWrapper } from './style';\nimport {\n  HOME_PATH,\n  mainMenu,\n  type MainMenuType,\n  profileMenu,\n  studioMenu,\n  USER_PLAYLIST\n} from '../../constant/menu';\nimport { useSelector } from 'react-redux';\nimport { type ILogin } from '../../types/login/ILogin';\nimport UserIcon from '../../assets/html/user/userIcon';\n\nimport ImgUpload from '../common/imgUpload';\nimport { userUploadAvatar } from '../../network/user';\nimport { getUserPlaylist } from '../../network/playlist';\nimport { type IResponseType } from '../../types/responseType';\nimport { type IPage } from '../../types/IPage';\nimport { type IPlaylist } from '../../types/playlist/IPlaylist';\nimport PlaylistIcon from '../../assets/html/playlist/playlistIcon';\nimport PlaylistShadowIcon from '../../assets/html/playlist/playlistShadowIcon';\nimport { routes } from '../../router';\nimport UserPlaylist from '../../views/user-playlist';\ninterface IProps {\n  isHome: boolean;\n}\nconst NavList: FC<IProps> = (props): ReactElement => {\n  const { isHome } = props;\n  const [isAvatarModalOpen, setIsAvatarModalOpen] = useState<boolean>(false);\n  const [file, setFile] = useState<File | null>(null);\n  const [homeMain, setHomeMain] = useState<MainMenuType[]>(profileMenu);\n  // const [progress,setProgress]=useState<number>(0);\n  const navigate = useNavigate();\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  useEffect(() => {\n    if (isHome) {\n      getUserPlaylist<IResponseType<IPage<IPlaylist[]>>>(login.userMsg.userId, 0, 100000).then(\n        (data) => {\n          if (data.status === 200) {\n            if (data.data.list && data.data.list.length !== 0) {\n              const list = data.data.list.map((item) => {\n                return {\n                  id: item.id,\n                  name: item.name,\n                  path: USER_PLAYLIST + '/' + item.id,\n                  icon: <PlaylistIcon />,\n                  shadowIcon: <PlaylistShadowIcon />\n                };\n              });\n              if (list.length !== 0) {\n                /* for(let item of list){\n                const childrenRoute = routes.find((it)=>{\n                  return it.path === HOME_PATH\n                })\n                if(childrenRoute && childrenRoute.children && childrenRoute.children.length!==0){\n                  childrenRoute.children.push({\n                    path:USER_PLAYLIST+\"/\"+item.id,\n                    element:(\n                        <Suspense>\n                          <UserPlaylist id={item.id}/>\n                        </Suspense>\n                    )\n                  })\n                }\n              } */\n                const newMenu = profileMenu.concat(list);\n                setHomeMain(newMenu);\n              }\n            }\n          }\n        }\n      );\n    }\n  }, [login.userMsg.userId]);\n  const navClickHandle = (item: { name: string; path: string }, index: number) => {\n    document.title = item.name;\n    setCurrentIndex(index);\n    navigate(item.path, {\n      replace: true\n    });\n  };\n  const fileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.files && e.currentTarget.files.length !== 0) {\n      const file = e.currentTarget.files[0];\n      setFile(file);\n      setIsAvatarModalOpen(true);\n    }\n  };\n  const handleAvatarOk = (f?: File) => {\n    setIsAvatarModalOpen(false);\n  };\n  const handleAvatarCancel = () => {};\n  return (\n    <NavListWrapper>\n      {!isHome && (\n        <div className=\"user-avatar\">\n          <span>{login.userMsg.userName}</span>\n          <span className={'label'}>您的频道</span>\n          <div\n            className=\"img-container\"\n            title={login.userMsg && !login.userMsg.avatarUrl ? '上传头像' : ''}\n          >\n            {login.userMsg && login.userMsg.avatarUrl && (\n              <img src={login.userMsg.avatarUrl} alt={'avatar'} />\n            )}\n            {login.userMsg && !login.userMsg.avatarUrl && <UserIcon />}\n            {login.userMsg && !login.userMsg.avatarUrl && (\n              <input\n                type={'file'}\n                onChange={(e) => {\n                  fileChange(e);\n                }}\n                className=\"upload-avatar-icon\"\n              />\n            )}\n            <ImgUpload\n              isShow={isAvatarModalOpen}\n              isCustom={true}\n              realWidth={200}\n              fileSource={file}\n              aspectRatio={1}\n              handleOk={(file?: File) => {\n                handleAvatarOk(file);\n              }}\n              handleCancel={() => {\n                setIsAvatarModalOpen(false);\n              }}\n              uploadName={'avatar'}\n              network={userUploadAvatar}\n            />\n          </div>\n        </div>\n      )}\n      <ul className={`main-menu ${isHome ? '' : 'fold'}`}>\n        {isHome &&\n          mainMenu &&\n          mainMenu.length !== 0 &&\n          mainMenu.map((item, index) => {\n            return (\n              <li\n                key={item.name}\n                onClick={(e) => {\n                  navClickHandle(item, index);\n                }}\n                className={currentIndex === index ? 'active' : ''}\n              >\n                <div className=\"nav-icon\">\n                  {currentIndex === index ? item.shadowIcon : item.icon}\n                </div>\n                <div className=\"nav-name\">{item.name}</div>\n              </li>\n            );\n          })}\n        {!isHome &&\n          studioMenu &&\n          studioMenu.length !== 0 &&\n          studioMenu.map((item, index) => {\n            return (\n              <li\n                key={item.name}\n                onClick={(e) => {\n                  navClickHandle(item, index);\n                }}\n                className={currentIndex === index ? 'active' : ''}\n              >\n                <div className=\"nav-icon\">\n                  {currentIndex === index ? item.shadowIcon : item.icon}\n                </div>\n                <div className=\"nav-name\">{item.name}</div>\n              </li>\n            );\n          })}\n      </ul>\n      <ul className=\"profile-menu\">\n        {isHome &&\n          homeMain &&\n          homeMain &&\n          homeMain.map((item, index) => {\n            return (\n              <li\n                key={item.name}\n                onClick={(e) => {\n                  navClickHandle(item, index + mainMenu.length);\n                }}\n              >\n                <div className=\"nav-icon\">\n                  {currentIndex === index + mainMenu.length ? item.shadowIcon : item.icon}\n                </div>\n                <div className=\"nav-name text-nowrap\" title={item.name}>\n                  {item.name}\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </NavListWrapper>\n  );\n};\nexport default memo(NavList);\n","import styled from 'styled-components';\nexport const ProfileWrapper = styled.div`\n  background-color: #fff;\n  .ant-layout-content {\n    background-color: white;\n  }\n  .g-navigate-content {\n    max-height: 90vh;\n    overflow-y: scroll;\n  }\n`;\n","import React, { memo, type FC } from 'react';\nimport { ProfileWrapper } from './style';\nimport { Layout } from 'antd';\nimport HeaderTop from '../../components/header';\nimport NavList from '../../components/navList';\nimport { Outlet } from 'react-router-dom';\n\nconst { Header, Footer, Sider, Content } = Layout;\nconst Profile: FC = () => {\n  return (\n    <ProfileWrapper>\n      <Layout>\n        <Layout>\n          <Header>\n            <HeaderTop />\n          </Header>\n          <Layout>\n            <Sider>\n              <NavList isHome={false} />\n            </Sider>\n            <Content className=\"g-navigate-content\">\n              <Outlet />\n            </Content>\n          </Layout>\n        </Layout>\n      </Layout>\n    </ProfileWrapper>\n  );\n};\nexport default memo(Profile);\n"],"names":["props","ref","AntdIcon","icon","displayName","ImgUploadWrapper","styled","div","ImgUpload","isShow","fileSource","isCustom","handleOk","network","uploadName","realWidth","aspectRatio","handleCancel","progress","setProgress","useState","isShowCropper","setIsShowCropper","file","setFile","useEffect","uploadRef","useRef","React","Modal","title","open","maskClosable","destroyOnClose","onOk","async","formData","FormData","current","f","getCropperFile","append","res","e","loaded","total","status","width","onCancel","handleAvatarCancel","className","type","onChange","currentTarget","files","length","fileChange","PictureOutlined","CustomizeUpload","imgWidth","scale","isCircle","Progress","percent","parseFloat","toFixed","memo","NavListWrapper","PlaylistIcon","viewBox","preserveAspectRatio","focusable","style","pointerEvents","display","height","d","PlaylistShadowIcon","NavList","isHome","isAvatarModalOpen","setIsAvatarModalOpen","homeMain","setHomeMain","profileMenu","navigate","useNavigate","login","useSelector","state","getIn","currentIndex","setCurrentIndex","getUserPlaylist","userMsg","userId","then","data","list","map","item","id","name","path","USER_PLAYLIST","shadowIcon","newMenu","concat","navClickHandle","index","document","replace","userName","avatarUrl","src","alt","UserIcon","userUploadAvatar","mainMenu","key","onClick","studioMenu","ProfileWrapper","Header","Footer","Sider","Content","Layout","Profile","HeaderTop","Outlet"],"sourceRoot":""}