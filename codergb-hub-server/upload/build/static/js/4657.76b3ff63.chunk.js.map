{"version":3,"file":"static/js/4657.76b3ff63.chunk.js","mappings":"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","sources":["webpack://codergb-hub-client/./node_modules/@ant-design/icons-svg/es/asn/MoreOutlined.js","webpack://codergb-hub-client/./node_modules/@ant-design/icons/es/icons/MoreOutlined.js","webpack://codergb-hub-client/./node_modules/@ant-design/icons-svg/es/asn/PictureOutlined.js","webpack://codergb-hub-client/./node_modules/@ant-design/icons/es/icons/PictureOutlined.js","webpack://codergb-hub-client/./src/components/common/emptyHolder/style.tsx","webpack://codergb-hub-client/./src/components/common/emptyHolder/index.tsx","webpack://codergb-hub-client/./src/components/common/imgUpload/style.tsx","webpack://codergb-hub-client/./src/components/common/imgUpload/index.tsx","webpack://codergb-hub-client/./src/components/holder/index.tsx","webpack://codergb-hub-client/./src/utils/holder.tsx","webpack://codergb-hub-client/./src/constant/block.ts","webpack://codergb-hub-client/./src/network/block/index.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/basic/style.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/basic/index.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/brand/style.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/brand/childCpn/brandItem/style.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/brand/childCpn/brandItem/index.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/brand/childCpn/avatarUpload/style.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/brand/childCpn/avatarUpload/index.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/brand/index.tsx","webpack://codergb-hub-client/./src/assets/html/other/video/videoIcon.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/layout/style.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/layout/childCpn/videoSearch/style.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/layout/childCpn/videoSearch/index.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/layout/childCpn/block/style.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/layout/childCpn/block/childCpn/blockList/style.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/layout/childCpn/block/childCpn/blockList/childCpn/playlist/style.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/layout/childCpn/block/childCpn/blockList/childCpn/playlist/index.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/layout/childCpn/block/childCpn/blockList/index.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/layout/childCpn/block/childCpn/userBlockList/style.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/layout/childCpn/block/childCpn/userBlockList/index.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/layout/childCpn/block/index.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/childCpn/layout/index.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/style.tsx","webpack://codergb-hub-client/./src/views/profile/pages/customize/index.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar MoreOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M456 231a56 56 0 10112 0 56 56 0 10-112 0zm0 280a56 56 0 10112 0 56 56 0 10-112 0zm0 280a56 56 0 10112 0 56 56 0 10-112 0z\" } }] }, \"name\": \"more\", \"theme\": \"outlined\" };\nexport default MoreOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MoreOutlinedSvg from \"@ant-design/icons-svg/es/asn/MoreOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar MoreOutlined = function MoreOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MoreOutlinedSvg\n  }));\n};\nMoreOutlined.displayName = 'MoreOutlined';\nexport default /*#__PURE__*/React.forwardRef(MoreOutlined);","// This icon file is generated automatically.\nvar PictureOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136v-39.9l138.5-164.3 150.1 178L658.1 489 888 761.6V792zm0-129.8L664.2 396.8c-3.2-3.8-9-3.8-12.2 0L424.6 666.4l-144-170.7c-3.2-3.8-9-3.8-12.2 0L136 652.7V232h752v430.2zM304 456a88 88 0 100-176 88 88 0 000 176zm0-116c15.5 0 28 12.5 28 28s-12.5 28-28 28-28-12.5-28-28 12.5-28 28-28z\" } }] }, \"name\": \"picture\", \"theme\": \"outlined\" };\nexport default PictureOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PictureOutlinedSvg from \"@ant-design/icons-svg/es/asn/PictureOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PictureOutlined = function PictureOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PictureOutlinedSvg\n  }));\n};\nPictureOutlined.displayName = 'PictureOutlined';\nexport default /*#__PURE__*/React.forwardRef(PictureOutlined);","import styled from 'styled-components';\nexport const EmptyHolderWrapper: any = styled.div`\n  padding: ${(props) => `${(props as any).padding / 40}rem 0`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { memo, type FC, type ReactElement } from 'react';\nimport { Empty } from 'antd';\nimport { EmptyHolderWrapper } from './style';\ninterface IProps {\n  msg?: string;\n  padding: number;\n}\nconst EmptyHolder: FC<IProps> = (props): ReactElement => {\n  const { msg, padding } = props;\n  return (\n    <EmptyHolderWrapper padding={padding}>\n      <Empty description={msg || '暂无数据'} />\n    </EmptyHolderWrapper>\n  );\n};\nexport default memo(EmptyHolder);\n","import styled from 'styled-components';\nexport const ImgUploadWrapper = styled.div`\n  .global-upload-outer-cpn-style {\n    background-color: #3399ff;\n    .input-container {\n      width: 100%;\n      height: ${400 / 40}rem;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-color: #eeeeee;\n      input {\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        position: absolute;\n        cursor: pointer;\n      }\n      .msg-tip {\n        display: flex;\n        align-items: center;\n        flex-direction: column-reverse;\n        .img-icon {\n          svg {\n            width: ${70 / 40}rem;\n            height: ${70 / 40}rem;\n            color: #cc0101;\n          }\n        }\n        .tip {\n          font-size: ${24 / 40}rem;\n          letter-spacing: 5px;\n          margin: ${30 / 40}rem 0 0 0;\n        }\n      }\n    }\n  }\n`;\n","import React, {\n  memo,\n  type FC,\n  type ReactElement,\n  useState,\n  type ChangeEvent,\n  useEffect,\n  useRef\n} from 'react';\nimport { ImgUploadWrapper } from './style';\nimport { Modal, Progress } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\nimport CustomizeUpload from '../../customizeUpload';\nimport { type IResponseType } from '../../../types/responseType';\ninterface IProps {\n  realWidth: number;\n  isShow: boolean;\n  fileSource?: File | null;\n  isCustom: boolean;\n  handleOk: (file?: File | any) => void;\n  handleCancel: () => void;\n  network: (formDate: FormData, getProgress: (e: any) => void) => Promise<IResponseType<any>>;\n  uploadName: string;\n  aspectRatio: number;\n}\nconst ImgUpload: FC<IProps> = (props): ReactElement => {\n  const {\n    isShow,\n    fileSource,\n    isCustom,\n    handleOk,\n    network,\n    uploadName,\n    realWidth,\n    aspectRatio,\n    handleCancel\n  } = props;\n  const [progress, setProgress] = useState<number>(0);\n  const [isShowCropper, setIsShowCropper] = useState<boolean>(false);\n  const [file, setFile] = useState<File | null>(null);\n  useEffect(() => {\n    if (isCustom) {\n      setIsShowCropper(true);\n    }\n  }, [isCustom]);\n  const uploadRef = useRef<any>();\n  const fileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.files && e.currentTarget.files.length !== 0) {\n      setFile(e.currentTarget.files[0]);\n      setIsShowCropper(true);\n    }\n  };\n  const handleAvatarOk = async () => {\n    const formData = new FormData();\n    if (uploadRef.current) {\n      const f = await uploadRef.current.getCropperFile();\n      formData.append(uploadName, f);\n      const res = await network(formData, (e) => {\n        setProgress((e.loaded / e.total) * 100);\n      });\n      if (res.status === 200) {\n        handleOk(res);\n      }\n    }\n  };\n  const handleAvatarCancel = () => {\n    setProgress(0);\n    setIsShowCropper(false);\n    setFile(null);\n    handleCancel();\n  };\n  return (\n    <Modal\n      title=\"自定义图片\"\n      open={isShow}\n      maskClosable={false}\n      destroyOnClose={true}\n      onOk={handleAvatarOk}\n      width={'65%'}\n      onCancel={handleAvatarCancel}\n    >\n      {isShow && (\n        <ImgUploadWrapper>\n          <div className=\"global-upload-outer-cpn-style\">\n            {!isShowCropper && !isCustom && (\n              <div className=\"input-container\">\n                <input\n                  type=\"file\"\n                  onChange={(e) => {\n                    fileChange(e);\n                  }}\n                />\n                <div className=\"msg-tip\">\n                  <p className=\"tip\">请选择图片</p>\n                  <PictureOutlined className=\"img-icon\" />\n                </div>\n              </div>\n            )}\n            {isShowCropper && (\n              <CustomizeUpload\n                file={isCustom ? fileSource! : file}\n                imgWidth={5}\n                scale={1}\n                aspectRatio={aspectRatio}\n                isCircle={false}\n                realWidth={realWidth}\n                // @ts-expect-error\n                ref={uploadRef}\n              />\n            )}\n          </div>\n          <Progress percent={parseFloat(progress.toFixed(1))} />\n        </ImgUploadWrapper>\n      )}\n    </Modal>\n  );\n};\nexport default memo(ImgUpload);\n","import React from 'react';\nimport { holder } from '../../utils/holder';\nconst HolderCpn = (total: number, lineCount: number, width: number) => {\n  return holder(total, lineCount).map((item, index) => {\n    return (\n      <li\n        key={index}\n        style={{\n          width: `${width / 40}rem`,\n          height: 0,\n          border: 'none',\n          padding: 0,\n          margin: 0,\n          outline: 'none'\n        }}\n      >\n        {' '}\n      </li>\n    );\n  });\n};\nexport default HolderCpn;\n","export function holder(count: number, line: number): number[] {\n  let s: number[] = [];\n  for (let i = 0; i < Math.ceil(count / line) * line - count; i++) {\n    s.push(i);\n  }\n  return s;\n}\n","const UPLOADED_VIDEO = '上传的视频';\nconst HOT_VIDEO = '热门上传视频';\nconst SHORT = '短视频';\nconst LIVE = '正在直播';\nconst YESTERDAY_LIVE = '过往的直播归档的视频';\nconst LIVE_ON_THE_WAY = '即将开始的直播';\nconst SINGLE_PLAYLIST = '单个播放列表';\nconst CREATED_PLAYLIST = '创建的播放列表';\nconst MUL_PLAYLIST = '收藏的播放列表';\nconst SUB_CHANNEL = '订阅的频道';\nconst WONDER_CHANNEL = '精选频道';\nexport {\n  SINGLE_PLAYLIST,\n  UPLOADED_VIDEO,\n  HOT_VIDEO,\n  SHORT,\n  LIVE,\n  YESTERDAY_LIVE,\n  LIVE_ON_THE_WAY,\n  CREATED_PLAYLIST,\n  MUL_PLAYLIST,\n  SUB_CHANNEL,\n  WONDER_CHANNEL\n};\n","import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\nexport async function getAllBlock<T = IResponseType<any>>() {\n  return await gbRequest.get<T>({\n    url: '/block/all'\n  });\n}\nexport async function userAddBlock<T = IResponseType<any>>(blockId: string) {\n  return await gbRequest.post<T>({\n    url: '/block/user/add',\n    data: {\n      blockId\n    }\n  });\n}\nexport async function getUserBlock<T = IResponseType<any>>(userId: string) {\n  return await gbRequest.get<T>({\n    url: `/block/user/${userId}`\n  });\n}\n","import styled from 'styled-components';\nexport const BasicWrapper = styled.div`\n  .desc-label {\n    font-size: ${18 / 40}rem;\n    color: #606060;\n  }\n  .name-label-second {\n    margin: ${16 / 40}rem 0 0 0;\n  }\n  .publish-outer {\n    display: flex;\n    justify-content: flex-end;\n    button {\n      padding: ${5 / 40}rem ${15 / 40}rem;\n      background-color: #1162cc;\n      color: #fff;\n      font-size: ${18 / 40}rem;\n      border-radius: ${4 / 40}rem;\n    }\n    [disabled] {\n      background-color: #e5e5e5;\n      color: #000000;\n      cursor: not-allowed;\n    }\n  }\n`;\n","import React, { memo, type FC, type ReactElement, type FormEvent, useState } from 'react';\nimport { type Map } from 'immutable';\nimport { Input, notification } from 'antd';\nimport { BasicWrapper } from './style';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { type IChannel } from '../../../../../../types/channel/IChannel';\nimport { updateChannel } from '../../../../../../network/channel';\nimport { type Dispatch } from 'redux';\nimport { changeChannelAction } from '../../store/actionCreators';\nimport { type ILogin } from '../../../../../../types/login/ILogin';\nconst { TextArea } = Input;\nconst Basic: FC = (): ReactElement => {\n  const channel = useSelector<Map<string, IChannel>, IChannel>((state) => {\n    return state.getIn(['channelReducer', 'channel']) as IChannel;\n  });\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  const [name, setName] = useState<string>(channel.name);\n  const [desc, setDesc] = useState<string>(channel.description);\n  const dispatch = useDispatch<Dispatch<any>>();\n  const channelNameInp = (e: FormEvent<HTMLInputElement>) => {\n    setName(e.currentTarget.value);\n  };\n  const channelDescInp = (e: FormEvent<HTMLTextAreaElement>) => {\n    setDesc(e.currentTarget.value);\n  };\n  const updateChannelHandle = async () => {\n    const result = await updateChannel(channel.id, {\n      description: desc,\n      name\n    });\n    if (result.status === 200) {\n      dispatch(changeChannelAction(login.userMsg.userId));\n      notification.success({\n        message: `通知`,\n        description: '您的信息更新成功',\n        placement: 'bottomLeft'\n      });\n    }\n  };\n  return (\n    <BasicWrapper>\n      <div className=\"publish-outer\">\n        <button\n          disabled={!name || name.trim().length === 0 || !desc || desc.trim().length === 0}\n          onClick={async (e) => {\n            await updateChannelHandle();\n          }}\n        >\n          发布\n        </button>\n      </div>\n      <div className=\"name-label-first\">名称</div>\n      <p className=\"desc-label\">选用的频道名称要能反映您的身份和内容。</p>\n      <Input\n        placeholder=\"请输入人频道名称\"\n        value={name}\n        onInput={(e) => {\n          channelNameInp(e);\n        }}\n      />\n      <div className=\"name-label-second\">说明</div>\n      <p className=\"desc-label\">请介绍您的频道，方便大家认识你</p>\n      <TextArea\n        rows={4}\n        onInput={(e) => {\n          channelDescInp(e);\n        }}\n        value={desc}\n        placeholder=\"请输入简介\"\n        maxLength={200}\n      />\n    </BasicWrapper>\n  );\n};\nexport default memo(Basic);\n","import styled from 'styled-components';\nexport const BrandWrapper = styled.div``;\n","import styled from 'styled-components';\nexport const BrandItemWrapper: any = styled.div`\n  border-bottom: 1px solid #e5e5e5;\n  padding: 0 0 ${20 / 40}rem 0;\n  .title {\n    font-family: 'Roboto', 'Noto', sans-serif;\n    font-weight: 500;\n    -webkit-font-smoothing: antialiased;\n    font-size: 15px;\n  }\n  .label {\n    font-family: 'Roboto', 'Noto', sans-serif;\n    font-weight: 400;\n    -webkit-font-smoothing: antialiased;\n    font-size: 13px;\n  }\n  .content {\n    display: flex;\n    align-items: flex-start;\n    margin: ${20 / 40}rem 0 0 0;\n    .img-container {\n      width: ${300 / 40}rem;\n      height: ${170 / 40}rem;\n      background-color: #f9f9f9;\n      position: relative;\n      margin: 0 ${24 / 40}rem 0 0;\n      overflow: hidden;\n      img {\n        border-radius: ${(props: any) => (props.isAvatar ? '50%' : 0)};\n        height: 100%;\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n    }\n    .right-content {\n      width: 50%;\n      .desc {\n        font-size: 13px;\n        color: #606060;\n      }\n      .upload {\n        color: #1162cc;\n        cursor: pointer;\n        margin: 5px 0 0 0;\n      }\n    }\n  }\n`;\n","import React, { memo, FC, ReactElement } from 'react';\nimport { BrandItemWrapper } from './style';\ninterface IProps {\n  title: string;\n  label: string;\n  img: ReactElement;\n  desc: string;\n  uploadHandle: () => void;\n  operator: string;\n  isAvatar: boolean;\n}\nconst BrandItem: FC<IProps> = (props): ReactElement => {\n  const { title, label, img, desc, uploadHandle, operator, isAvatar } = props;\n  const uploadClick = () => {\n    uploadHandle();\n  };\n  return (\n    <BrandItemWrapper isAvatar={isAvatar}>\n      <div className=\"title\">{title}</div>\n      <div className=\"label\">{label}</div>\n      <div className=\"content\">\n        <div className=\"img-container\">{img}</div>\n        <div className=\"right-content\">\n          <p className=\"desc\">{desc}</p>\n          <div className=\"upload\" onClick={(e) => uploadClick()}>\n            {operator}\n          </div>\n        </div>\n      </div>\n    </BrandItemWrapper>\n  );\n};\nexport default memo(BrandItem);\n","import styled from 'styled-components';\nexport const AvatarUploadWrapper = styled.div`\n  .input-container {\n    width: 100%;\n    height: ${400 / 40}rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #eeeeee;\n    input {\n      width: 100%;\n      height: 100%;\n      opacity: 0;\n      position: absolute;\n      cursor: pointer;\n    }\n    .msg-tip {\n      display: flex;\n      align-items: center;\n      flex-direction: column-reverse;\n      .img-icon {\n        svg {\n          width: ${70 / 40}rem;\n          height: ${70 / 40}rem;\n          color: #cc0101;\n        }\n      }\n      .tip {\n        font-size: ${24 / 40}rem;\n        letter-spacing: 5px;\n        margin: ${30 / 40}rem 0 0 0;\n      }\n    }\n  }\n`;\n","import React, {\n  memo,\n  FC,\n  ReactElement,\n  ChangeEvent,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle\n} from 'react';\nimport { PictureOutlined } from '@ant-design/icons';\nimport { AvatarUploadWrapper } from './style';\n\nimport CustomizeUpload from '../../../../../../../../components/customizeUpload';\nconst AvatarUpload: FC = forwardRef((props, propsRef): ReactElement => {\n  const [file, setFile] = useState<File | null>(null);\n  const [isShowCropper, setIsShowCropper] = useState<boolean>(false);\n\n  const uploadRef = useRef<any>(null);\n  const fileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e.currentTarget.files);\n    if (e.currentTarget.files) {\n      setFile(e.currentTarget.files[0]);\n      setIsShowCropper(true);\n    }\n  };\n  const getCropperFile = async () => {\n    return await uploadRef.current.getCropperFile();\n  };\n  useImperativeHandle(propsRef, () => {\n    return {\n      getCropperFile: getCropperFile\n    };\n  });\n  return (\n    <AvatarUploadWrapper>\n      <div className=\"upload-outer\">\n        {!isShowCropper && (\n          <div className=\"input-container\">\n            <input type=\"file\" onChange={(e) => fileChange(e)} />\n            <div className=\"msg-tip\">\n              <p className=\"tip\">请选择图片</p>\n              <PictureOutlined className=\"img-icon\" />\n            </div>\n          </div>\n        )}\n        {isShowCropper && (\n          <CustomizeUpload\n            file={file}\n            imgWidth={5}\n            scale={1}\n            aspectRatio={1}\n            isCircle={false}\n            realWidth={200}\n            //@ts-ignore\n            ref={uploadRef}\n          />\n        )}\n      </div>\n    </AvatarUploadWrapper>\n  );\n});\nexport default memo(AvatarUpload);\n","import React, { memo, FC, ReactElement, useState, useRef } from 'react';\nimport { Map } from 'immutable';\nimport { Progress, Modal } from 'antd';\nimport { BrandWrapper } from './style';\nimport BrandItem from './childCpn/brandItem';\nimport AvatarUpload from './childCpn/avatarUpload';\nimport {\n  updateChannel,\n  uploadAvatar as uploadAvatarReq\n} from '../../../../../../network/channel/index';\nimport { ILogin } from '../../../../../../types/login/ILogin';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateAvatar } from '../../../../../../network/user';\nimport { IResponseType } from '../../../../../../types/responseType';\nimport ImgUpload from '../../../../../../components/common/imgUpload';\nimport { uploadImage } from '../../../../../../network/image';\nimport { IChannel } from '../../../../../../types/channel/IChannel';\nimport { changeChannelAction } from '../../store/actionCreators';\nimport { Dispatch } from 'redux';\nimport { changeUserDetailAction } from '../../../../../login/store/actionCreators';\nconst Brand: FC = (): ReactElement => {\n  const [isAvatarModalOpen, setIsAvatarModalOpen] = useState<boolean>(false);\n  const [isShowCover, setIsShowCover] = useState<boolean>(false);\n  const [progress, setProgress] = useState<number>(0);\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  const channel = useSelector<Map<string, IChannel>, IChannel>((state) => {\n    return state.getIn(['channelReducer', 'channel']) as IChannel;\n  });\n  const dispatch = useDispatch<Dispatch<any>>();\n  const avatarUpload = useRef<any>(null);\n  const uploadAvatar = () => {\n    setIsAvatarModalOpen(true);\n  };\n  const uploadCover = () => {\n    setIsShowCover(true);\n  };\n  //频道头像\n  const handleAvatarOk = async () => {\n    const file = await avatarUpload.current.getCropperFile();\n    let formData = new FormData();\n    formData.append('avatar', file);\n    let result: IResponseType<any>;\n    if (login.userMsg.avatarUrl) {\n      result = await updateAvatar(login.userMsg.userId, formData, (progress: any) => {\n        setProgress((progress.loaded / progress.total) * 100);\n      });\n    } else {\n      result = await uploadAvatarReq(formData, (progress: any) => {\n        setProgress((progress.loaded / progress.total) * 100);\n      });\n    }\n    if (result.status === 200) {\n      dispatch(changeUserDetailAction(login.userMsg.userId));\n      setIsAvatarModalOpen(false);\n    }\n  };\n  const handleAvatarCancel = () => {\n    setIsAvatarModalOpen(false);\n  };\n  //上传横幅\n  const uploadCoverHandle = async (res: any) => {\n    if (res && res.data && res.data.id) {\n      await updateChannel(channel.id, { banner: `${res.data.id}` });\n      if (login && login.userMsg && channel && Object.keys(res.data).length !== 0) {\n        dispatch(changeChannelAction(login.userMsg.userId));\n      }\n    }\n    setIsShowCover(false);\n  };\n  return (\n    <BrandWrapper>\n      <BrandItem\n        title={'照片'}\n        label={\n          '您的个人资料照片会随您的频道一起出现在 YouTube 上的一些地方，例如您的视频和评论旁边'\n        }\n        desc={\n          '建议使用一张不低于 98 x 98 像素而且大小不超过 4MB 的照片。文件格式为 PNG 或 GIF（不带动画）。请确保您的照片符合《YouTube 社区准则》'\n        }\n        operator={login.userMsg.avatarUrl ? '更换' : '上传'}\n        isAvatar={true}\n        img={<img src={login.userMsg.avatarUrl} />}\n        uploadHandle={() => uploadAvatar()}\n      />\n      <BrandItem\n        title={'横幅图片'}\n        label={'此图片将会显示在您频道的顶部'}\n        desc={\n          '建议使用一张不低于 98 x 98 像素而且大小不超过 4MB 的照片。文件格式为 PNG 或 GIF（不带动画）。请确保您的照片符合《YouTube 社区准则》'\n        }\n        operator={channel.picUrl ? '更换' : '上传'}\n        isAvatar={false}\n        img={<img src={channel.picUrl} />}\n        uploadHandle={() => uploadCover()}\n      />\n      <Modal\n        title=\"自定义图片\"\n        open={isAvatarModalOpen}\n        destroyOnClose={true}\n        onOk={handleAvatarOk}\n        width={'65%'}\n        onCancel={handleAvatarCancel}\n      >\n        <AvatarUpload\n          //@ts-ignore\n          ref={avatarUpload}\n        />\n        <Progress percent={parseFloat(progress.toFixed(1))} />\n      </Modal>\n      {/*上传横幅*/}\n      {isShowCover && (\n        <ImgUpload\n          isCustom={false}\n          aspectRatio={6.2}\n          realWidth={1000}\n          isShow={isShowCover}\n          handleOk={(res) => uploadCoverHandle(res)}\n          handleCancel={() => setIsShowCover(false)}\n          network={uploadImage}\n          uploadName={'file'}\n        />\n      )}\n    </BrandWrapper>\n  );\n};\nexport default memo(Brand);\n","import React, { memo, type FC, type ReactElement } from 'react';\nconst VideoIcon: FC = (): ReactElement => {\n  return (\n    <div>\n      <svg\n        viewBox=\"0 0 24 24\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        focusable=\"false\"\n        className=\"style-scope tp-yt-iron-icon\"\n        style={{ pointerEvents: 'none', display: 'block', width: '100%', height: '100%' }}\n      >\n        <g className=\"style-scope tp-yt-iron-icon\">\n          <path\n            d=\"M18 3v2h-2V3H8v2H6V3H4v18h2v-2h2v2h8v-2h2v2h2V3h-2zM8 17H6v-2h2v2zm0-4H6v-2h2v2zm0-4H6V7h2v2zm10 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V7h2v2z\"\n            className=\"style-scope tp-yt-iron-icon\"\n          ></path>\n        </g>\n      </svg>\n    </div>\n  );\n};\nexport default memo(VideoIcon);\n","import styled from 'styled-components';\nexport const LayoutWrapper = styled.div`\n  background-color: #ffffff;\n  .label {\n    font-family: 'Roboto', 'Noto', sans-serif;\n    font-weight: 500;\n    -webkit-font-smoothing: antialiased;\n    font-size: ${20 / 40}rem;\n  }\n  .tip {\n    font-family: 'Roboto', 'Noto', sans-serif;\n    font-weight: 400;\n    -webkit-font-smoothing: antialiased;\n    font-size: ${15 / 40}rem;\n  }\n  .trailer-outer {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border: 1px solid #e5e5e5;\n    padding: ${20 / 40}rem ${20 / 40}rem ${20 / 40}rem 0;\n    margin: ${20 / 40}rem 0 ${20 / 40}rem 0;\n    border-radius: 5px;\n    .left-content {\n      display: flex;\n      align-items: center;\n      .video-container {\n        width: ${45 / 40}rem;\n        height: ${45 / 40}rem;\n        background-color: #e9e9e9;\n        margin: 0 ${16 / 40}rem;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: ${5 / 40}rem;\n      }\n      &.trailer-start {\n        align-items: flex-start;\n        width: 100%;\n        .trailer {\n          margin: ${20 / 40}rem 0 0 0;\n          width: 90%;\n          display: flex;\n          align-items: flex-start;\n          .trailer-img-container {\n            width: ${280 / 40}rem;\n            img {\n              width: 100%;\n            }\n          }\n          .trailer-video-name {\n            width: 76%;\n            margin: 0 0 0 ${25 / 40}rem;\n          }\n        }\n      }\n    }\n    .right-content {\n      color: #065fd4;\n      cursor: pointer;\n      white-space: nowrap;\n    }\n  }\n`;\n","import styled from 'styled-components';\nexport const VideoSearchWrapper = styled.div`\n  .search-container {\n    display: flex;\n    align-items: center;\n    .user-self,\n    .video-lib {\n      flex: 1;\n    }\n  }\n  .video-list {\n    height: ${400 / 40}rem;\n    padding: ${24 / 40}rem 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    flex-wrap: wrap;\n    & > li {\n      padding: ${18 / 40}rem;\n      border: 1px solid #e5e5e5;\n      margin: 0 0 ${24 / 40}rem 0;\n      width: ${220 / 40}rem;\n      border-radius: ${4 / 40}rem;\n      &:hover {\n        border: 1px solid #065fd4;\n        cursor: pointer;\n      }\n      &.active {\n        border: 1px solid #065fd4;\n      }\n      .video-cover {\n        img {\n          width: 100%;\n        }\n      }\n      .video-name {\n        margin: ${15 / 40}rem 0 0 0;\n        font-size: ${18 / 40}rem;\n        height: ${50 / 40}rem;\n      }\n    }\n  }\n`;\n","import React, { memo, FC, ReactElement, useState } from 'react';\nimport { Map } from 'immutable';\nimport { AudioOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport { VideoSearchWrapper } from './style';\nimport { IVideo } from '../../../../../../../../types/video/IVideo';\nimport { getUserVideo } from '../../../../../../../../network/video';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ILogin } from '../../../../../../../../types/login/ILogin';\nimport { IResponseType } from '../../../../../../../../types/responseType';\nimport { IPage } from '../../../../../../../../types/IPage';\nimport HolderCpn from '../../../../../../../../components/holder';\nimport { updateChannel } from '../../../../../../../../network/channel';\nimport { IChannel } from '../../../../../../../../types/channel/IChannel';\nimport { Dispatch } from 'redux';\nimport { changeChannelAction } from '../../../../store/actionCreators';\nimport { log } from 'util';\n\nconst { Search } = Input;\ninterface IProps {\n  isTrailer: boolean;\n  updateVideo: (obj: Object) => void;\n}\nconst VideoSearch: FC<IProps> = (props): ReactElement => {\n  const { isTrailer, updateVideo } = props;\n  const [userInp, setUserInp] = useState<string>('');\n  const [userVideo, setUserVideo] = useState<IVideo[]>([]);\n  const [userVideoCount, setUserVideoCount] = useState<number>(0);\n  const [currentIndex, setCurrentIndex] = useState<number>(-1);\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  const getUserVideoHandle = async (keyword: string, offset: number, limit: number) => {\n    const result = await getUserVideo<IResponseType<IPage<IVideo[]>>>(\n      login.userMsg.userId,\n      keyword,\n      offset,\n      limit\n    );\n    if (result.status === 200) {\n      setUserVideo(result.data.list);\n      setUserVideoCount(result.data.count);\n    }\n  };\n  const onSearchUserSelf = async (value: string) => {\n    setUserInp(value);\n    await getUserVideoHandle(value, 0, 10);\n  };\n  const onSearchOther = () => {};\n  const changeVideo = async (item: IVideo, index: number) => {\n    setCurrentIndex(index);\n    let obj = {\n      [isTrailer ? 'trailer' : 'featured']: item.id\n    };\n    updateVideo(obj);\n  };\n  return (\n    <VideoSearchWrapper>\n      <div className=\"search-container\">\n        <div className=\"user-self\">\n          <Search placeholder=\"搜索您的视频\" onSearch={(value, event) => onSearchUserSelf(value)} />\n        </div>\n        {!isTrailer && (\n          <div className=\"video-lib\">\n            <Search placeholder=\"搜索整站的视频\" onSearch={(e) => onSearchOther()} />\n          </div>\n        )}\n      </div>\n      <ul className=\"video-list\">\n        {userVideo &&\n          userVideo.length !== 0 &&\n          userVideo.map((item, index) => {\n            return (\n              <li\n                key={item.id}\n                onClick={(e) => changeVideo(item, index)}\n                className={currentIndex === index ? 'active' : ''}\n              >\n                <div className=\"video-cover\">\n                  <img src={item.picUrl} alt={item.name} />\n                </div>\n                <div className=\"video-name text-nowrap-mul-line\">{item.name}</div>\n              </li>\n            );\n          })}\n        {HolderCpn(userVideo.length, 5, 220)}\n      </ul>\n    </VideoSearchWrapper>\n  );\n};\nexport default memo(VideoSearch);\n","import styled from 'styled-components';\nexport const BlockPageWrapper = styled.div`\n  margin: ${20 / 40}rem ${10 / 40}rem ${20 / 40}rem 0;\n  width: 90%;\n  .block-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    .header-left {\n      .name {\n        margin: 0 0 ${8 / 40}rem 0;\n      }\n      .desc {\n        font-size: ${16 / 40}rem;\n      }\n    }\n    .header-right {\n      display: flex;\n      align-items: center;\n\n      .add {\n        cursor: pointer;\n        svg {\n          color: #065fd4;\n        }\n      }\n      .add-label {\n        cursor: pointer;\n        color: #065fd4;\n        margin: 0 0 0 ${10 / 40}rem;\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\nexport const BlockListWrapper = styled.div`\n  background-color: #fff;\n  padding: ${15 / 40}rem 0;\n  .block-list {\n    & > li {\n      padding: ${8 / 40}rem ${25 / 40}rem;\n      white-space: nowrap;\n      &:hover {\n        background-color: #f9f9f9;\n        cursor: pointer;\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\nexport const PlaylistWrapper = styled.div`\n  .search-container {\n    display: flex;\n    align-items: center;\n    .user-self,\n    .video-lib {\n      flex: 1;\n    }\n  }\n`;\n","import React, { memo, type FC, type ReactElement, useState } from 'react';\nimport { PlaylistWrapper } from './style';\nimport { Input } from 'antd';\nconst { Search } = Input;\nconst Playlist: FC = (): ReactElement => {\n  const [userInp, setUserInp] = useState<string>('');\n  const onSearchUserSelf = async (value: string) => {\n    setUserInp(value);\n  };\n  const onSearchOther = () => {};\n  return (\n    <PlaylistWrapper>\n      <div className=\"search-container\">\n        <div className=\"user-self\">\n          <Search\n            placeholder=\"搜索您的播放列表\"\n            onSearch={async (value, event) => {\n              await onSearchUserSelf(value);\n            }}\n          />\n        </div>\n        <div className=\"video-lib\">\n          <Search\n            placeholder=\"搜索整站的播放列表\"\n            onSearch={(e) => {\n              onSearchOther();\n            }}\n          />\n        </div>\n      </div>\n    </PlaylistWrapper>\n  );\n};\nexport default memo(Playlist);\n","import React, { memo, type FC, type ReactElement, useEffect, useState } from 'react';\nimport { BlockListWrapper } from './style';\nimport { getAllBlock, userAddBlock } from '../../../../../../../../../../network/block';\nimport { type IResponseType } from '../../../../../../../../../../types/responseType';\nimport { type IBlock } from '../../../../../../../../../../types/block/IBlock';\nimport UploadVideo from '../../../../../../../../../../components/header/childCpn/uploadVideo';\nimport { Modal } from 'antd';\nimport {\n  CREATED_PLAYLIST,\n  HOT_VIDEO,\n  MUL_PLAYLIST,\n  SHORT,\n  SINGLE_PLAYLIST,\n  SUB_CHANNEL,\n  UPLOADED_VIDEO,\n  WONDER_CHANNEL\n} from '../../../../../../../../../../constant/block';\nimport { set } from 'immutable';\nimport Playlist from './childCpn/playlist';\ninterface IProps {\n  addBlock: () => void;\n}\nconst BlockList: FC<IProps> = (props): ReactElement => {\n  const { addBlock } = props;\n  const [block, setBlock] = useState<IBlock[]>([]);\n  const [isShowPlay, setIsShowPlay] = useState<boolean>(false);\n  useEffect(() => {\n    getAllBlock<IResponseType<IBlock[]>>().then((data) => {\n      if (data.status === 200) {\n        setBlock(data.data);\n      }\n    });\n  }, []);\n  const confirmHandle = () => {\n    setIsShowPlay(false);\n  };\n  const cancelHandle = () => {\n    setIsShowPlay(false);\n  };\n  const addBlockHandle = (item: IBlock) => {\n    console.log(item);\n    if (item.name === SINGLE_PLAYLIST) {\n      setIsShowPlay(true);\n    } else if (item.name === UPLOADED_VIDEO || item.name === HOT_VIDEO) {\n      userAddBlock(item.id).then((data) => {\n        if (data.status === 200) {\n          addBlock();\n        }\n      });\n    } else if (item.name === CREATED_PLAYLIST || item.name === MUL_PLAYLIST) {\n      userAddBlock(item.id).then((data) => {\n        if (data.status === 200) {\n          addBlock();\n        }\n      });\n    } else if (item.name === SUB_CHANNEL) {\n      userAddBlock(item.id).then((data) => {\n        if (data.status === 200) {\n          addBlock();\n        }\n      });\n    } else if (item.name === WONDER_CHANNEL) {\n      userAddBlock(item.id).then((data) => {\n        if (data.status === 200) {\n          addBlock();\n        }\n      });\n    } else if (item.name === SHORT) {\n      userAddBlock(item.id).then((data) => {\n        if (data.status === 200) {\n          addBlock();\n        }\n      });\n    }\n  };\n  return (\n    <BlockListWrapper>\n      <ul className=\"block-list\">\n        {block &&\n          block.length !== 0 &&\n          block.map((item, index) => {\n            return (\n              <li\n                key={item.id}\n                onClick={(e) => {\n                  addBlockHandle(item);\n                }}\n              >\n                {item.name}\n              </li>\n            );\n          })}\n      </ul>\n      <Modal\n        title=\"选择播放列表\"\n        cancelText={'取消'}\n        okText={'确定'}\n        open={isShowPlay}\n        onOk={confirmHandle}\n        maskClosable={false}\n        destroyOnClose={true}\n        width={'60%'}\n        onCancel={cancelHandle}\n      >\n        {isShowPlay && <Playlist />}\n      </Modal>\n    </BlockListWrapper>\n  );\n};\nexport default memo(BlockList);\n","import styled from 'styled-components';\nexport const UserBlockListWrapper = styled.div`\n  margin: ${20 / 40}rem 0 0 0;\n  .user-block-list {\n    & > li {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      border: 1px solid #e5e5e5;\n      margin: 0 0 ${20 / 40}rem 0;\n      padding: ${17 / 40}rem ${20 / 40}rem;\n      border-radius: 4px;\n      .left-container {\n        .layout-icon {\n          width: 10%;\n        }\n        .block {\n          .block-name {\n            font-size: ${18 / 40}rem;\n            color: #0d0d0d;\n            margin: 0 0 ${13 / 40}rem 0;\n          }\n          .block-desc {\n            font-size: ${16 / 40}rem;\n            color: #606060;\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { memo, type FC, type ReactElement, useState, useEffect } from 'react';\nimport { type Map } from 'immutable';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { UserBlockListWrapper } from './style';\nimport { type IBlock } from '../../../../../../../../../../types/block/IBlock';\nimport { getUserBlock } from '../../../../../../../../../../network/block';\nimport { type IResponseType } from '../../../../../../../../../../types/responseType';\nimport { useSelector } from 'react-redux';\nimport { type ILogin } from '../../../../../../../../../../types/login/ILogin';\nimport EmptyHolder from '../../../../../../../../../../components/common/emptyHolder';\nconst UserBlockList: FC = (): ReactElement => {\n  const [block, setBlock] = useState<IBlock[]>([]);\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  useEffect(() => {\n    if (login && login.userMsg) {\n      getUserBlock<IResponseType<IBlock[]>>(login.userMsg.userId).then((data) => {\n        if (data.status === 200) {\n          setBlock(data.data);\n        }\n      });\n    }\n  }, [login]);\n  return (\n    <UserBlockListWrapper>\n      <ul className=\"user-block-list\">\n        {block &&\n          block.length !== 0 &&\n          block.map((item) => {\n            return (\n              <li key={item.id}>\n                <div className=\"left-container\">\n                  <div className=\"layout-icon\"> </div>\n                  <div className=\"block\">\n                    <div className=\"block-name\">{item.name}</div>\n                    <div className=\"block-desc\">{item.description}</div>\n                  </div>\n                </div>\n                <div className=\"right-container\">\n                  <MoreOutlined />\n                </div>\n              </li>\n            );\n          })}\n        {block && block.length == 0 && (\n          <EmptyHolder msg={'请添加板块，添加后在您的首页显示'} padding={70} />\n        )}\n      </ul>\n    </UserBlockListWrapper>\n  );\n};\nexport default memo(UserBlockList);\n","import { memo, type FC, type ReactElement, useState } from 'react';\nimport { Dropdown, Modal } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { BlockPageWrapper } from './style';\nimport BlockList from './childCpn/blockList';\nimport UserBlockList from './childCpn/userBlockList';\nconst BlockPage: FC = (): ReactElement => {\n  const [keyIndex, setKeyIndex] = useState<number>(1);\n  const addBlockHandle = () => {\n    setKeyIndex(keyIndex + 1);\n  };\n  return (\n    <BlockPageWrapper>\n      <div className=\"block-header\">\n        <div className=\"header-left\">\n          <div className=\"name\">精选板块</div>\n          <div className=\"desc\">自定义频道首页的布局</div>\n        </div>\n        <div className=\"header-right\">\n          <div className=\"add-icon\">\n            <PlusOutlined className=\"add\" />\n          </div>\n          <Dropdown\n            overlayClassName={'profile-drop-style'}\n            placement={'topLeft'}\n            trigger={['click']}\n            overlay={\n              <BlockList\n                addBlock={() => {\n                  addBlockHandle();\n                }}\n              />\n            }\n          >\n            <div className=\"add-label\">添加板块</div>\n          </Dropdown>\n        </div>\n      </div>\n      <UserBlockList key={keyIndex} />\n    </BlockPageWrapper>\n  );\n};\nexport default memo(BlockPage);\n","import { memo, type FC, ReactElement, useState } from 'react';\nimport { type Map } from 'immutable';\nimport { Modal } from 'antd';\nimport VideoIcon from '../../../../../../assets/html/other/video/videoIcon';\nimport { LayoutWrapper } from './style';\nimport VideoSearch from './childCpn/videoSearch';\nimport BlockPage from './childCpn/block';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { type IChannel } from '../../../../../../types/channel/IChannel';\nimport { updateChannel } from '../../../../../../network/channel';\nimport { changeChannelAction } from '../../store/actionCreators';\nimport { type Dispatch } from 'redux';\nimport { type ILogin } from '../../../../../../types/login/ILogin';\nconst Layout: FC = () => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [isTrailer, setTrailer] = useState<boolean>(true);\n  const [videoInfo, setVideoInfo] = useState<Object>({});\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  const channel = useSelector<Map<string, IChannel>, IChannel>((state) => {\n    return state.getIn(['channelReducer', 'channel']) as IChannel;\n  });\n  const dispatch = useDispatch<Dispatch<any>>();\n  console.log(channel);\n  // 添加预告片\n  const addTrailHandle = () => {\n    setTrailer(true);\n    setIsModalOpen(true);\n  };\n  // 添加推荐视频\n  const addRecHandle = () => {\n    setTrailer(false);\n    setIsModalOpen(true);\n  };\n  const handleOk = async () => {\n    console.log(channel);\n    await updateChannel(channel.id, videoInfo);\n    if (login && login.userMsg && channel && Object.keys(videoInfo).length !== 0) {\n      dispatch(changeChannelAction(login.userMsg.userId));\n    }\n    setIsModalOpen(false);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n  const changeVideo = async (obj: Object) => {\n    console.log(obj);\n    setVideoInfo(obj);\n  };\n  return (\n    <LayoutWrapper>\n      <div className=\"label\">主推视频</div>\n      <div className=\"tip\">在您的频道首页顶部添加一个视频</div>\n      <div className=\"trailer-outer\">\n        <div className={`left-content ${channel?.trailer ? 'trailer-start' : ''}`}>\n          <div className=\"video-container\">\n            <VideoIcon />\n          </div>\n          <div style={{ flex: 1 }}>\n            <div className=\"label\">频道预告片-用来吸引尚未订阅的用户</div>\n            <div className=\"tip\">向尚未订阅的用户分享您的频道的预览</div>\n            {channel?.trailer && (\n              <div className=\"trailer\">\n                <div className=\"trailer-img-container\">\n                  <img src={channel.trailer.picUrl} />\n                </div>\n                <div className=\"trailer-video-name\">{channel.trailer.name}</div>\n              </div>\n            )}\n          </div>\n        </div>\n        {\n          <div\n            className=\"right-content\"\n            onClick={(e) => {\n              addTrailHandle();\n            }}\n          >\n            {!channel || (channel && !channel.trailer) ? '添加' : '更换'}\n          </div>\n        }\n      </div>\n      <div className=\"trailer-outer\">\n        <div className={`left-content ${channel?.trailer ? 'trailer-start' : ''}`}>\n          <div className=\"video-container\">\n            <VideoIcon />\n          </div>\n          <div style={{ flex: 1 }}>\n            <div className=\"label\">精选视频 - 用来吸引回访的订阅者</div>\n            <div className=\"tip\">重点推荐一个视频，吸引您的订阅者观看。</div>\n            {channel?.featured && (\n              <div className=\"trailer\">\n                <div className=\"trailer-img-container\">\n                  <img src={channel.featured.picUrl} />\n                </div>\n                <div className=\"trailer-video-name\">{channel.featured.name}</div>\n              </div>\n            )}\n          </div>\n        </div>\n        {\n          <div\n            className=\"right-content\"\n            onClick={(e) => {\n              addRecHandle();\n            }}\n          >\n            {!channel || (channel && !channel.featured) ? '添加' : '更换'}\n          </div>\n        }\n      </div>\n      <Modal\n        open={isModalOpen}\n        onOk={handleOk}\n        cancelText={'取消'}\n        destroyOnClose={true}\n        okText={'确定'}\n        title={'选择视频'}\n        width={'65%'}\n        onCancel={handleCancel}\n      >\n        <VideoSearch\n          isTrailer={isTrailer}\n          updateVideo={async (obj) => {\n            await changeVideo(obj);\n          }}\n        />\n      </Modal>\n      <BlockPage />\n    </LayoutWrapper>\n  );\n};\nexport default memo(Layout);\n","import styled from 'styled-components';\nexport const CustomizeWrapper = styled.div`\n  .title-tip {\n    font-size: ${30 / 40}rem;\n    font-weight: bolder;\n    padding: ${5 / 40}rem 0 ${5 / 40}rem 0;\n  }\n  .tab-pub {\n    display: flex;\n    align-items: flex-start;\n    .customize-tabs {\n      flex: 1;\n    }\n    .pub-btn {\n      cursor: pointer;\n      background-color: #065fd4;\n      color: #fff;\n      padding: ${5 / 40}rem ${15 / 40}rem;\n      border-radius: ${6 / 40}rem;\n    }\n  }\n`;\n","import { memo, type FC, type ReactElement } from 'react';\nimport { Tabs } from 'antd';\nimport Basic from './childCpn/basic';\nimport Brand from './childCpn/brand';\nimport Layout from './childCpn/layout';\nimport { CustomizeWrapper } from './style';\nconst Customize: FC = (): ReactElement => {\n  const onChange = () => {};\n  return (\n    <CustomizeWrapper>\n      <div className=\"title-tip\">频道自定义</div>\n      <div className=\"tab-pub\">\n        <div className=\"customize-tabs\">\n          <Tabs\n            defaultActiveKey=\"1\"\n            onChange={onChange}\n            items={[\n              {\n                label: `布局`,\n                key: '1',\n                children: <Layout />\n              },\n              {\n                label: `品牌`,\n                key: '2',\n                children: <Brand />\n              },\n              {\n                label: `基本信息`,\n                key: '3',\n                children: <Basic />\n              }\n            ]}\n          />\n        </div>\n      </div>\n    </CustomizeWrapper>\n  );\n};\nexport default memo(Customize);\n"],"names":["props","ref","AntdIcon","icon","displayName","EmptyHolderWrapper","styled","div","padding","EmptyHolder","msg","React","Empty","description","memo","ImgUploadWrapper","ImgUpload","isShow","fileSource","isCustom","handleOk","network","uploadName","realWidth","aspectRatio","handleCancel","progress","setProgress","useState","isShowCropper","setIsShowCropper","file","setFile","useEffect","uploadRef","useRef","Modal","title","open","maskClosable","destroyOnClose","onOk","async","formData","FormData","current","f","getCropperFile","append","res","e","loaded","total","status","width","onCancel","handleAvatarCancel","className","type","onChange","currentTarget","files","length","fileChange","PictureOutlined","CustomizeUpload","imgWidth","scale","isCircle","Progress","percent","parseFloat","toFixed","HolderCpn","lineCount","count","line","s","i","Math","ceil","push","holder","map","item","index","key","style","height","border","margin","outline","UPLOADED_VIDEO","HOT_VIDEO","SHORT","SINGLE_PLAYLIST","CREATED_PLAYLIST","MUL_PLAYLIST","SUB_CHANNEL","WONDER_CHANNEL","getAllBlock","gbRequest","get","url","userAddBlock","blockId","post","data","getUserBlock","userId","BasicWrapper","TextArea","Input","Basic","channel","useSelector","state","getIn","login","name","setName","desc","setDesc","dispatch","useDispatch","disabled","trim","onClick","updateChannel","id","changeChannelAction","userMsg","notification","success","message","placement","updateChannelHandle","placeholder","value","onInput","channelNameInp","rows","channelDescInp","maxLength","BrandWrapper","BrandItemWrapper","isAvatar","BrandItem","label","img","uploadHandle","operator","AvatarUploadWrapper","AvatarUpload","forwardRef","propsRef","useImperativeHandle","console","log","Brand","isAvatarModalOpen","setIsAvatarModalOpen","isShowCover","setIsShowCover","avatarUpload","avatarUrl","src","picUrl","result","updateAvatar","uploadAvatarReq","changeUserDetailAction","banner","Object","keys","uploadCoverHandle","uploadImage","VideoIcon","viewBox","preserveAspectRatio","focusable","pointerEvents","display","d","LayoutWrapper","VideoSearchWrapper","Search","VideoSearch","isTrailer","updateVideo","userInp","setUserInp","userVideo","setUserVideo","userVideoCount","setUserVideoCount","currentIndex","setCurrentIndex","onSearchUserSelf","keyword","offset","limit","getUserVideo","list","getUserVideoHandle","onSearch","event","obj","changeVideo","alt","BlockPageWrapper","BlockListWrapper","PlaylistWrapper","Playlist","BlockList","addBlock","block","setBlock","isShowPlay","setIsShowPlay","then","addBlockHandle","cancelText","okText","confirmHandle","cancelHandle","UserBlockListWrapper","UserBlockList","MoreOutlined","BlockPage","keyIndex","setKeyIndex","createElement","PlusOutlined","Dropdown","overlayClassName","trigger","overlay","Layout","isModalOpen","setIsModalOpen","setTrailer","videoInfo","setVideoInfo","trailer","flex","featured","CustomizeWrapper","Customize","Tabs","defaultActiveKey","items","children"],"sourceRoot":""}