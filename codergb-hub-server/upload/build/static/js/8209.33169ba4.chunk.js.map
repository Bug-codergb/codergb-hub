{"version":3,"file":"static/js/8209.33169ba4.chunk.js","mappings":"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","sources":["webpack://codergb-hub-client/./src/components/content/add/style.tsx","webpack://codergb-hub-client/./src/components/content/playlist/style.tsx","webpack://codergb-hub-client/./src/components/content/playlist/index.tsx","webpack://codergb-hub-client/./src/components/content/add/index.tsx","webpack://codergb-hub-client/./src/constant/centerWidth.tsx","webpack://codergb-hub-client/./src/components/content/detail/videoDetail/style.tsx","webpack://codergb-hub-client/./src/components/content/detail/videoDetail/childCpn/videoInfo/style.tsx","webpack://codergb-hub-client/./src/components/content/detail/videoDetail/childCpn/videoInfo/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/videoDetail/childCpn/dm/style.tsx","webpack://codergb-hub-client/./src/network/dm/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/videoDetail/childCpn/dm/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/videoDetail/childCpn/similar/style.tsx","webpack://codergb-hub-client/./src/components/content/detail/videoDetail/childCpn/similar/index.tsx","webpack://codergb-hub-client/./src/components/content/detail/videoDetail/childCpn/collectionVideo/style.tsx","webpack://codergb-hub-client/./src/components/content/detail/videoDetail/childCpn/collectionVideo/index.tsx","webpack://codergb-hub-client/./src/utils/getRandom.tsx","webpack://codergb-hub-client/./src/utils/dom.ts","webpack://codergb-hub-client/./src/components/content/detail/videoDetail/index.tsx","webpack://codergb-hub-client/./src/constant/addList.ts","webpack://codergb-hub-client/./src/hook/useSub/index.tsx","webpack://codergb-hub-client/./src/network/collection/index.tsx","webpack://codergb-hub-client/./src/network/history/index.tsx","webpack://codergb-hub-client/./src/network/later/index.tsx","webpack://codergb-hub-client/./src/network/subscriber/index.tsx","webpack://codergb-hub-client/./src/utils/time.tsx"],"sourcesContent":["import styled from 'styled-components';\nexport const AddWrapper = styled.div`\n  background-color: #fff;\n  box-shadow: 0 0 ${15 / 40}rem rgba(0, 0, 0, 0.18);\n  .add-list {\n    padding: ${26 / 40}rem 0;\n    & > li {\n      padding: ${12 / 40}rem ${20 / 40}rem;\n      cursor: pointer;\n      .name {\n        font-size: ${18 / 40}rem;\n      }\n      &:hover {\n        background-color: #e5e5e5;\n      }\n    }\n  }\n  .ant-select {\n    width: 100%;\n  }\n  .create-playlist {\n    padding: 0 0 ${20 / 40}rem 0;\n    p {\n      display: flex;\n      justify-content: flex-start;\n      font-size: ${18 / 40}rem;\n      color: #606060;\n      margin: ${14 / 40}rem 0;\n    }\n    .private {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n    .create-label {\n      font-size: ${18 / 40}rem;\n      color: #065fd4;\n      margin: ${20 / 40}rem 0 0 0;\n      cursor: pointer;\n      width: 100%;\n    }\n  }\n`;\n","import styled from 'styled-components';\nexport const PlaylistWrapper = styled.div`\n  .add-play-list {\n    & > li {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${8 / 40}rem 0;\n      .left-container {\n        display: flex;\n        align-items: center;\n        .play-list-name {\n          margin: 0 0 0 ${30 / 40}rem;\n        }\n      }\n    }\n  }\n`;\n","import React, { memo, type FC, useState, useEffect } from 'react';\nimport type { CheckboxChangeEvent } from 'antd/es/checkbox';\nimport { PlaylistWrapper } from './style';\nimport { Checkbox } from 'antd';\nimport { EyeInvisibleOutlined, EyeOutlined } from '@ant-design/icons';\nimport { type IPlaylist } from '../../../types/playlist/IPlaylist';\nimport { useSelector } from 'react-redux';\nimport { type Map } from 'immutable';\nimport { type ILogin } from '../../../types/login/ILogin';\nimport { getUserPlaylist } from '../../../network/playlist';\nimport { type IResponseType } from '../../../types/responseType';\nimport { type IPage } from '../../../types/IPage';\ninterface IProps {\n  select: (checked: boolean, item: IPlaylist) => void;\n}\nconst Playlist: FC<IProps> = (props) => {\n  const { select } = props;\n  const [playlist, setPlaylist] = useState<IPlaylist[]>([]);\n  const [count, setCount] = useState<number>(0);\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  useEffect(() => {\n    getUserPlaylist<IResponseType<IPage<IPlaylist[]>>>(login.userMsg.userId, 0, 10).then((data) => {\n      if (data.status === 200) {\n        setPlaylist(data.data.list);\n        setCount(data.data.count);\n      }\n    });\n  }, [login]);\n\n  const selectChangeHandle = (e: CheckboxChangeEvent, item: IPlaylist) => {\n    select(e.target.checked, item);\n  };\n  return (\n    <PlaylistWrapper>\n      <ul className=\"add-play-list\">\n        {playlist &&\n          playlist.length !== 0 &&\n          playlist.map((item, index) => {\n            return (\n              <li key={item.id}>\n                <div className=\"left-container\">\n                  <div className=\"check\">\n                    <Checkbox\n                      onChange={(e) => {\n                        selectChangeHandle(e, item);\n                      }}\n                    />\n                  </div>\n                  <div className=\"play-list-name\">{item.name}</div>\n                </div>\n                <div className=\"right-container\">\n                  {item.isPublic === 1 && <EyeOutlined />}\n                  {item.isPublic !== 1 && <EyeInvisibleOutlined />}\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </PlaylistWrapper>\n  );\n};\nexport default memo(Playlist);\n","import React, {\n  memo,\n  type FC,\n  type ReactElement,\n  useState,\n  type FormEvent,\n  useImperativeHandle,\n  forwardRef,\n  type Ref,\n  type MouseEvent\n} from 'react';\nimport { Modal, Input, Select, notification, Menu } from 'antd';\nimport { EyeInvisibleOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\nimport type { NotificationPlacement } from 'antd/es/notification';\nimport { AddWrapper } from './style';\nimport { ADD_PLAYLIST, ADD_WATCH_LATER, addList, type IAddType } from '../../../constant/addList';\nimport Playlist from '../playlist';\nimport { addVideoPlaylist, createPlaylist } from '../../../network/playlist';\nimport { type IPlaylist } from '../../../types/playlist/IPlaylist';\nimport { addLater } from '../../../network/later';\n\nconst { Option } = Select;\ninterface IAdd {\n  liClick: (item: IAddType) => void;\n}\ninterface IProps {\n  id: string;\n  ref: Ref<IAdd> | null;\n}\nconst Add: FC<IProps> = forwardRef((props, propsRef): ReactElement => {\n  const { id } = props;\n  const [isShowAddPlay, setIsShowPlay] = useState<boolean>(false);\n  const [isCreate, setIsCreate] = useState<boolean>(false);\n  const [keyIndex, setKeyIndex] = useState<number>(1);\n\n  const [name, setName] = useState<string>('');\n  const [isPublic, setIsPublic] = useState<number>(0);\n\n  const openNotification = (placement: NotificationPlacement) => {\n    notification.info({\n      message: `已成功添加至稍后观看`,\n      description: '在\"稍后观看\"查看您添加的视频',\n      placement\n    });\n  };\n\n  const liClick = (item: IAddType) => {\n    if (item.name === ADD_PLAYLIST) {\n      setIsShowPlay(true);\n    }\n    if (item.name === ADD_WATCH_LATER) {\n      addLater(id)\n        .then((data) => {\n          console.log(data);\n          if (data.status === 200) {\n            openNotification('bottomLeft');\n          }\n        })\n        .catch((err) => {});\n    }\n  };\n\n  useImperativeHandle<IAdd, IAdd>(propsRef, () => {\n    return {\n      liClick\n    };\n  });\n  const cancelHandle = () => {\n    setIsShowPlay(false);\n  };\n  const nameInpHandle = (e: FormEvent<HTMLInputElement>) => {\n    setName(e.currentTarget.value);\n  };\n  const selectPublicHandle = (value: number) => {\n    setIsPublic(value);\n  };\n  // 创建播放列表\n  const createHandle = () => {\n    if (name) {\n      createPlaylist(name, name, isPublic).then((data) => {\n        if (data.status === 200) {\n          setIsCreate(false);\n          setKeyIndex(keyIndex + 1);\n        }\n      });\n    }\n  };\n  const checkHandle = (checked: boolean, item: IPlaylist) => {\n    if (checked) {\n      addVideoPlaylist(id, item.id).then((data) => {\n        if (data.status === 200) {\n          notification.info({\n            message: `已成功添加至${item.name}`,\n            description: `在\"${item.name}\"查看您添加的视频`,\n            placement: 'bottomLeft'\n          });\n        }\n      });\n    }\n  };\n\n  const createPlaylistHandler = (e: MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n    setIsCreate(true);\n  };\n  return (\n    <AddWrapper>\n      <div\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n      >\n        <Modal\n          key={id}\n          title=\"保存到...\"\n          width={'30%'}\n          destroyOnClose={true}\n          maskClosable={false}\n          open={isShowAddPlay}\n          onCancel={(e) => {\n            cancelHandle();\n          }}\n          footer={\n            !isCreate\n              ? [\n                  <div className=\"add-new-playlist\">\n                    <PlusOutlined />\n                    <div\n                      className=\"add-label\"\n                      onClick={(e) => {\n                        createPlaylistHandler(e);\n                      }}\n                    >\n                      新建播放列表\n                    </div>\n                  </div>\n                ]\n              : [\n                  <div className=\"create-playlist\">\n                    <p>名称</p>\n                    <Input\n                      placeholder=\"请输入播放列表名称\"\n                      showCount\n                      maxLength={20}\n                      onInput={(e) => {\n                        nameInpHandle(e);\n                      }}\n                    />\n                    <p>隐私设置</p>\n                    <Select\n                      onChange={selectPublicHandle}\n                      value={isPublic}\n                      placeholder={'请选择播放列表属性'}\n                    >\n                      <Option value={0}>\n                        <div className=\"private\">\n                          <div className=\"name\">私享</div>\n                          <div className=\"icon\">\n                            <EyeInvisibleOutlined />\n                          </div>\n                        </div>\n                      </Option>\n                      <Option value={1}>\n                        <div className=\"private\">\n                          <div className=\"name\">公开</div>\n                          <div className=\"icon\">\n                            <EyeOutlined />\n                          </div>\n                        </div>\n                      </Option>\n                    </Select>\n                    <div\n                      className=\"create-label\"\n                      onClick={(e) => {\n                        createHandle();\n                      }}\n                    >\n                      创建\n                    </div>\n                  </div>\n                ]\n          }\n        >\n          {isShowAddPlay && (\n            <Playlist\n              key={keyIndex}\n              select={(checked, item) => {\n                checkHandle(checked, item);\n              }}\n            />\n          )}\n        </Modal>\n      </div>\n    </AddWrapper>\n  );\n});\nexport default memo(Add);\n","const centerWidth = 1780;\nexport { centerWidth };\n","import styled from 'styled-components';\nimport { centerWidth } from '../../../../constant/centerWidth';\n\nexport const VideoDetailWrapper = styled.div``;\nexport const CenterContent = styled.div`\n  width: ${centerWidth / 40}rem;\n  margin: 0 auto;\n  display: flex;\n  align-items: flex-start;\n`;\nexport const LeftContentWrapper: any = styled.div`\n  width: 67%;\n  padding: ${20 / 40}rem 0;\n  .video-dm-container {\n    width: ${1190 / 40}rem;\n    height: ${640 / 40}rem;\n    position: relative;\n    overflow: hidden;\n    .inner {\n      display: flex;\n      align-items: center;\n      height: 100%;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      .start,\n      .end {\n        width: 400px;\n        height: 100%;\n      }\n      .start {\n        display: flex;\n        justify-content: flex-end;\n        position: relative;\n        z-index: 99;\n        & > ul {\n          display: flex;\n          flex-direction: column-reverse;\n          align-items: flex-end;\n          & > li {\n            text-align: end;\n            list-style: none;\n            background-color: rgba(0, 0, 0, 0.4);\n            border-radius: 18px;\n            padding: 5px 12px 8px 12px;\n            color: #fff;\n            font-weight: bolder;\n            letter-spacing: 2px;\n            font-size: ${20 / 40}rem;\n            text-shadow: 1px 1px 2px black;\n          }\n        }\n      }\n      .text {\n        white-space: nowrap;\n        color: #ec4141;\n      }\n    }\n  }\n  .video-container {\n    width: ${1190 / 40}rem;\n    height: ${640 / 40}rem;\n    overflow: hidden;\n    background-color: black;\n    border-radius: 3px;\n    position: relative;\n    video {\n      width: 100%;\n      height: 100%;\n      object-position: 50% 50%;\n      object-fit: contain;\n    }\n    .controller-container {\n      position: absolute;\n      left: 0;\n      top: 100%;\n      width: 100%;\n      padding: 20px 0 15px 0;\n      transform: translate(0, -100%);\n      color: #fff;\n      background: linear-gradient(to top, rgba(33, 33, 33, 0.9) 1%, rgba(0, 0, 0, 0) 99%);\n      .container {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 0 10px;\n        .left {\n          display: flex;\n          align-items: center;\n          .play-pause {\n            margin: 0 ${8 / 40}rem 0 0;\n            display: flex;\n            align-items: center;\n            svg {\n              font-size: ${28 / 40}rem;\n              cursor: pointer;\n            }\n          }\n          .dt {\n            display: flex;\n            align-items: center;\n            font-size: 14px;\n          }\n        }\n        .right {\n          display: flex;\n          align-items: center;\n          .volume {\n            width: 120px;\n          }\n          .full {\n            margin: 0 0 0 ${8 / 40}rem;\n            display: flex;\n            align-items: center;\n            cursor: pointer;\n            svg {\n              font-size: ${26 / 40}rem;\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport const RightContentWrapper = styled.div`\n  padding: 0 0 0 ${26 / 40}rem;\n  width: 33%;\n`;\n","import styled from 'styled-components';\nexport const VideoInfoWrapper = styled.div`\n  padding: ${30 / 40}rem 0 ${40 / 40}rem;\n  .video-title {\n    font-size: ${24 / 40}rem;\n    font-weight: bold;\n    margin: 0 0 ${4 / 40}rem 0;\n  }\n  .tag-list {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    margin: 0 0 ${10 / 40}rem 0;\n    .name {\n      color: #295dcd;\n      cursor: pointer;\n      font-size: ${20 / 40}rem;\n      margin: 0 ${2 / 40}rem;\n    }\n  }\n  .info {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    .left-content {\n      display: flex;\n      align-items: center;\n      .user-msg-container {\n        display: flex;\n        align-items: center;\n        .img-container {\n          height: ${60 / 40}rem;\n          width: ${60 / 40}rem;\n          border-radius: 50%;\n          overflow: hidden;\n          background-color: black;\n          img {\n            width: 100%;\n          }\n        }\n        .right-msg {\n          margin: 0 0 0 ${18 / 40}rem;\n          .user-name {\n            margin: 0 0 ${5 / 40}rem 0;\n          }\n          .sub-counter {\n            margin: 0;\n            font-size: ${16 / 40}rem;\n            color: #606060;\n          }\n        }\n      }\n      .sub-btn {\n        background-color: #0f0f0f;\n        color: #fff;\n        cursor: pointer;\n        font-size: ${20 / 40}rem;\n        padding: ${10 / 40}rem ${20 / 40}rem;\n        border-radius: ${24 / 40}rem;\n        margin: 0 0 0 ${40 / 40}rem;\n      }\n    }\n    .right-content {\n      display: flex;\n      align-items: center;\n      .thumb {\n        display: flex;\n        align-items: center;\n        .tread {\n          border-left: 1px solid #d9d9d9;\n          padding: 0 0 0 ${18 / 40}rem;\n          margin: 0 0 0 ${18 / 40}rem;\n        }\n      }\n      .thumb,\n      .collection {\n        cursor: pointer;\n        background-color: #f2f2f2;\n        margin: 0 0 0 ${20 / 40}rem;\n        padding: ${9 / 40}rem ${18 / 40}rem ${5 / 40}rem;\n        border-radius: ${20 / 40}rem;\n        .thumb-icon,\n        .collection-icon,\n        .tread-icon {\n          svg {\n            font-size: ${24 / 40}rem;\n          }\n        }\n        .label {\n          margin: 0 0 0 ${15 / 40}rem;\n        }\n        .thumb-icon-active {\n          svg {\n            color: #ff0000;\n          }\n        }\n      }\n    }\n  }\n  .desc {\n    background-color: #f2f2f2;\n    padding: ${15 / 40}rem;\n    margin: ${15 / 40}rem 0;\n    border-radius: ${10 / 40}rem;\n  }\n`;\n","import React, { memo, type FC, ReactElement, MouseEvent, useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { type Map } from 'immutable';\nimport Add from '../../../../../content/add/index';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  LikeOutlined,\n  FileAddOutlined,\n  DislikeOutlined,\n  DislikeFilled,\n  LikeFilled,\n  EyeOutlined\n} from '@ant-design/icons';\nimport { VideoInfoWrapper } from './style';\nimport { type IVideo } from '../../../../../../types/video/IVideo';\nimport { type ILogin } from '../../../../../../types/login/ILogin';\nimport { cancelSub, getUserSubCount, sub } from '../../../../../../network/subscriber';\nimport {\n  cancelThumb,\n  cancelTread,\n  getVideoThumb,\n  thumb,\n  tread\n} from '../../../../../../network/thumb';\nimport { useSub } from '../../../../../../hook/useSub';\nimport { changeUserDetailAction } from '../../../../../../views/login/store/actionCreators';\nimport { type Dispatch } from 'redux';\nimport { useThumb, useTread } from '../../../../../../hook/useThumb';\nimport { type IUserMsg } from '../../../../../../types/user/IUserMsg';\nimport { type IResponseType } from '../../../../../../types/responseType';\nimport { type IAddType, ADD_PLAYLIST } from '../../../../../../constant/addList';\ninterface IAdd {\n  liClick: (item: IAddType) => void;\n}\ninterface IProps {\n  videoInfo?: IVideo;\n  id: string;\n  playCount: string | number;\n}\nconst VideoInfo: FC<IProps> = (props) => {\n  const { videoInfo, id: videoId, playCount } = props;\n  const loginState = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  const isSub = useSub(videoInfo?.user.userId);\n  const isThumb = useThumb('video', videoInfo?.id);\n  const isTread = useTread('video', videoInfo?.id);\n  const dispatch = useDispatch<Dispatch<any>>();\n  const addRef = useRef<IAdd | null>(null);\n  const [subCount, setSubCount] = useState<number>(0);\n  useEffect(() => {\n    if (videoInfo) {\n      getUserSubCount<IResponseType<number>>(videoInfo.user.userId).then((res) => {\n        if (res.status === 200) {\n          setSubCount(res.data);\n        }\n      });\n    }\n  }, [videoId]);\n\n  const [videoThumb, setVideoThumb] = useState<number>(0);\n  const getVideoThumbReq = (videoInfo: IVideo) => {\n    getVideoThumb<IResponseType<{ count: number }>>(videoInfo.id).then((res) => {\n      if (res.status === 200) {\n        setVideoThumb(res.data.count);\n      }\n    });\n  };\n  useEffect(() => {\n    if (videoInfo) {\n      getVideoThumbReq(videoInfo);\n    }\n  }, [videoInfo, videoId]);\n  const subHandle = async () => {\n    if (videoInfo?.user && !isSub) {\n      const result = await sub(videoInfo?.user.userId);\n      if (result.status === 200) {\n        console.log(result.data);\n      }\n    } else if (videoInfo?.user && isSub) {\n      const result = await cancelSub(videoInfo.user.userId);\n      if (result.status === 200) {\n        console.log(result.data);\n      }\n    }\n    if (videoInfo?.user && loginState && loginState.userMsg) {\n      dispatch(changeUserDetailAction(loginState.userMsg.userId));\n    }\n    if (videoInfo) {\n      getUserSubCount<IResponseType<number>>(videoInfo.user.userId).then((res) => {\n        if (res.status === 200) {\n          setSubCount(res.data);\n        }\n      });\n    }\n  };\n  const thumbHandle = async () => {\n    if (videoInfo) {\n      console.log(isThumb);\n      if (isThumb) {\n        const result = await cancelThumb(videoInfo.id, 'vId');\n        if (result.status === 200) {\n          console.log(result.data);\n        }\n      } else {\n        const result = await thumb(videoInfo.id, 'vId');\n        if (result.status === 200) {\n          console.log(result.data);\n        }\n      }\n      if (videoInfo && videoInfo.user && loginState && loginState.userMsg) {\n        dispatch(changeUserDetailAction(loginState.userMsg.userId));\n      }\n      if (videoInfo) {\n        getVideoThumbReq(videoInfo);\n      }\n    }\n  };\n  const treadHandle = async () => {\n    if (videoInfo) {\n      if (!isTread) {\n        const result = await tread(videoInfo.id, 'vId');\n        if (result.status === 200) {\n          console.log(result.data);\n        }\n      } else {\n        const result = await cancelTread(videoInfo.id, 'vId');\n        if (result.status === 200) {\n          console.log(result.data);\n        }\n      }\n      if (videoInfo && videoInfo.user && loginState && loginState.userMsg) {\n        dispatch(changeUserDetailAction(loginState.userMsg.userId));\n      }\n      if (videoInfo) {\n        getVideoThumbReq(videoInfo);\n      }\n    }\n  };\n  const navigate = useNavigate();\n  const userRouter = (user: IUserMsg) => {\n    if (user) {\n      navigate('/home/userDetail', {\n        state: {\n          userId: user.userId\n        },\n        replace: false\n      });\n    }\n  };\n  const openChangeHandle = () => {\n    if (addRef && addRef.current) {\n      addRef.current.liClick({\n        icon: '',\n        name: ADD_PLAYLIST\n      });\n    }\n  };\n  return (\n    <VideoInfoWrapper>\n      <p className=\"video-title text-nowrap-mul-line\">{videoInfo?.name}</p>\n      <ul className=\"tag-list\">\n        {videoInfo?.tag &&\n          videoInfo.tag.length !== 0 &&\n          videoInfo.tag.map((item, index) => {\n            return (\n              <li key={item.id}>\n                {index == 0 && <span className=\"icon\">#</span>}\n                <span className=\"name\">{item.name}</span>\n                <span className=\"icon\">#</span>\n              </li>\n            );\n          })}\n      </ul>\n      <div className=\"info\">\n        <div className=\"left-content\">\n          <div className=\"user-msg-container\">\n            {videoInfo && (\n              <div\n                className=\"img-container\"\n                onClick={(e) => {\n                  userRouter(videoInfo?.user);\n                }}\n              >\n                <img src={videoInfo?.user.avatarUrl} />\n              </div>\n            )}\n            <div className=\"right-msg\">\n              <p className=\"user-name\">{videoInfo?.user.userName}</p>\n              <p className=\"sub-counter\">{subCount}位订阅者</p>\n            </div>\n          </div>\n          {videoInfo && loginState.userMsg.userId !== videoInfo.user.userId && (\n            <div\n              className=\"sub-btn\"\n              onClick={async (e) => {\n                await subHandle();\n              }}\n            >\n              {isSub ? '已订阅' : '订阅'}\n            </div>\n          )}\n        </div>\n        <div className=\"right-content\">\n          <div\n            className=\"collection\"\n            onClick={() => {\n              openChangeHandle();\n            }}\n          >\n            <EyeOutlined />\n            <span className=\"label\">{playCount}</span>\n          </div>\n          <div className=\"thumb\">\n            <div className=\"thumb-inner\">\n              {videoInfo && !isThumb && (\n                <LikeOutlined\n                  className={`thumb-icon`}\n                  onClick={async (e) => {\n                    await thumbHandle();\n                  }}\n                />\n              )}\n              {videoInfo && isThumb && (\n                <LikeFilled\n                  className={`thumb-icon`}\n                  onClick={async (e) => {\n                    await thumbHandle();\n                  }}\n                />\n              )}\n              <span className=\"label\">{videoThumb}</span>\n            </div>\n            <div className=\"tread\">\n              {videoInfo && !isTread && (\n                <DislikeOutlined\n                  className=\"tread-icon\"\n                  onClick={async (e) => {\n                    await treadHandle();\n                  }}\n                />\n              )}\n              {videoInfo && isTread && (\n                <DislikeFilled\n                  className=\"tread-icon\"\n                  onClick={async (e) => {\n                    await treadHandle();\n                  }}\n                />\n              )}\n            </div>\n          </div>\n          <div\n            className=\"collection\"\n            onClick={() => {\n              openChangeHandle();\n            }}\n          >\n            <FileAddOutlined className={'collection-icon'} />\n            <span className=\"label\">保存</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"desc\">{videoInfo?.description}</div>\n      {videoInfo && <Add id={videoInfo.id} ref={addRef} />}\n    </VideoInfoWrapper>\n  );\n};\nexport default memo(VideoInfo);\n","import styled from 'styled-components';\nexport const DmWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: ${20 / 40}rem 0 0 0;\n  .dm-outer {\n    display: flex;\n    align-items: center;\n    border-radius: ${8 / 40}rem;\n    overflow: hidden;\n    margin: 0 0 0 ${15 / 40}rem;\n    & > input {\n      display: inline-block;\n      width: ${500 / 40}rem;\n      background-color: #f1f2f3;\n      padding: ${8 / 40}rem ${15 / 40}rem;\n    }\n    .pub {\n      cursor: pointer;\n      background-color: #ff0000;\n      color: #fff;\n      height: 100%;\n      padding: ${8 / 40}rem ${15 / 40}rem;\n    }\n  }\n`;\n","import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\nexport async function pubDm<T = IResponseType<any>>(vId: string, text: string, time: string) {\n  return await gbRequest.post<T>({\n    url: '/dm',\n    data: {\n      vId,\n      text,\n      time\n    }\n  });\n}\n// 获取视频弹幕\nexport async function getVideoDm<T = IResponseType<any>>(vId: string) {\n  return await gbRequest.post<T>({\n    url: '/dm/video/' + vId\n  });\n}\n","import React, { memo, type FC, useState, type FormEvent } from 'react';\nimport { DmWrapper } from './style';\nimport { pubDm } from '../../../../../../network/dm';\nimport moment from 'moment';\ninterface IProps {\n  id: string;\n  time: string;\n  pub: () => void;\n}\nconst Dm: FC<IProps> = (props) => {\n  const { id, time, pub } = props;\n  const [content, setContent] = useState<string>('');\n  const dmInp = (e: FormEvent<HTMLInputElement>) => {\n    setContent(e.currentTarget.value);\n  };\n  const pubHandle = () => {\n    pubDm(id, content, time).then((data) => {\n      if (data.status === 200) {\n        setContent('');\n        pub();\n      }\n    });\n  };\n  return (\n    <DmWrapper>\n      <span>已装填2条弹幕</span>\n      <div className=\"dm-outer\">\n        <input\n          type={'text'}\n          value={content}\n          onInput={(e) => {\n            dmInp(e);\n          }}\n          placeholder={'发个弹幕,见证当下'}\n        />\n        <div\n          className=\"pub\"\n          onClick={(e) => {\n            pubHandle();\n          }}\n        >\n          发送\n        </div>\n      </div>\n    </DmWrapper>\n  );\n};\nexport default memo(Dm);\n","import styled from 'styled-components';\nexport const SimilarWrapper = styled.div`\n  padding: ${16 / 40}rem 0;\n  .bar {\n    display: flex;\n    align-items: center;\n    & > li {\n      padding: ${5 / 40}rem ${15 / 40}rem;\n      background-color: #f2f2f2;\n      margin: 0 ${20 / 40}rem 0 0;\n      border-radius: ${8 / 40}rem;\n      cursor: pointer;\n      &.active {\n        background-color: #0f0f0f;\n        color: #ffffff;\n      }\n    }\n  }\n  .similar-video-list {\n    margin: ${20 / 40}rem 0 0 0;\n    & > li {\n      display: flex;\n      align-items: flex-start;\n      width: 100%;\n      margin: 0 0 ${20 / 40}rem 0;\n      .vio-img-container {\n        width: ${250 / 40}rem;\n        margin: 0 ${20 / 40}rem 0 0;\n        border-radius: 8px;\n        overflow: hidden;\n        position: relative;\n        background-color: #e5e5e5;\n        display: flex;\n        align-items: center;\n        img {\n          width: 100%;\n          cursor: pointer;\n        }\n        .dt {\n          position: absolute;\n          left: 100%;\n          top: 100%;\n          transform: translate(-110%, -110%);\n          background-color: rgba(0, 0, 0, 0.65);\n          color: #ffffff;\n          padding: ${3 / 40}rem ${10 / 40}rem;\n          border-radius: ${8 / 40}rem;\n          font-size: ${14 / 40}rem;\n          font-weight: bolder;\n          white-space: nowrap;\n        }\n      }\n      .right-container {\n        width: ${240 / 40}rem;\n        overflow: hidden;\n        .label-n {\n          width: 100%;\n          margin: 0 0 ${5 / 40}rem 0;\n\n          word-break: break-all;\n        }\n        .dt-play-count {\n          display: flex;\n          align-items: center;\n          & > p {\n            color: #606060;\n            font-size: ${15 / 40}rem;\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { memo, type FC, useEffect, useState } from 'react';\nimport { SimilarWrapper } from './style';\nimport { getSimilarVideo, getUserVideo } from '../../../../../../network/video';\nimport { type IResponseType } from '../../../../../../types/responseType';\nimport { type IPage } from '../../../../../../types/IPage';\nimport { type IVideo } from '../../../../../../types/video/IVideo';\nimport moment from 'moment';\nimport { getDurationByTimestamp } from '../../../../../../utils/time';\ninterface IProps {\n  videoId?: string;\n  id?: string;\n  userId?: string;\n  userName?: string;\n  play: (id: string) => void;\n}\nconst Similar: FC<IProps> = (props) => {\n  const { id, userId, userName, play, videoId } = props;\n  const [video, setVideo] = useState<IVideo[]>([]);\n  const [count, setCount] = useState<number>(0);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [bar, setBar] = useState<string[]>(['全部']);\n  useEffect(() => {\n    console.log(userName);\n    if (userName) {\n      setBar(['全部', userName]);\n    }\n  }, [userName]);\n  useEffect(() => {\n    if (id) {\n      getSimilarVideo<IResponseType<IPage<IVideo[]>>>(id, 0, 15).then((data) => {\n        if (data.status === 200) {\n          setVideo(data.data.list);\n          setCount(data.data.count);\n        }\n      });\n    }\n  }, [id]);\n  const liClick = (item: string, index: number) => {\n    if (item !== '全部' && userId) {\n      getUserVideo<IResponseType<IPage<IVideo[]>>>(userId, '', 0, 15).then((data) => {\n        if (data.status === 200) {\n          setVideo(data.data.list);\n          setCount(data.data.count);\n        }\n      });\n    } else if (id) {\n      getSimilarVideo<IResponseType<IPage<IVideo[]>>>(id, 0, 15).then((data) => {\n        if (data.status === 200) {\n          setVideo(data.data.list);\n          setCount(data.data.count);\n        }\n      });\n    }\n    setCurrentIndex(index);\n  };\n  const videoClick = (item: IVideo) => {\n    play(item.id);\n  };\n  return (\n    <SimilarWrapper>\n      <ul className=\"bar\">\n        {bar &&\n          bar.map((item, index) => {\n            return (\n              <li\n                key={item}\n                className={currentIndex === index ? 'active' : ''}\n                onClick={(e) => {\n                  liClick(item, index);\n                }}\n              >\n                {item}\n              </li>\n            );\n          })}\n      </ul>\n\n      <ul className=\"similar-video-list\">\n        {video &&\n          video.length !== 0 &&\n          video.map((item, index) => {\n            return (\n              videoId !== item.id && (\n                <li key={item.id}>\n                  <div\n                    className=\"vio-img-container\"\n                    onClick={(e) => {\n                      videoClick(item);\n                    }}\n                  >\n                    <img src={item.picUrl} alt={item.name} />\n                    <div className=\"dt\">{getDurationByTimestamp(item.dt ? item.dt : '0')}</div>\n                  </div>\n                  <div className=\"right-container\">\n                    <div className=\"label-n text-nowrap-mul-line\" title={item.name}>\n                      {item.name}\n                    </div>\n                    <div className=\"label-n\">{item.user.userName}</div>\n                    <div className=\"dt-play-count\">\n                      <p>{item.playCount}次观看</p>\n                      <p>{moment(item.createTime).fromNow()}</p>\n                    </div>\n                  </div>\n                </li>\n              )\n            );\n          })}\n      </ul>\n    </SimilarWrapper>\n  );\n};\nexport default memo(Similar);\n","import styled from 'styled-components';\nexport const CollectionVideoWrapper = styled.div`\n  margin: ${20 / 40}rem 0 0 0;\n  width: 100%;\n  .col-header {\n    background-color: #f1f2f3;\n    padding: ${15 / 40}rem 0 ${10 / 40}rem ${15 / 40}rem;\n    font-size: ${21 / 40}rem;\n    font-weight: bold;\n    display: flex;\n    align-items: center;\n    .name {\n      max-width: 60%;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow: hidden;\n    }\n    .count {\n      color: #a8acb1;\n      font-weight: normal;\n      margin: 0 0 0 ${10 / 40}rem;\n    }\n  }\n  .video-list {\n    background-color: #f1f2f3;\n    padding: 0 0 ${15 / 40}rem 0;\n    width: 100%;\n    max-height: 410px;\n    overflow-y: auto;\n    margin-bottom: ${12 / 40}rem;\n    .item {\n      display: flex;\n      align-items: center;\n      padding: ${10 / 40}rem;\n      justify-content: space-between;\n      border-bottom: 1px solid #fff;\n      &:hover {\n        background-color: #e0e4eb;\n        cursor: pointer;\n      }\n      .gb-play {\n        color: #ea3323;\n        margin: 0 ${5 / 40}rem 0;\n        margin-left: 0 !important;\n        svg {\n          font-size: ${23 / 40}rem;\n        }\n      }\n      .sort {\n        color: #ea3323;\n        text-align: left;\n        color: #969aa0;\n        white-space: nowrap;\n        padding-right: 5.7px;\n        font-size: ${18.4 / 40}rem;\n      }\n      .img-container {\n        width: ${150 / 40}rem;\n        margin: 0 ${10 / 40}rem 0 0;\n        img {\n          width: 100%;\n          border-radius: 4px;\n        }\n      }\n      .right-container {\n        display: flex;\n        justify-content: space-between;\n        width: 67%;\n        .label {\n          flex: 7;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          color: #18191c;\n        }\n        .dt {\n          flex: 2;\n          text-align: right;\n          color: #969aa0;\n        }\n      }\n    }\n  }\n`;\n","import React, { memo, type FC, useState, useEffect } from 'react';\nimport { PauseOutlined } from '@ant-design/icons';\nimport { CollectionVideoWrapper } from './style';\nimport { type IVideo } from '../../../../../../types/video/IVideo';\nimport { getDurationByTimestamp } from '../../../../../../utils/time';\nimport { type ICollection } from '../../../../../../types/collection/ICollection';\nimport { getCollectionDetail } from '../../../../../../network/collection/index';\nimport { type IResponseType } from '../../../../../../types/responseType';\ninterface IProps {\n  videoList: IVideo[];\n  cId: string;\n  onClick: (item: IVideo, index: number) => void;\n}\nconst CollectionVideo: FC<IProps> = (props) => {\n  const { videoList, cId, onClick } = props;\n\n  const [collection, setCollection] = useState<ICollection | null>(null);\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  useEffect(() => {\n    getCollectionDetail<IResponseType<ICollection>>(cId).then((res) => {\n      if (res.status === 200) {\n        setCollection(res.data);\n      }\n    });\n  }, [cId]);\n  const videoClick = (item: IVideo, index: number) => {\n    onClick(item, index);\n    setCurrentIndex(index);\n  };\n  return (\n    <CollectionVideoWrapper>\n      <div className=\"col-header\">\n        <span className=\"name\">{collection && collection.name} . 合集</span>\n        <span className=\"count\">\n          ({currentIndex + 1}/{videoList.length})\n        </span>\n      </div>\n      <ul className=\"video-list\">\n        {videoList &&\n          videoList.length !== 0 &&\n          videoList.map((item, index) => {\n            return (\n              <li\n                key={item.id}\n                className=\"item\"\n                onClick={() => {\n                  videoClick(item, index);\n                }}\n              >\n                {currentIndex === index && (\n                  <PauseOutlined\n                    className=\"gb-play\"\n                    spin={false}\n                    style={{ color: index === currentIndex ? '' : '#f1f2f3' }}\n                  />\n                )}\n                {currentIndex !== index && (\n                  <span className=\"sort\">{(index + 1).toString().padStart(2, '0')}</span>\n                )}\n                <div className=\"img-container\">\n                  <img src={item.picUrl} />\n                </div>\n                <div className=\"right-container\">\n                  <span className=\"label\">{item.name}</span>\n                  <span className=\"dt\">{getDurationByTimestamp(item.dt)}</span>\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </CollectionVideoWrapper>\n  );\n};\nexport default memo(CollectionVideo);\n","const charStr = 'abacdefghjklmnopqrstuvwxyzABCDEFGHJKLMNOPQRSTUVWXYZ0123456789';\nfunction randomIndex(min: number, max: number, i: number) {\n  let index = Math.floor(Math.random() * (max - min + 1) + min);\n  const numStart = charStr.length - 10;\n  if (i === 0 && index >= numStart) {\n    index = randomIndex(min, max, i);\n  }\n  return index;\n}\nfunction getRandomStr(len: number) {\n  const min = 0;\n  const max = charStr.length - 1;\n  let str = '';\n  len = len || 15;\n  for (let i = 0, index; i < len; i++) {\n    index = randomIndex(min, max, i);\n    str += charStr[index];\n  }\n  return str;\n}\nconst getRandom = (m: number, n: number) => {\n  return Math.floor(Math.random() * (n - m + 1)) + m;\n};\nexport { getRandom, getRandomStr };\n","import { getRandom, getRandomStr } from './getRandom';\n\nfunction generateAnimation(container: HTMLElement, item: HTMLElement, index: number) {\n  let r = getRandom(\n    -container.offsetHeight + index * item.offsetHeight + item.offsetHeight,\n    index * item.offsetHeight\n  );\n  let anName = getRandomStr(10);\n  let keyframes = `\n        @keyframes ${anName}{\n          0%{\n            transform :translateX(0) translateY(${r}px);\n          }  \n          100%{\n            transform :translateX(${\n              window.innerWidth + 30 + item.offsetWidth\n            }px) translateY(${r}px);\n          }\n        }\n        `;\n\n  const style = document.styleSheets[0];\n  style.insertRule(keyframes);\n  item.style.animation = `${anName} 16s normal`;\n  item.style.animationFillMode = `forwards`;\n}\nexport { generateAnimation };\n","import React, {\n  memo,\n  type FC,\n  type ReactElement,\n  useState,\n  useEffect,\n  useRef,\n  type MutableRefObject,\n  type SyntheticEvent,\n  createRef,\n  useCallback\n} from 'react';\nimport {\n  PauseCircleOutlined,\n  PlayCircleOutlined,\n  ExpandOutlined,\n  CompressOutlined\n} from '@ant-design/icons';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport moment from 'moment';\nimport { Layout, Slider } from 'antd';\nimport {\n  VideoDetailWrapper,\n  CenterContent,\n  LeftContentWrapper,\n  RightContentWrapper\n} from './style';\nimport {\n  getVideoDetail,\n  getVideoURL,\n  getCollectionVideo,\n  recordVideo,\n  addPlayCount\n} from '../../../../network/video';\nimport { type IResponseType } from '../../../../types/responseType';\nimport { type IPage } from '../../../../types/IPage';\nimport Hls from 'hls.js';\nimport { type IVideo } from '../../../../types/video/IVideo';\nimport VideoInfo from './childCpn/videoInfo';\nimport Comment from '../../../common/comment';\nimport { useSelector } from 'react-redux';\nimport { type Map } from 'immutable';\nimport { type ILogin } from '../../../../types/login/ILogin';\nimport { addHistory } from '../../../../network/history';\nimport Dm from './childCpn/dm';\nimport { type IDm } from '../../../../types/dm/IDm';\nimport { getVideoDm } from '../../../../network/dm';\nimport { getRandom, getRandomStr } from '../../../../utils/getRandom';\nimport { getDurationByTimestamp } from '../../../../utils/time';\nimport Similar from './childCpn/similar';\nimport HeaderTop from '../../../header';\nimport CollectionVideo from './childCpn/collectionVideo';\nimport { generateAnimation } from '../../../../utils/dom';\nconst { Header, Footer, Sider, Content } = Layout;\nconst VideoDetail: FC = (): ReactElement => {\n  const location = useLocation();\n  const { id, type = 'source', cId } = location.state;\n  console.log(id);\n  const [videoSourceType, setVideoSourceType] = useState<string>(type);\n  const [currentTime, setCurrentTime] = useState('');\n  const [vioURL, setVioURL] = useState<string>('');\n  const [vioId, setVioId] = useState<string>(id);\n  const [videoDetail, setVideoDetail] = useState<IVideo>();\n  const [videoDm, setVideoDm] =\n    useState<Array<IDm & { contentRef: MutableRefObject<HTMLLIElement | null> }>>();\n  const [dmTotal, setDmTotal] = useState<number>(0);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const loginState = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  const contentRef = useRef<HTMLUListElement>(null);\n  const screenRef = useRef<HTMLDivElement>(null);\n\n  const [collectionVideo, setCollectionVideo] = useState<IVideo[]>([]);\n  useEffect(() => {\n    if (type === 'collection') {\n      getCollectionVideo<IResponseType<IPage<IVideo[]>>>(cId, 0, 10000).then((res) => {\n        if (res.status === 200) {\n          if (res.data.list && res.data.list.length !== 0) {\n            setCollectionVideo(res.data.list);\n            setVioId(res.data.list[0].id);\n          }\n        }\n      });\n    }\n  }, [type, cId]);\n\n  useEffect(() => {\n    if (screenRef.current) {\n      screenRef.current.addEventListener('contextmenu', (e) => {\n        e.preventDefault();\n        return false;\n      });\n    }\n  }, [screenRef.current]);\n  useEffect(() => {\n    if (vioId) {\n      recordVideo(vioId);\n    }\n  }, [vioId]);\n\n  useEffect(() => {\n    if (vioId) {\n      getVideoDm<IResponseType<IPage<IDm[]>>>(vioId).then((res) => {\n        if (res.data.list.length !== 0) {\n          setDmTotal(res.data.count);\n          const list: Array<\n            IDm & {\n              contentRef: MutableRefObject<HTMLLIElement | null>;\n            }\n          > = res.data.list.map((item, index) => {\n            return {\n              ...item,\n              contentRef: createRef<HTMLLIElement>()\n            };\n          });\n          setVideoDm(list);\n        } else {\n          setVideoDm([]);\n        }\n        getVideoURL<IResponseType<{ vioUrl: string }>>(vioId).then((data) => {\n          if (data.status === 200) {\n            let url = data.data.vioUrl;\n            if (process.env.NODE_ENV === 'development') {\n              url = url.replace(\n                `${process.env.SERVER_PORT}`,\n                `${process.env.WEBPACK_SERVER_PORT}/gb`\n              );\n            }\n            setVioURL(url);\n          }\n        });\n      });\n\n      getVideoDetail<IResponseType<IVideo>>(vioId).then((data) => {\n        if (data.status === 200) {\n          setVideoDetail(data.data);\n          setPlayCount(data.data.playCount);\n        }\n      });\n    }\n  }, [vioId]);\n  useEffect(() => {\n    if (videoRef.current !== null) {\n      if (Hls.isSupported()) {\n        const hls = new Hls();\n        hls.loadSource(vioURL);\n        // hls.loadSource('http://localhost:8888/video/0718294d1c07ee39c7ebb9cb93b0f9580.ts');\n        hls.attachMedia(videoRef.current);\n        addHistory(vioId);\n      } else if (videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\n        videoRef.current.src = vioURL;\n      }\n    }\n  }, [videoRef.current, vioURL]);\n  useEffect(() => {\n    document.title = videoDetail?.name ?? 'codergbhub';\n  }, [videoDetail]);\n  const pubSuccess = () => {\n    getVideoDm<IResponseType<IPage<IDm[]>>>(vioId).then((res) => {\n      if (res.data.list.length !== 0) {\n        const list: Array<\n          IDm & {\n            contentRef: MutableRefObject<HTMLLIElement | null>;\n          }\n        > = res.data.list.map((item, index) => {\n          return {\n            ...item,\n            contentRef: createRef<HTMLLIElement>()\n          };\n        });\n        setVideoDm(list);\n      } else {\n        setVideoDm([]);\n      }\n    });\n  };\n\n  const [timestamp, setTimeStamp] = useState<number>(0);\n  const isController = useRef<boolean>(false);\n\n  const dmGenerateHandler = () => {};\n  const videoPlayHandle = (e: SyntheticEvent<HTMLVideoElement>) => {\n    if (videoDetail && !isController.current) {\n      const precent = ((e.currentTarget.currentTime * 1000) / Number(videoDetail.dt)) * 100;\n      setTimeStamp(precent);\n    }\n    if (videoDm) {\n      setCurrentTime(moment(e.currentTarget.currentTime * 1000).format('mm:ss'));\n      for (let index = 0; index < videoDm.length; index++) {\n        if (videoDm && screenRef.current) {\n          const item = videoDm[index];\n          if (\n            moment(e.currentTarget.currentTime * 1000).format('mm:ss') === item.time &&\n            item.contentRef.current\n          ) {\n            generateAnimation(screenRef.current, item.contentRef.current, index);\n          }\n        }\n      }\n    }\n  };\n\n  const pauseHandle = (item: IDm & { contentRef: MutableRefObject<HTMLLIElement | null> }) => {\n    if (item.contentRef.current) item.contentRef.current.style.animationPlayState = 'paused';\n  };\n  const playHandle = (item: IDm & { contentRef: MutableRefObject<HTMLLIElement | null> }) => {\n    if (item.contentRef.current) item.contentRef.current.style.animationPlayState = 'running';\n  };\n  const playVideo = (id: string) => {\n    setVioId(id);\n    setIsPlay(true);\n  };\n  const changeVideoType = (id: string) => {\n    setVideoSourceType('source');\n    playVideo(id);\n    location.state.id = id;\n    setVioId(id);\n  };\n\n  const [playCount, setPlayCount] = useState<number | string>(0);\n  const canPlayHandler = () => {\n    if (videoRef.current) {\n      videoRef.current.volume = 0.6;\n      addPlayCount<IResponseType<{ playCount: number }>>(vioId).then((res) => {\n        setPlayCount(res.data.playCount);\n      });\n    }\n  };\n\n  const dmInner = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (dmInner.current) {\n      dmInner.current.addEventListener('fullscreenchange', (e) => {\n        if (document.fullscreenElement) {\n          if (screenRef.current) {\n            screenRef.current.style.width = '100vw';\n            screenRef.current.style.height = '100vh';\n            setIsFull(true);\n          }\n          // 进入全屏\n        } else {\n          // 退出全屏幕\n          if (screenRef.current) {\n            screenRef.current.style.width = `${1190 / 40}rem`;\n            screenRef.current.style.height = `${640 / 40}rem`;\n            setIsFull(false);\n          }\n        }\n      });\n    }\n  }, [dmInner, dmInner.current]);\n\n  const [isFull, setIsFull] = useState<boolean>(false);\n  useEffect(() => {}, [isFull]);\n  const fullHandler = () => {\n    if (dmInner.current) {\n      if (isFull) {\n        document.exitFullscreen();\n      } else {\n        dmInner.current?.requestFullscreen();\n      }\n    }\n  };\n\n  const [isPlay, setIsPlay] = useState<boolean>(true);\n  const playHandler = () => {\n    setIsPlay(!isPlay);\n    if (videoRef.current) {\n      if (isPlay) {\n        videoRef.current.pause();\n      } else {\n        videoRef.current.play();\n      }\n    }\n  };\n  const onAfterChange = (e: number) => {\n    if (videoDetail && videoRef.current) {\n      const precent = e / 100;\n      const current = (Number(videoDetail.dt) * precent) / 1000;\n      console.log(current);\n      videoRef.current.currentTime = current;\n    }\n    isController.current = false;\n  };\n  const silderChange = (e: number) => {\n    setTimeStamp(e);\n    if (!isController.current) isController.current = true;\n  };\n  const endHandler = () => {\n    setIsPlay(false);\n  };\n\n  useEffect(() => {\n    document.onkeydown = (e) => {\n      console.log(e);\n      if (\n        e.code !== undefined &&\n        (e.code.toLocaleLowerCase() === 'space' ||\n          e.code.toLocaleLowerCase() === 'keyf' ||\n          e.code.toLocaleUpperCase() === 'escape')\n      ) {\n        e.preventDefault();\n      }\n    };\n    document.onkeyup = (e) => {\n      if (e.code && (e.code === 'space' || e.code === 'Space')) {\n        e.preventDefault();\n        playHandler();\n      } else if (e.code && e.code.toLocaleLowerCase() === 'keyf') {\n        dmInner.current?.requestFullscreen();\n        setIsFull(true);\n      } else if (e.code && e.code.toLocaleLowerCase() === 'escape') {\n        document.exitFullscreen();\n        setIsFull(false);\n      }\n    };\n  }, [videoRef.current, isPlay]);\n\n  const volumeChangeHandler = (e: number) => {\n    console.log(e);\n    if (videoRef.current) {\n      videoRef.current.volume = e / 100;\n    }\n  };\n  return (\n    <VideoDetailWrapper>\n      <Layout>\n        <Header>\n          <HeaderTop />\n        </Header>\n        <Content>\n          <CenterContent>\n            <LeftContentWrapper videoRef={videoRef}>\n              <div className=\"video-dm-container\" ref={dmInner}>\n                <div className=\"inner\">\n                  <div className=\"start\">\n                    <ul ref={contentRef}>\n                      {videoDm?.map((item, index) => {\n                        return (\n                          <li\n                            key={item.id}\n                            className=\"text\"\n                            ref={item.contentRef}\n                            onMouseEnter={(e) => {\n                              pauseHandle(item);\n                            }}\n                            onMouseLeave={(e) => {\n                              playHandle(item);\n                            }}\n                          >\n                            {item.text}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </div>\n                  <div className=\"video-container\" ref={screenRef}>\n                    {vioURL && videoDetail && (\n                      <video\n                        ref={videoRef}\n                        poster={videoDetail.picUrl}\n                        controls={false}\n                        muted={false}\n                        onCanPlay={canPlayHandler}\n                        onTimeUpdate={(e) => {\n                          videoPlayHandle(e);\n                        }}\n                        autoPlay={true}\n                        onEnded={() => {\n                          endHandler();\n                        }}\n                        onClick={() => {\n                          playHandler();\n                        }}\n                      />\n                    )}\n                    {videoDetail && (\n                      <div className=\"controller-container\">\n                        <Slider\n                          defaultValue={0}\n                          value={timestamp}\n                          step={0.1}\n                          tooltip={{ open: false }}\n                          onChange={(e) => {\n                            silderChange(e);\n                          }}\n                          onAfterChange={(e) => {\n                            onAfterChange(e);\n                          }}\n                        />\n                        <div className=\"container\">\n                          <div className=\"left\">\n                            <div\n                              className=\"play-pause\"\n                              onClick={() => {\n                                playHandler();\n                              }}\n                            >\n                              {!isPlay && <PlayCircleOutlined style={{ color: '#ffffff' }} />}\n                              {isPlay && <PauseCircleOutlined style={{ color: '#ffffff' }} />}\n                            </div>\n                            <div className=\"dt\">\n                              {currentTime} / {getDurationByTimestamp(videoDetail.dt)}\n                            </div>\n                          </div>\n                          <div className=\"right\">\n                            <div className=\"volume\">\n                              <Slider\n                                defaultValue={60}\n                                onChange={(e) => {\n                                  volumeChangeHandler(e);\n                                }}\n                              />\n                            </div>\n                            <div className=\"full\" onClick={fullHandler}>\n                              {!isFull && <ExpandOutlined />}\n                              {isFull && <CompressOutlined />}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"end\"> </div>\n                </div>\n              </div>\n              <Dm\n                id={vioId}\n                time={currentTime}\n                pub={() => {\n                  pubSuccess();\n                }}\n              />\n              <div className=\"video-info\">\n                {videoDetail?.user && (\n                  <VideoInfo videoInfo={videoDetail} id={vioId} playCount={playCount} />\n                )}\n              </div>\n              <div className=\"video-comment\">\n                {loginState && loginState.userMsg && videoDetail && (\n                  <Comment user={loginState.userMsg} id={videoDetail.id} alias={'vId'} />\n                )}\n              </div>\n            </LeftContentWrapper>\n            <RightContentWrapper>\n              {videoSourceType === 'collection' && (\n                <CollectionVideo\n                  videoList={collectionVideo}\n                  cId={cId}\n                  onClick={(item, index) => {\n                    playVideo(item.id);\n                  }}\n                />\n              )}\n              {videoDetail?.user && (\n                <Similar\n                  id={videoDetail?.category.id}\n                  key={vioId}\n                  videoId={videoDetail?.id}\n                  userId={videoDetail?.user.userId}\n                  userName={videoDetail?.user.userName}\n                  play={(id: string) => {\n                    changeVideoType(id);\n                  }}\n                />\n              )}\n            </RightContentWrapper>\n          </CenterContent>\n        </Content>\n      </Layout>\n    </VideoDetailWrapper>\n  );\n};\nexport default memo(VideoDetail);\n","interface IAddType {\n  icon: string;\n  name: string;\n}\nconst ADD_QUEUE = '添加到队列';\nconst ADD_WATCH_LATER = `保存到\"稍后观看`;\nconst ADD_PLAYLIST = '保存到播放列表';\nconst addList = [\n  {\n    icon: '',\n    name: ADD_QUEUE\n  },\n  {\n    icon: '',\n    name: ADD_WATCH_LATER\n  },\n  {\n    icon: '',\n    name: ADD_PLAYLIST\n  }\n];\nexport { addList, ADD_QUEUE, ADD_WATCH_LATER, ADD_PLAYLIST };\nexport type { IAddType };\n","import { useSelector } from 'react-redux';\nimport { type Map } from 'immutable';\nimport { type ILogin } from '../../types/login/ILogin';\n\nexport const useSub = (upId?: string): boolean => {\n  let isExists = -1;\n  const loginState = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  if (loginState) {\n    const { userDetail } = loginState;\n    if (userDetail && userDetail.subscriber.length !== 0 && upId) {\n      isExists = userDetail.subscriber.findIndex((item, index) => {\n        return upId === item.userId;\n      });\n    }\n  }\n  return isExists !== -1;\n};\n","import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\nexport async function getUserCol<T = IResponseType<any>>(\n  id: string,\n  offset: number,\n  limit: number\n) {\n  return await gbRequest.post<T>({\n    url: '/collection/user/' + id,\n    params: {\n      offset,\n      limit\n    }\n  });\n}\nexport async function getCollectionDetail<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post<T>({\n    url: '/collection/detail/' + id\n  });\n}\n","import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\n// 添加历史记录\nexport async function addHistory<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post({\n    url: '/history/' + id,\n    data: {}\n  });\n}\nexport async function getUserHistory<T = IResponseType<any>>(\n  userId: string,\n  offset: number,\n  limit: number,\n  keyword: string\n) {\n  return await gbRequest.post<T>({\n    url: '/history/user/' + userId,\n    params: {\n      offset,\n      limit,\n      keyword\n    }\n  });\n}\n// 清除所有历史记录\nexport async function deleteAllHistory<T = IResponseType<any>>() {\n  return await gbRequest.post<T>({\n    url: '/history/delete/all'\n  });\n}\n","import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\n\nexport async function getUserLater<T = IResponseType<any>>(\n  userId: string,\n  offset: number,\n  limit: number\n): Promise<T> {\n  return await gbRequest.get<T>({\n    url: '/later/user/' + userId,\n    params: {\n      offset,\n      limit\n    }\n  });\n}\n// 添加至稍后观看\nexport async function addLater<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post<T>({\n    url: '/later/' + id\n  });\n}\n","import gbRequest from '../index';\nimport { IResponseType } from '../../types/responseType';\nexport function sub<T = IResponseType<any>>(upId: string) {\n  return gbRequest.post<T>({\n    url: '/sub/',\n    data: {\n      upId\n    }\n  });\n}\nexport function cancelSub<T = IResponseType<any>>(upId: string) {\n  return gbRequest.post<T>({\n    url: '/sub/cancel',\n    data: {\n      upId\n    }\n  });\n}\n//获取用户订阅\nexport function getUserSub<T = IResponseType<any>>(userId: string, offset: number, limit: number) {\n  return gbRequest.post<T>({\n    url: '/sub/user/' + userId,\n    data: {\n      offset,\n      limit\n    }\n  });\n}\n//获取订阅数\nexport function getUserSubCount<T = IResponseType<any>>(id: string) {\n  return gbRequest.get<T>({\n    url: '/sub/count/' + id\n  });\n}\n","function getDurationByTimestamp(time: string | number) {\n  if (typeof time === 'string') time = parseInt(time);\n  const timestamp: number = Math.floor(time / 1000) || 0;\n  if (timestamp === 0) {\n    return '00:00';\n  } else {\n    const hour: number = Math.floor(timestamp / 60 / 60);\n    let yTimestamp = timestamp % 3600;\n    let minute = 0;\n    let second = 0;\n    if (yTimestamp !== 0) {\n      minute = Math.floor(yTimestamp / 60);\n      yTimestamp = yTimestamp % 60;\n      if (yTimestamp !== 0) {\n        second = yTimestamp;\n      }\n    }\n    const newHour = hour === 0 ? '' : `${hour.toString().padStart(2, '0')}:`;\n    return `${newHour}${minute.toString().padStart(2, '0')}:${second.toString().padStart(2, '0')}`;\n  }\n}\nexport { getDurationByTimestamp };\n"],"names":["AddWrapper","styled","div","PlaylistWrapper","Playlist","props","select","playlist","setPlaylist","useState","count","setCount","login","useSelector","state","getIn","useEffect","getUserPlaylist","userMsg","userId","then","data","status","list","React","className","length","map","item","index","key","id","Checkbox","onChange","e","selectChangeHandle","target","checked","name","isPublic","EyeOutlined","EyeInvisibleOutlined","memo","Option","Select","Add","forwardRef","propsRef","isShowAddPlay","setIsShowPlay","isCreate","setIsCreate","keyIndex","setKeyIndex","setName","setIsPublic","liClick","ADD_PLAYLIST","ADD_WATCH_LATER","addLater","placement","console","log","notification","info","message","description","catch","err","useImperativeHandle","onClick","stopPropagation","Modal","title","width","destroyOnClose","maskClosable","open","onCancel","footer","Input","placeholder","showCount","maxLength","onInput","currentTarget","value","nameInpHandle","createPlaylist","PlusOutlined","createPlaylistHandler","checkHandle","addVideoPlaylist","VideoDetailWrapper","CenterContent","centerWidth","LeftContentWrapper","RightContentWrapper","VideoInfoWrapper","VideoInfo","videoInfo","videoId","playCount","loginState","isSub","useSub","user","isThumb","useThumb","isTread","useTread","dispatch","useDispatch","addRef","useRef","subCount","setSubCount","getUserSubCount","res","videoThumb","setVideoThumb","getVideoThumbReq","getVideoThumb","thumbHandle","async","result","cancelThumb","thumb","changeUserDetailAction","treadHandle","cancelTread","tread","navigate","useNavigate","openChangeHandle","current","icon","tag","replace","src","avatarUrl","userName","sub","cancelSub","subHandle","LikeOutlined","LikeFilled","DislikeOutlined","DislikeFilled","FileAddOutlined","ref","DmWrapper","getVideoDm","vId","gbRequest","post","url","Dm","time","pub","content","setContent","pubHandle","text","pubDm","type","dmInp","SimilarWrapper","Similar","play","video","setVideo","currentIndex","setCurrentIndex","bar","setBar","getSimilarVideo","getUserVideo","videoClick","picUrl","alt","getDurationByTimestamp","dt","moment","createTime","fromNow","CollectionVideoWrapper","CollectionVideo","videoList","cId","collection","setCollection","getCollectionDetail","PauseOutlined","spin","style","color","toString","padStart","charStr","randomIndex","min","max","i","Math","floor","random","numStart","generateAnimation","container","r","m","offsetHeight","n","getRandom","anName","len","str","getRandomStr","keyframes","window","innerWidth","offsetWidth","document","styleSheets","insertRule","animation","animationFillMode","Header","Footer","Sider","Content","Layout","VideoDetail","location","useLocation","videoSourceType","setVideoSourceType","currentTime","setCurrentTime","vioURL","setVioURL","vioId","setVioId","videoDetail","setVideoDetail","videoDm","setVideoDm","dmTotal","setDmTotal","videoRef","contentRef","screenRef","collectionVideo","setCollectionVideo","getCollectionVideo","addEventListener","preventDefault","recordVideo","createRef","getVideoURL","vioUrl","process","getVideoDetail","setPlayCount","Hls","hls","loadSource","attachMedia","addHistory","canPlayType","timestamp","setTimeStamp","isController","playVideo","setIsPlay","dmInner","fullscreenElement","height","setIsFull","isFull","isPlay","playHandler","pause","onkeydown","undefined","code","toLocaleLowerCase","toLocaleUpperCase","onkeyup","requestFullscreen","exitFullscreen","HeaderTop","onMouseEnter","animationPlayState","pauseHandle","onMouseLeave","playHandle","poster","controls","muted","onCanPlay","canPlayHandler","volume","addPlayCount","onTimeUpdate","precent","Number","format","videoPlayHandle","autoPlay","onEnded","Slider","defaultValue","step","tooltip","silderChange","onAfterChange","PlayCircleOutlined","PauseCircleOutlined","volumeChangeHandler","fullHandler","ExpandOutlined","CompressOutlined","Comment","alias","category","changeVideoType","addList","upId","isExists","userDetail","subscriber","findIndex","getUserCol","offset","limit","params","getUserHistory","keyword","deleteAllHistory","getUserLater","get","getUserSub","parseInt","hour","yTimestamp","minute","second"],"sourceRoot":""}