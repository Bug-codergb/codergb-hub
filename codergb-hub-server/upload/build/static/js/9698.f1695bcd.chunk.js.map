{"version":3,"file":"static/js/9698.f1695bcd.chunk.js","mappings":"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","sources":["webpack://codergb-hub-client/./src/network/later/index.tsx","webpack://codergb-hub-client/./src/views/playlist/style.tsx","webpack://codergb-hub-client/./src/views/playlist/index.tsx"],"sourcesContent":["import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\n\nexport async function getUserLater<T = IResponseType<any>>(\n  userId: string,\n  offset: number,\n  limit: number\n): Promise<T> {\n  return await gbRequest.get<T>({\n    url: '/later/user/' + userId,\n    params: {\n      offset,\n      limit\n    }\n  });\n}\n// 添加至稍后观看\nexport async function addLater<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post<T>({\n    url: '/later/' + id\n  });\n}\n","import styled from 'styled-components';\nexport const PlaylistWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\nexport const LeftContainer: any = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  padding: ${30 / 40}rem ${30 / 40}rem;\n  height: 86vh;\n  background-image: url(${(props) => (props as any).bgc});\n  background-repeat: no-repeat;\n  background-size: auto 9999px;\n  background-position: center;\n  border-radius: ${16 / 40}rem;\n  overflow: hidden;\n  .mask {\n    position: absolute;\n    background-color: black;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background-color: rgba(0, 0, 0, 0.08);\n  }\n  .img-container {\n    width: ${450 / 40}rem;\n    border-radius: ${16 / 40}rem;\n    overflow: hidden;\n    img {\n      width: 100%;\n    }\n  }\n  .later-label {\n    font-size: ${30 / 40}rem;\n    color: #fff;\n    font-weight: bolder;\n    margin: ${28 / 40}rem 0 0 0;\n  }\n  .user-name {\n    font-size: ${18 / 40}rem;\n    color: #fff;\n    margin: ${20 / 40}rem 0 ${18 / 40}rem 0;\n  }\n  .vio-info {\n    display: flex;\n    align-items: center;\n    .vio-count {\n      font-size: ${16 / 40}rem;\n      color: #d2cfd0;\n    }\n    .update-time {\n      margin: 0 0 0 ${10 / 40}rem;\n      font-size: ${16 / 40}rem;\n      color: #d2cfd0;\n    }\n  }\n`;\nexport const RightContainer = styled.div`\n  margin: 0 0 0 ${30 / 40}rem;\n  width: 70%;\n  height: 86vh;\n  overflow-y: scroll;\n  .vio-list {\n    & > li {\n      display: flex;\n      align-items: flex-start;\n      cursor: pointer;\n      padding: ${20 / 40}rem 0 ${20 / 40}rem ${18 / 40}rem;\n      border-radius: ${8 / 40}rem;\n      &:hover {\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n      }\n      .cover-container {\n        margin: 0 ${24 / 20}rem 0 0;\n        width: ${200 / 40}rem;\n        img {\n          width: 100%;\n          border-radius: 8px;\n        }\n      }\n      .later-right-info {\n        width: 70%;\n        .desc {\n          display: flex;\n          align-items: center;\n          margin: ${16 / 40}rem 0 0 0;\n          .user-name,\n          .play-count,\n          .create-time {\n            font-size: ${16 / 40}rem;\n            color: #606060;\n          }\n          .play-count {\n            margin: 0 ${8 / 40}rem;\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { memo, type FC, type ReactElement, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { type Map } from 'immutable';\nimport moment from 'moment';\nimport { PlaylistWrapper, LeftContainer, RightContainer } from './style';\nimport { type ILater } from '../../types/later/ILater';\nimport { getUserLater } from '../../network/later';\nimport { type IResponseType } from '../../types/responseType';\nimport { type IPage } from '../../types/IPage';\nimport { useSelector } from 'react-redux';\nimport { type ILogin } from '../../types/login/ILogin';\nimport { type IVideo } from '../../types/video/IVideo';\nconst Playlist: FC = (): ReactElement => {\n  const [userLater, setUserLater] = useState<ILater[]>([]);\n  const [count, setCount] = useState<number>(0);\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  const navigate = useNavigate();\n  const getUserLaterReq = async (userId: string, offset: number, limit: number) => {\n    const result = await getUserLater<IResponseType<IPage<ILater[]>>>(userId, offset, limit);\n    if (result.status === 200) {\n      setUserLater(result.data.list);\n      setCount(result.data.count);\n    }\n  };\n  useEffect(() => {\n    getUserLaterReq(login.userMsg.userId, 0, 10).then((r) => {});\n  }, []);\n\n  const videoRouterHandle = (item: IVideo) => {\n    navigate('/videoDetail', {\n      replace: true,\n      state: {\n        id: item.id\n      }\n    });\n  };\n  return (\n    <PlaylistWrapper>\n      {userLater && userLater.length !== 0 && (\n        <LeftContainer bgc={userLater[0]?.video?.picUrl}>\n          <div className=\"img-container\">\n            {userLater && userLater[0] && <img src={userLater[0].video.picUrl} />}\n          </div>\n          <p className=\"later-label\">稍后观看</p>\n          <p className=\"user-name\">{login.userMsg.userName}</p>\n          <div className=\"vio-info\">\n            <div className=\"vio-count\">{count}个视频</div>\n            <div className=\"update-time\">昨日更新</div>\n          </div>\n          <div className=\"mask\"></div>\n        </LeftContainer>\n      )}\n      <RightContainer>\n        <ul className=\"vio-list\">\n          {userLater &&\n            userLater.length !== 0 &&\n            userLater.map((item) => {\n              return (\n                <li key={item.id}>\n                  <div\n                    className=\"cover-container\"\n                    onClick={(e) => {\n                      videoRouterHandle(item.video);\n                    }}\n                  >\n                    <img src={item.video.picUrl} />\n                  </div>\n                  <div className=\"later-right-info\">\n                    <p\n                      className=\"vio-name text-nowrap-mul-line\"\n                      onClick={(e) => {\n                        videoRouterHandle(item.video);\n                      }}\n                    >\n                      {item.video.name}\n                    </p>\n                    <div className=\"desc\">\n                      <div className=\"user-name\">{item.video.user.userName}.</div>\n                      <div className=\"play-count\">{item.video.playCount}次观看.</div>\n                      <div className=\"create-time\">{moment(item.createTime).fromNow()}加入</div>\n                    </div>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      </RightContainer>\n    </PlaylistWrapper>\n  );\n};\nexport default memo(Playlist);\n"],"names":["async","getUserLater","userId","offset","limit","gbRequest","get","url","params","addLater","id","post","PlaylistWrapper","styled","div","LeftContainer","props","bgc","RightContainer","Playlist","userLater","setUserLater","useState","count","setCount","login","useSelector","state","getIn","navigate","useNavigate","useEffect","result","status","data","list","getUserLaterReq","userMsg","then","r","videoRouterHandle","item","replace","React","length","video","picUrl","className","src","userName","map","key","onClick","e","name","user","playCount","moment","createTime","fromNow","memo"],"sourceRoot":""}