{"version":3,"file":"static/js/902.c6d31da7.chunk.js","mappings":"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","sources":["webpack://codergb-hub-client/./src/components/holder/index.tsx","webpack://codergb-hub-client/./src/utils/holder.tsx","webpack://codergb-hub-client/./src/hook/useLoginMsg/index.tsx","webpack://codergb-hub-client/./src/network/moment/index.ts","webpack://codergb-hub-client/./src/network/video/index.tsx","webpack://codergb-hub-client/./src/views/explore/childCpn/common/childCpn/community/style.tsx","webpack://codergb-hub-client/./src/views/explore/childCpn/common/childCpn/community/childCpn/videoList/style.tsx","webpack://codergb-hub-client/./src/views/explore/childCpn/common/childCpn/community/childCpn/videoList/index.tsx","webpack://codergb-hub-client/./src/views/explore/childCpn/common/childCpn/community/childCpn/momentList/style.tsx","webpack://codergb-hub-client/./src/views/explore/childCpn/common/childCpn/community/childCpn/momentList/index.tsx","webpack://codergb-hub-client/./src/views/explore/childCpn/common/childCpn/community/index.tsx"],"sourcesContent":["import React from 'react';\nimport { holder } from '../../utils/holder';\nconst HolderCpn = (total: number, lineCount: number, width: number) => {\n  return holder(total, lineCount).map((item, index) => {\n    return (\n      <li\n        key={index}\n        style={{\n          width: `${width / 40}rem`,\n          height: 0,\n          border: 'none',\n          padding: 0,\n          margin: 0,\n          outline: 'none'\n        }}\n      >\n        {' '}\n      </li>\n    );\n  });\n};\nexport default HolderCpn;\n","export function holder(count: number, line: number): number[] {\n  let s: number[] = [];\n  for (let i = 0; i < Math.ceil(count / line) * line - count; i++) {\n    s.push(i);\n  }\n  return s;\n}\n","import { type Map } from 'immutable';\nimport { useSelector } from 'react-redux';\nimport { type ILogin } from '../../types/login/ILogin';\n\nexport const useLoginMsg = (): ILogin => {\n  const login = useSelector<Map<string, ILogin>, ILogin>((state) => {\n    return state.getIn(['loginReducer', 'login']) as ILogin;\n  });\n  return login;\n};\n","import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\nexport async function createMoment<T = IResponseType<any>>(\n  title: string,\n  content: string,\n  vid: string,\n  userId: string,\n  cId: string\n) {\n  return await gbRequest.post<T>({\n    url: '/moment',\n    data: {\n      title,\n      content,\n      vid,\n      cId,\n      userId\n    }\n  });\n}\nexport async function getChannelMoment<T = IResponseType<any>>(\n  id: string,\n  offset: number,\n  limit: number\n) {\n  return await gbRequest.post<T>({\n    url: '/moment/channel/' + id,\n    params: {\n      offset,\n      limit\n    }\n  });\n}\nexport async function getMomentDetail<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post<T>({\n    url: '/moment/' + id\n  });\n}\nexport async function deleteMoment<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post<T>({\n    url: '/moment/delete/' + id\n  });\n}\n","import gbRequest from '../index';\nimport { type IResponseType } from '../../types/responseType';\nexport async function uploadVideo<T = IResponseType<any>>(formData: FormData): Promise<T> {\n  return await gbRequest.post<T>({\n    url: '/video/upload',\n    data: formData,\n    headers: {\n      'Content-type': 'multipart/form-data'\n    }\n  });\n}\n// 视频合并\nexport async function mergeVideo<T = IResponseType<any>>(\n  path: string,\n  hash: string,\n  name: string,\n  type: string,\n  total: number\n): Promise<T> {\n  return await gbRequest.post<T>({\n    url: '/video/merge',\n    data: {\n      dest: path,\n      hash,\n      originalname: name,\n      type,\n      total\n    }\n  });\n}\n// 创建video\nexport async function createVideo<T = IResponseType<any>>(\n  videoId: string,\n  title: string,\n  desc: string,\n  imgId: string,\n  playlistId: string,\n  tagIds: string[],\n  cateId: string,\n  dt: number\n) {\n  return await gbRequest.post<T>({\n    url: '/video/create',\n    data: {\n      videoId,\n      title,\n      desc,\n      imgId,\n      playlistId,\n      tagIds,\n      cateId,\n      dt\n    }\n  });\n}\n// 获取所有视频\nexport async function getAllVideo<T = IResponseType<any>>(\n  offset: number,\n  limit: number,\n  keyword: string\n) {\n  return await gbRequest.post<T>({\n    url: '/video/all',\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      keyword\n    }\n  });\n}\n// 获取视频URL\nexport async function getVideoURL<T = IResponseType<any>>(id: string) {\n  return await gbRequest.get<T>({\n    url: `/video/url/${id}`\n  });\n}\nexport async function getVideoDetail<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post<T>({\n    url: `/video/detail/${id}`\n  });\n}\n// 获取用户视频\nexport async function getUserVideo<T = IResponseType<any>>(\n  id: string,\n  keyword: string,\n  offset: number,\n  limit: number\n) {\n  return await gbRequest.post<T>({\n    url: `/user/video/${id}`,\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      keyword\n    }\n  });\n}\n// 获取用户视频\nexport async function getUserHotVideo<T = IResponseType<any>>(\n  id: string,\n  keyword: string,\n  offset: number,\n  limit: number\n) {\n  return await gbRequest.post<T>({\n    url: `/user/video/hot/${id}`,\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      keyword\n    }\n  });\n}\n// 获取订阅用户视频\nexport async function getSubUserVideo<T = IResponseType<any>>(\n  userId: string,\n  offset: number,\n  limit: number,\n  isMonth: number\n) {\n  return await gbRequest.post<T>({\n    url: `/video/sub/user/${userId}`,\n    params: {\n      offset,\n      limit\n    },\n    data: {\n      isMonth\n    }\n  });\n}\n// 获取用户点赞视频\nexport async function getThumbUserVideo<T = IResponseType<any>>(\n  userId: string,\n  offset: number,\n  limit: number\n) {\n  return await gbRequest.post<T>({\n    url: '/video/thumb/user/' + userId,\n    params: {\n      offset,\n      limit\n    }\n  });\n}\n// 获取相关视频\nexport async function getSimilarVideo<T = IResponseType<any>>(\n  id: string,\n  offset: number,\n  limit: number\n) {\n  return await gbRequest.post<T>({\n    url: '/video/similar/' + id,\n    params: {\n      offset,\n      limit\n    }\n  });\n}\nexport async function getCollectionVideo<T = IResponseType<any>>(\n  id: string,\n  offset: number,\n  limit: number\n) {\n  return await gbRequest.post<T>({\n    url: '/video/collection/' + id,\n    params: {\n      offset,\n      limit\n    }\n  });\n}\nexport async function recordVideo<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post<T>({\n    url: '/record/' + id\n  });\n}\nexport async function getUserRecordVideo<T = IResponseType<any>>(id: string) {\n  return await gbRequest.get<T>({\n    url: '/record/user/' + id\n  });\n}\nexport async function getUserRecordThumb<T = IResponseType<any>>(id: string) {\n  return await gbRequest.get<T>({\n    url: '/record/thumb/' + id\n  });\n}\nexport async function addPlayCount<T = IResponseType<any>>(id: string) {\n  return await gbRequest.post<T>({\n    url: 'video/playCount/' + id\n  });\n}\nexport async function getCarousel<T = IResponseType<any>>() {\n  return await gbRequest.get<T>({\n    url: '/video/carousel/all'\n  });\n}\nexport async function getCateVideo<T = IResponseType<any>>(\n  id: string,\n  offset: number,\n  limit: number\n) {\n  return await gbRequest.post<T>({\n    url: '/video/cate/' + id,\n    params: {\n      offset,\n      limit\n    }\n  });\n}\n","import styled from 'styled-components';\nexport const CommunityWrapper = styled.div`\n  .img-container {\n    width: 100%;\n    height: ${180 / 40}rem;\n    display: flex;\n    justify-content: center;\n    background-color: var(--line-color);\n    img {\n      height: 100%;\n    }\n  }\n`;\n","import styled from 'styled-components';\nexport const VideoListWrapper = styled.div`\n  min-height: ${200 / 40}rem;\n  .header-content {\n    display: flex;\n    align-items: center;\n  }\n  .vio-list {\n    display: flex;\n    justify-content: space-between;\n    margin: ${20 / 40}rem 0 0 0;\n    flex-wrap: wrap;\n    & > li {\n      width: ${240 / 40}rem;\n      margin: 0 0 ${15 / 40}rem 0;\n      border: 1px solid var(--line-color);\n      padding: ${10 / 40}rem;\n      border-radius: 4px;\n      &:hover {\n        border-color: #3399ff;\n      }\n      &.active {\n        border-color: #3399ff;\n      }\n      .img-container {\n        width: ${220 / 40}rem;\n        img {\n          vertical-align: middle;\n          width: 100%;\n        }\n      }\n      .name {\n        font-size: ${18 / 40}rem;\n        margin: ${15 / 40}rem 0;\n        word-break: break-all;\n      }\n      .user-name {\n        font-size: ${16 / 40}rem;\n      }\n    }\n  }\n  .page {\n    display: flex;\n    align-items: center;\n    padding: ${15 / 40}rem 0;\n    justify-content: center;\n  }\n`;\n","import React, { memo, type FC, useState, useImperativeHandle, forwardRef, type Ref } from 'react';\nimport { type IVideo } from '../../../../../../../../types/video/IVideo';\nimport { Input, Pagination, Space } from 'antd';\nimport { VideoListWrapper } from './style';\nimport { getAllVideo, getUserVideo } from '../../../../../../../../network/video';\nimport { useLoginMsg } from '../../../../../../../../hook/useLoginMsg';\nimport { type IResponseType } from '../../../../../../../../types/responseType';\nimport { type IPage } from '../../../../../../../../types/IPage';\nimport HolderCpn from '../../../../../../../../components/holder';\ninterface IVideoListRef {\n  videoSource: IVideo | null;\n}\ninterface IProps {\n  ref: Ref<IVideoListRef>;\n}\nconst { Search } = Input;\nconst VideoList: FC<IProps> = forwardRef<IVideoListRef, IProps>((props, propsRef) => {\n  const [currentIndex, setCurrentIndex] = useState<number>(-1);\n  const [videoList, setVideList] = useState<IVideo[]>([]);\n  const [total, setTotal] = useState<number>(0);\n  const [isSelf, setIsSelf] = useState<boolean>(true);\n  const [keyword, setKeyword] = useState<string>('');\n  const [videoItem, setVideoItem] = useState<IVideo | null>(null);\n  const loginMsg = useLoginMsg();\n  const getVideoList = async (offset: number, limit: number, keyword: string, isSelf: boolean) => {\n    if (isSelf) {\n      const result = await getUserVideo<IResponseType<IPage<IVideo[]>>>(\n        loginMsg.userMsg.userId,\n        keyword,\n        offset,\n        limit\n      );\n      if (result.status === 200) {\n        setTotal(result.data.count);\n        setVideList(result.data.list);\n      }\n    } else {\n      const result = await getAllVideo<IResponseType<IPage<IVideo[]>>>(offset, limit, keyword);\n      if (result.status === 200) {\n        setTotal(result.data.count);\n        setVideList(result.data.list);\n      }\n    }\n  };\n  const onSelfSearch = async (value: string) => {\n    setIsSelf(true);\n    setKeyword(value);\n    await getVideoList(0, 8, value, true);\n  };\n  const onAllSearch = async (value: string) => {\n    setIsSelf(false);\n    setKeyword(value);\n    await getVideoList(0, 8, value, false);\n  };\n  useImperativeHandle<IVideoListRef, IVideoListRef>(propsRef, () => {\n    return {\n      videoSource: videoItem\n    };\n  });\n  const selectVideo = (item: IVideo, index: number) => {\n    setCurrentIndex(index);\n    setVideoItem(item);\n  };\n  const pageChange = async (e: number) => {\n    await getVideoList((e - 1) * 8, 8, keyword, isSelf);\n  };\n  return (\n    <VideoListWrapper>\n      <div className=\"header-content\">\n        <Search placeholder=\"搜索您的视频\" onSearch={onSelfSearch} />\n        <Search placeholder=\"搜索codergb-hub全站视频\" onSearch={onAllSearch} />\n      </div>\n      <ul className=\"vio-list\">\n        {videoList &&\n          videoList.length !== 0 &&\n          videoList.map((item, index) => {\n            return (\n              <li\n                key={item.id}\n                onClick={(e) => {\n                  selectVideo(item, index);\n                }}\n                className={currentIndex === index ? 'active' : ''}\n              >\n                <div className=\"img-container\">\n                  <img src={item.picUrl} />\n                </div>\n                <div className=\"name text-nowrap\" title={item.name}>\n                  {item.name}\n                </div>\n                <div className=\"user-name\">{item.user.userName}</div>\n              </li>\n            );\n          })}\n        {HolderCpn(videoList.length, 4, 240)}\n      </ul>\n      {total > 8 && (\n        <div className={'page'}>\n          <Pagination\n            defaultCurrent={1}\n            pageSize={8}\n            total={total}\n            onChange={async (e) => {\n              await pageChange(e);\n            }}\n          />\n        </div>\n      )}\n    </VideoListWrapper>\n  );\n});\nexport default memo(VideoList);\n","import styled from 'styled-components';\n\nexport const MomentListWrapper = styled.div`\n  margin: ${30 / 40}rem ${30 / 40}rem 0 0;\n\n  .moment-list {\n    & > li {\n      display: flex;\n      align-items: flex-start;\n      border: 1px solid #e5e5e5;\n      margin: 0 0 ${30 / 40}rem 0;\n      border-radius: ${12 / 40}rem;\n      padding: ${16 / 40}rem ${30 / 40}rem ${30 / 40}rem ${16 / 40}rem;\n\n      .avatar-container {\n        width: ${50 / 40}rem;\n        height: ${50 / 40}rem;\n        border-radius: 50%;\n        overflow: hidden;\n\n        img {\n          width: 100%;\n        }\n      }\n\n      .right-container {\n        margin: 0 0 0 ${20 / 40}rem;\n        flex: 1;\n        position: relative;\n\n        .operation {\n          position: absolute;\n          left: 100%;\n          top: 2%;\n          transform: translate(-120%, 0);\n          cursor: pointer;\n\n          .more-icon {\n            cursor: pointer;\n\n            svg {\n              font-size: ${34 / 40}rem;\n            }\n          }\n        }\n\n        .g-user-info {\n          display: flex;\n          align-items: center;\n\n          .user-name {\n            font-size: ${16 / 40}rem;\n            font-weight: bolder;\n            margin: 0 ${12 / 40}rem 0 0;\n          }\n\n          .create-time {\n            font-size: ${16 / 40}rem;\n            color: #606060;\n          }\n        }\n\n        .title {\n          color: #065fd4;\n          font-size: ${20 / 40}rem;\n          margin: ${15 / 40}rem 0;\n          cursor: pointer;\n        }\n\n        .content {\n          text-indent: 2em;\n          font-size: ${18 / 40}rem;\n          cursor: pointer;\n        }\n\n        .video-container {\n          width: ${400 / 40}rem;\n          margin: ${20 / 40}rem 0;\n\n          img {\n            width: 100%;\n            cursor: pointer;\n          }\n        }\n\n        .thumb {\n          display: inline-flex;\n          align-items: center;\n\n          .tread {\n            border-left: 1px solid #d9d9d9;\n            padding: 0 0 0 ${18 / 40}rem;\n            margin: 0 0 0 ${18 / 40}rem;\n          }\n        }\n\n        .thumb {\n          cursor: pointer;\n          background-color: #f2f2f2;\n          padding: ${9 / 40}rem ${18 / 40}rem ${5 / 40}rem;\n          border-radius: ${20 / 40}rem;\n\n          .thumb-icon,\n          .collection-icon,\n          .tread-icon {\n            svg {\n              font-size: ${24 / 40}rem;\n            }\n          }\n\n          .label {\n            margin: 0 0 0 ${15 / 40}rem;\n          }\n\n          .thumb-icon-active {\n            svg {\n              color: #ff0000;\n            }\n          }\n        }\n      }\n    }\n  }\n  .page {\n    display: flex;\n    justify-content: center;\n    padding: ${20 / 40}rem 0 ${30 / 40}rem 0;\n  }\n`;\n","import React, {\n  memo,\n  type FC,\n  useEffect,\n  useState,\n  useImperativeHandle,\n  forwardRef,\n  type Ref,\n  Fragment\n} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { MomentListWrapper } from './style';\nimport { deleteMoment, getChannelMoment } from '../../../../../../../../network/moment';\nimport { type IMoment } from '../../../../../../../../types/moment';\nimport { type IResponseType } from '../../../../../../../../types/responseType';\nimport { type IPage } from '../../../../../../../../types/IPage';\nimport timeMoment from 'moment';\nimport { Dropdown, Menu, Pagination, message } from 'antd';\nimport Operation from './childCpn/operation';\nimport {\n  DislikeFilled,\n  DislikeOutlined,\n  LikeFilled,\n  LikeOutlined,\n  MoreOutlined\n} from '@ant-design/icons';\nimport MenuItem from 'antd/lib/menu/MenuItem';\ninterface IMomentList {\n  getChannelMomentReq: (id: string, offset: number, limit: number) => void;\n}\ninterface IProps {\n  cId: string;\n  ref: Ref<IMomentList>;\n}\nconst MomentList: FC<IProps> = forwardRef((props, propsRef) => {\n  const { cId } = props;\n  const [total, setTotal] = useState<number>(0);\n  const [moment, setMoment] = useState<IMoment[]>([]);\n  const getChannelMomentReq = async (id: string, offset: number, limit: number) => {\n    const result = await getChannelMoment<IResponseType<IPage<IMoment[]>>>(id, offset, limit);\n    if (result.status === 200) {\n      setTotal(result.data.count);\n      setMoment(result.data.list);\n    }\n  };\n  useImperativeHandle(propsRef, () => {\n    return {\n      getChannelMomentReq\n    };\n  });\n  useEffect(() => {\n    getChannelMomentReq(cId, 0, 10).then(() => {});\n  }, [cId]);\n  const pageChange = (e: number) => {\n    getChannelMomentReq(cId, (e - 1) * 10, 10).then(() => {});\n  };\n  const navigate = useNavigate();\n  const momentRouter = (item: IMoment) => {\n    navigate('/home/moment', {\n      replace: false,\n      state: {\n        id: item.id\n      }\n    });\n  };\n  const drodownHandler = (e: any, item: IMoment) => {\n    console.log(e);\n    const { key } = e;\n    if (key === 'del') {\n      deleteMoment(item.id).then((res) => {\n        if (res.status === 200) {\n          message.info('删除成功');\n          getChannelMomentReq(cId, 0, 10).then(() => {});\n        }\n      });\n    }\n  };\n  return (\n    <MomentListWrapper>\n      <ul className=\"moment-list\">\n        {moment &&\n          moment.length !== 0 &&\n          moment.map((item, index) => {\n            return (\n              <li key={item.id}>\n                <div className=\"avatar-container\">\n                  <img src={item.user.avatarUrl} />\n                </div>\n                <div className=\"right-container\">\n                  <div className=\"operation\">\n                    <Dropdown\n                      trigger={['click']}\n                      overlay={\n                        <Menu\n                          onClick={(e) => {\n                            drodownHandler(e, item);\n                          }}\n                        >\n                          <Menu.Item key=\"del\">\n                            <div>删除</div>\n                          </Menu.Item>\n                        </Menu>\n                      }\n                      placement=\"bottom\"\n                    >\n                      <MoreOutlined className=\"more-icon\" />\n                    </Dropdown>\n                  </div>\n                  <div className=\"g-user-info\">\n                    <p className=\"user-name\">{item.user.userName}</p>\n                    <p className=\"create-time\">{timeMoment(item.createTime).fromNow()}</p>\n                  </div>\n                  <p\n                    className=\"title\"\n                    onClick={() => {\n                      momentRouter(item);\n                    }}\n                  >\n                    {item.title}\n                  </p>\n                  <p className=\"content\">{item.content}</p>\n                  <div\n                    className=\"video-container\"\n                    onClick={() => {\n                      momentRouter(item);\n                    }}\n                  >\n                    <img src={item.video.picUrl} />\n                  </div>\n                  <div className=\"thumb\">\n                    <div className=\"thumb-inner\">\n                      <LikeOutlined className={`thumb-icon`} />\n                      <LikeFilled className={`thumb-icon`} />\n                      <span className=\"label\">14万</span>\n                    </div>\n                    <div className=\"tread\">\n                      <DislikeOutlined className=\"tread-icon\" />\n                      <DislikeFilled className=\"tread-icon\" />\n                    </div>\n                  </div>\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n      {total > 10 && (\n        <Fragment>\n          <div className={'page'}>\n            <Pagination\n              defaultCurrent={1}\n              pageSize={10}\n              total={total}\n              onChange={(e) => {\n                pageChange(e);\n              }}\n            />\n          </div>\n        </Fragment>\n      )}\n    </MomentListWrapper>\n  );\n});\nexport default memo(MomentList);\n/*\n  \n*/\n","import React, { memo, FC, useState, useRef } from 'react';\nimport { FormOutlined, PlusOutlined, RadiusBottomrightOutlined } from '@ant-design/icons';\nimport { Button, Modal, Form, Input, FormInstance, message, notification } from 'antd';\nimport { CommunityWrapper } from './style';\nimport VideoList from './childCpn/videoList';\nimport { IVideo } from '../../../../../../types/video/IVideo';\nimport { createMoment } from '../../../../../../network/moment';\nimport { useLoginMsg } from '../../../../../../hook/useLoginMsg';\nimport { login } from '../../../../../../network/login';\nimport MomentList from './childCpn/momentList';\nimport { channel } from 'diagnostics_channel';\ninterface IVideoListRef {\n  videoSource: IVideo | null;\n}\ninterface IMomentList {\n  getChannelMomentReq: (id: string, offset: number, limit: number) => void;\n}\ninterface IProps {\n  userId: string;\n  cId: string;\n  isShowPub?: boolean;\n}\nconst { TextArea } = Input;\nconst Community: FC<IProps> = (props) => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const formRef = useRef<FormInstance | null>(null);\n  const loginMsg = useLoginMsg();\n  const publishClick = () => {\n    formRef.current?.resetFields();\n    setIsModalOpen(true);\n    setVideoSource(null);\n  };\n  const momentRef = useRef<IMomentList | null>(null);\n  const handleOk = () => {\n    formRef.current?.validateFields().then(async (value) => {\n      const result = await createMoment(\n        value.title,\n        value.content,\n        value.videoId,\n        props.userId,\n        props.cId\n      );\n      if (result.status === 200) {\n        setIsModalOpen(false);\n        momentRef.current?.getChannelMomentReq(props.cId, 0, 15);\n        notification.info({\n          message: '动态创建成功',\n          description: '请在您的频道社区查看您的发布',\n          placement: 'bottomLeft'\n        });\n      }\n    });\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n  const [isShowVideoModel, setShowVideoModel] = useState<boolean>(false);\n  const selectVideo = () => {\n    setShowVideoModel(true);\n  };\n  const videoListRef = useRef<IVideoListRef | null>(null);\n  const [videoSource, setVideoSource] = useState<IVideo | null>(null);\n  const [videoId, setVideoId] = useState<string>('');\n  const selectFinish = () => {\n    if (videoListRef.current && videoListRef.current.videoSource) {\n      setShowVideoModel(false);\n      setVideoSource(videoListRef.current.videoSource);\n      setVideoId(videoListRef.current.videoSource.id);\n      if (formRef.current)\n        formRef.current.setFieldValue('videoId', videoListRef.current.videoSource.id);\n    } else {\n      message.warning('请选择一个视频');\n    }\n  };\n  const selectCancel = () => {\n    setShowVideoModel(false);\n  };\n  return (\n    <CommunityWrapper>\n      {(loginMsg.userMsg.userId === props.userId || props.isShowPub) && (\n        <div className=\"publish-btn\">\n          <Button type=\"primary\" icon={<FormOutlined />} onClick={(e) => publishClick()}>\n            发表你的看法\n          </Button>\n        </div>\n      )}\n      <Modal\n        title=\"发布动态\"\n        open={isModalOpen}\n        maskClosable={false}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        destroyOnClose={true}\n      >\n        <Form\n          ref={formRef}\n          name=\"basic\"\n          labelCol={{ span: 8 }}\n          wrapperCol={{ span: 167 }}\n          initialValues={{ remember: true }}\n          autoComplete=\"off\"\n          layout={'vertical'}\n        >\n          <Form.Item\n            label=\"标题\"\n            name=\"title\"\n            rules={[{ required: true, message: '为你的动态添加一个标题吧!' }]}\n          >\n            <Input size=\"large\" placeholder={'添加精彩标题'} />\n          </Form.Item>\n\n          <Form.Item\n            label=\"内容\"\n            name=\"content\"\n            rules={[{ required: true, message: '请添加你的动态内容' }]}\n          >\n            <TextArea rows={4} placeholder=\"发表你所想\" maxLength={300} />\n          </Form.Item>\n          <Form.Item\n            label=\"视频\"\n            name=\"videoId\"\n            valuePropName={'videoId'}\n            rules={[{ required: true, message: '添加视频丰富一下你的动态吧' }]}\n          >\n            {videoSource && videoSource.picUrl && (\n              <div className=\"moment-out-of-body-img-container\">\n                <img src={videoSource.picUrl} />\n              </div>\n            )}\n            <Button type=\"dashed\" onClick={() => selectVideo()} block icon={<PlusOutlined />}>\n              选择视频\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Modal\n        title={'视频列表'}\n        open={isShowVideoModel}\n        maskClosable={false}\n        onOk={selectFinish}\n        onCancel={selectCancel}\n        destroyOnClose={true}\n        width={'60%'}\n      >\n        <VideoList ref={videoListRef} />\n      </Modal>\n      {/*频道动态*/}\n      {props.cId && <MomentList cId={props.cId} ref={momentRef} />}\n    </CommunityWrapper>\n  );\n};\nexport default memo(Community);\n"],"names":["HolderCpn","total","lineCount","width","count","line","s","i","Math","ceil","push","holder","map","item","index","React","key","style","height","border","padding","margin","outline","useLoginMsg","useSelector","state","getIn","async","createMoment","title","content","vid","userId","cId","gbRequest","post","url","data","getChannelMoment","id","offset","limit","params","getMomentDetail","deleteMoment","uploadVideo","formData","headers","createVideo","videoId","desc","imgId","playlistId","tagIds","cateId","dt","getAllVideo","keyword","getVideoURL","get","getVideoDetail","getUserVideo","getUserHotVideo","getSubUserVideo","isMonth","getThumbUserVideo","getSimilarVideo","getCollectionVideo","recordVideo","getUserRecordVideo","getUserRecordThumb","addPlayCount","getCarousel","getCateVideo","CommunityWrapper","styled","div","VideoListWrapper","Search","Input","VideoList","forwardRef","props","propsRef","currentIndex","setCurrentIndex","useState","videoList","setVideList","setTotal","isSelf","setIsSelf","setKeyword","videoItem","setVideoItem","loginMsg","getVideoList","result","userMsg","status","list","useImperativeHandle","videoSource","className","placeholder","onSearch","value","length","onClick","e","selectVideo","src","picUrl","name","user","userName","Pagination","defaultCurrent","pageSize","onChange","pageChange","memo","MomentListWrapper","MomentList","moment","setMoment","getChannelMomentReq","useEffect","then","navigate","useNavigate","momentRouter","replace","avatarUrl","Dropdown","trigger","overlay","Menu","drodownHandler","console","log","res","message","info","Item","placement","MoreOutlined","timeMoment","createTime","fromNow","video","LikeOutlined","LikeFilled","DislikeOutlined","DislikeFilled","Fragment","TextArea","Community","isModalOpen","setIsModalOpen","formRef","useRef","momentRef","isShowVideoModel","setShowVideoModel","videoListRef","setVideoSource","setVideoId","isShowPub","Button","type","icon","FormOutlined","current","resetFields","Modal","open","maskClosable","onOk","handleOk","validateFields","notification","description","onCancel","handleCancel","destroyOnClose","Form","ref","labelCol","span","wrapperCol","initialValues","remember","autoComplete","layout","label","rules","required","size","rows","maxLength","valuePropName","block","PlusOutlined","selectFinish","setFieldValue","warning","selectCancel"],"sourceRoot":""}